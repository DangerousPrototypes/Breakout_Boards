

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Nov 17 15:52:55 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1829
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 21 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 21 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
    51  8007  EFA4               	dw 0xFFFC&0xFFE7&0xFFFF&0xFFBF&0xFFFF&0xFFFF&0xFFFF&0xFFFF&0xEFFF&0xFFFF ;#
    52                           # 22 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 22 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
    55  8008  DEFF               	dw 0xFEFF&0xFFFF&0xDFFF ;#
    56                           	FNCALL	_main,_init
    57                           	FNCALL	_main,_isEE
    58                           	FNCALL	_main,_doEE
    59                           	FNCALL	_main,_I2CADCworker
    60                           	FNCALL	_main,_UARTworker
    61                           	FNCALL	_main,_nullfunc1
    62                           	FNCALL	_main,_I2CEEworker
    63                           	FNCALL	_main,_I2CDACworker
    64                           	FNCALL	_doEE,_teletype
    65                           	FNCALL	_teletype,_UARTwrite
    66                           	FNCALL	_UARTworker,_UARTread
    67                           	FNCALL	_UARTworker,_UARTwrite
    68                           	FNCALL	_I2CDACworker,_enableDAC
    69                           	FNCALL	_I2CDACworker,_setDAC
    70                           	FNCALL	_I2CDACworker,_getADC
    71                           	FNCALL	_I2CDACworker,_I2CWrite
    72                           	FNCALL	_I2CADCworker,_enableTS
    73                           	FNCALL	_I2CADCworker,_getADC
    74                           	FNCALL	_I2CADCworker,_I2CWrite
    75                           	FNCALL	_I2CEEworker,_EEPROMwrite
    76                           	FNCALL	_I2CEEworker,_EEPROMread
    77                           	FNCALL	_I2CEEworker,_I2CWrite
    78                           	FNCALL	_init,_initSPI
    79                           	FNCALL	_init,_initI2C
    80                           	FNCALL	_init,_initUART
    81                           	FNROOT	_main
    82                           	FNCALL	intlevel1,_isr
    83                           	global	intlevel1
    84                           	FNROOT	intlevel1
    85                           	global	_protos
    86                           psect	idataBANK0,class=CODE,space=0,delta=2
    87                           global __pidataBANK0
    88  0731                     __pidataBANK0:
    89                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
    90                           	line	36
    91                           
    92                           ;initializer for _protos
    93  0731  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
    94  0732  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
    95  0733  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
    96  0734  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
    97  0735  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
    98  0736  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
    99  0737  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   100  0738  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   101  0739  3409               	retlw	(fp__I2CADCworker-fpbase)&0ffh
   102  073A  3407               	retlw	(fp__I2CDACworker-fpbase)&0ffh
   103  073B  3405               	retlw	(fp__I2CEEworker-fpbase)&0ffh
   104  073C  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   105  073D  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   106  073E  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   107  073F  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   108  0740  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   109                           	global	_ringbuff
   110                           	global	_mode_device
   111                           	global	_mode_protocol
   112                           	global	_rhead
   113                           	global	_rtail
   114                           	global	_mode
   115                           psect	nvBANK0,class=BANK0,space=1
   116                           global __pnvBANK0
   117  004A                     __pnvBANK0:
   118  004A                     _mode:
   119  004A                            ds      1
   120                           
   121                           	global	_PORTA
   122  000C                     _PORTA	set	12
   123                           	global	_PORTB
   124  000D                     _PORTB	set	13
   125                           	global	_PORTC
   126  000E                     _PORTC	set	14
   127                           	global	_CARRY
   128  0018                     _CARRY	set	24
   129                           	global	_GIE
   130  005F                     _GIE	set	95
   131                           	global	_RB4
   132  006C                     _RB4	set	108
   133                           	global	_RB6
   134  006E                     _RB6	set	110
   135                           	global	_RC0
   136  0070                     _RC0	set	112
   137                           	global	_RC2
   138  0072                     _RC2	set	114
   139                           	global	_RC3
   140  0073                     _RC3	set	115
   141                           	global	_RC5
   142  0075                     _RC5	set	117
   143                           	global	_RCIF
   144  008D                     _RCIF	set	141
   145                           	global	_SSP2IF
   146  00A0                     _SSP2IF	set	160
   147                           	global	_TXIF
   148  008C                     _TXIF	set	140
   149                           	global	_ADCON0
   150  009D                     _ADCON0	set	157
   151                           	global	_ADCON0bits
   152  009D                     _ADCON0bits	set	157
   153                           	global	_ADCON1
   154  009E                     _ADCON1	set	158
   155                           	global	_ADRESH
   156  009C                     _ADRESH	set	156
   157                           	global	_ADRESL
   158  009B                     _ADRESL	set	155
   159                           	global	_OSCCON
   160  0099                     _OSCCON	set	153
   161                           	global	_TRISA
   162  008C                     _TRISA	set	140
   163                           	global	_TRISB
   164  008D                     _TRISB	set	141
   165                           	global	_TRISC
   166  008E                     _TRISC	set	142
   167                           	global	_RCIE
   168  048D                     _RCIE	set	1165
   169                           	global	_TRISB5
   170  046D                     _TRISB5	set	1133
   171                           	global	_TRISC4
   172  0474                     _TRISC4	set	1140
   173                           	global	_TXIE
   174  048C                     _TXIE	set	1164
   175                           	global	_nWPUEN
   176  04AF                     _nWPUEN	set	1199
   177                           	global	_APFCON0
   178  011D                     _APFCON0	set	285
   179                           	global	_APFCON1
   180  011E                     _APFCON1	set	286
   181                           	global	_DACCON0
   182  0118                     _DACCON0	set	280
   183                           	global	_DACCON1
   184  0119                     _DACCON1	set	281
   185                           	global	_FVRCON
   186  0117                     _FVRCON	set	279
   187                           	global	_LATA
   188  010C                     _LATA	set	268
   189                           	global	_LATB
   190  010D                     _LATB	set	269
   191                           	global	_LATC
   192  010E                     _LATC	set	270
   193                           	global	_EEADR
   194  0191                     _EEADR	set	401
   195                           	global	_ANSELA
   196  018C                     _ANSELA	set	396
   197                           	global	_ANSELB
   198  018D                     _ANSELB	set	397
   199                           	global	_ANSELC
   200  018E                     _ANSELC	set	398
   201                           	global	_EEADRL
   202  0191                     _EEADRL	set	401
   203                           	global	_EECON1
   204  0195                     _EECON1	set	405
   205                           	global	_EECON1bits
   206  0195                     _EECON1bits	set	405
   207                           	global	_EECON2
   208  0196                     _EECON2	set	406
   209                           	global	_EEDATA
   210  0193                     _EEDATA	set	403
   211                           	global	_EEDATL
   212  0193                     _EEDATL	set	403
   213                           	global	_RCREG
   214  0199                     _RCREG	set	409
   215                           	global	_RCSTA
   216  019D                     _RCSTA	set	413
   217                           	global	_SPBRGH
   218  019C                     _SPBRGH	set	412
   219                           	global	_SPBRGL
   220  019B                     _SPBRGL	set	411
   221                           	global	_TXREG
   222  019A                     _TXREG	set	410
   223                           	global	_BRGH
   224  0CF2                     _BRGH	set	3314
   225                           	global	_CREN
   226  0CEC                     _CREN	set	3308
   227                           	global	_RD
   228  0CA8                     _RD	set	3240
   229                           	global	_SPEN
   230  0CEF                     _SPEN	set	3311
   231                           	global	_SYNC
   232  0CF4                     _SYNC	set	3316
   233                           	global	_TRMT
   234  0CF1                     _TRMT	set	3313
   235                           	global	_TXEN
   236  0CF5                     _TXEN	set	3317
   237                           	global	_WR
   238  0CA9                     _WR	set	3241
   239                           	global	_WREN
   240  0CAA                     _WREN	set	3242
   241                           	global	_SSP2ADD
   242  021A                     _SSP2ADD	set	538
   243                           	global	_SSP2BUF
   244  0219                     _SSP2BUF	set	537
   245                           	global	_SSP2CON1
   246  021D                     _SSP2CON1	set	541
   247                           	global	_SSP2CON1bits
   248  021D                     _SSP2CON1bits	set	541
   249                           	global	_SSP2CON3
   250  021F                     _SSP2CON3	set	543
   251                           	global	_SSP2MSK
   252  021B                     _SSP2MSK	set	539
   253                           	global	_SSP2STAT
   254  021C                     _SSP2STAT	set	540
   255                           	global	_SSP2STATbits
   256  021C                     _SSP2STATbits	set	540
   257                           	global	_WPUA
   258  020C                     _WPUA	set	524
   259                           	global	_WPUB
   260  020D                     _WPUB	set	525
   261                           	global	_WPUC
   262  020E                     _WPUC	set	526
   263                           psect	strings,class=STRING,delta=2
   264                           global __pstrings
   265  0000                     __pstrings:
   266                           	global    __stringtab
   267  0000                     __stringtab:
   268                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   269                           global __pstringtext
   270  0200                     __pstringtext:
   271  0200  3400               	retlw	0
   272                           psect	stringtext
   273                           	
   274  0201                     STR_9:	
   275  0201  346D               	retlw	109	;'m'
   276  0202  3461               	retlw	97	;'a'
   277  0203  3464               	retlw	100	;'d'
   278  0204  3465               	retlw	101	;'e'
   279  0205  3420               	retlw	32	;' '
   280  0206  346D               	retlw	109	;'m'
   281  0207  3465               	retlw	101	;'e'
   282  0208  3420               	retlw	32	;' '
   283  0209  3464               	retlw	100	;'d'
   284  020A  346F               	retlw	111	;'o'
   285  020B  3420               	retlw	32	;' '
   286  020C  3477               	retlw	119	;'w'
   287  020D  3465               	retlw	101	;'e'
   288  020E  3469               	retlw	105	;'i'
   289  020F  3472               	retlw	114	;'r'
   290  0210  3464               	retlw	100	;'d'
   291  0211  3420               	retlw	32	;' '
   292  0212  3473               	retlw	115	;'s'
   293  0213  3468               	retlw	104	;'h'
   294  0214  3469               	retlw	105	;'i'
   295  0215  3474               	retlw	116	;'t'
   296  0216  3420               	retlw	32	;' '
   297  0217  346C               	retlw	108	;'l'
   298  0218  3469               	retlw	105	;'i'
   299  0219  346B               	retlw	107	;'k'
   300  021A  3465               	retlw	101	;'e'
   301  021B  3420               	retlw	32	;' '
   302  021C  3450               	retlw	80	;'P'
   303  021D  3457               	retlw	87	;'W'
   304  021E  344D               	retlw	77	;'M'
   305  021F  342C               	retlw	44	;','
   306  0220  3420               	retlw	32	;' '
   307  0221  346D               	retlw	109	;'m'
   308  0222  3465               	retlw	101	;'e'
   309  0223  346D               	retlw	109	;'m'
   310  0224  346F               	retlw	111	;'o'
   311  0225  3472               	retlw	114	;'r'
   312  0226  3479               	retlw	121	;'y'
   313  0227  3465               	retlw	101	;'e'
   314  0228  346D               	retlw	109	;'m'
   315  0229  3475               	retlw	117	;'u'
   316  022A  346C               	retlw	108	;'l'
   317  022B  3461               	retlw	97	;'a'
   318  022C  3474               	retlw	116	;'t'
   319  022D  3469               	retlw	105	;'i'
   320  022E  346F               	retlw	111	;'o'
   321  022F  346E               	retlw	110	;'n'
   322  0230  342C               	retlw	44	;','
   323  0231  3420               	retlw	32	;' '
   324  0232  3463               	retlw	99	;'c'
   325  0233  346F               	retlw	111	;'o'
   326  0234  346E               	retlw	110	;'n'
   327  0235  3476               	retlw	118	;'v'
   328  0236  3465               	retlw	101	;'e'
   329  0237  3472               	retlw	114	;'r'
   330  0238  3474               	retlw	116	;'t'
   331  0239  3420               	retlw	32	;' '
   332  023A  3468               	retlw	104	;'h'
   333  023B  3469               	retlw	105	;'i'
   334  023C  3467               	retlw	103	;'g'
   335  023D  3468               	retlw	104	;'h'
   336  023E  3420               	retlw	32	;' '
   337  023F  3476               	retlw	118	;'v'
   338  0240  346F               	retlw	111	;'o'
   339  0241  346C               	retlw	108	;'l'
   340  0242  3474               	retlw	116	;'t'
   341  0243  3461               	retlw	97	;'a'
   342  0244  3467               	retlw	103	;'g'
   343  0245  3465               	retlw	101	;'e'
   344  0246  3473               	retlw	115	;'s'
   345  0247  342E               	retlw	46	;'.'
   346  0248  342E               	retlw	46	;'.'
   347  0249  340D               	retlw	13
   348  024A  340A               	retlw	10
   349  024B  3400               	retlw	0
   350                           psect	stringtext
   351                           	
   352  024C                     STR_3:	
   353  024C  3454               	retlw	84	;'T'
   354  024D  3468               	retlw	104	;'h'
   355  024E  3465               	retlw	101	;'e'
   356  024F  3479               	retlw	121	;'y'
   357  0250  3420               	retlw	32	;' '
   358  0251  3470               	retlw	112	;'p'
   359  0252  3475               	retlw	117	;'u'
   360  0253  3474               	retlw	116	;'t'
   361  0254  3420               	retlw	32	;' '
   362  0255  346D               	retlw	109	;'m'
   363  0256  3465               	retlw	101	;'e'
   364  0257  3420               	retlw	32	;' '
   365  0258  3474               	retlw	116	;'t'
   366  0259  3468               	retlw	104	;'h'
   367  025A  3472               	retlw	114	;'r'
   368  025B  346F               	retlw	111	;'o'
   369  025C  3475               	retlw	117	;'u'
   370  025D  3467               	retlw	103	;'g'
   371  025E  3468               	retlw	104	;'h'
   372  025F  3420               	retlw	32	;' '
   373  0260  3465               	retlw	101	;'e'
   374  0261  346E               	retlw	110	;'n'
   375  0262  3464               	retlw	100	;'d'
   376  0263  346C               	retlw	108	;'l'
   377  0264  3465               	retlw	101	;'e'
   378  0265  3473               	retlw	115	;'s'
   379  0266  3473               	retlw	115	;'s'
   380  0267  3420               	retlw	32	;' '
   381  0268  3468               	retlw	104	;'h'
   382  0269  346F               	retlw	111	;'o'
   383  026A  3475               	retlw	117	;'u'
   384  026B  3472               	retlw	114	;'r'
   385  026C  3473               	retlw	115	;'s'
   386  026D  3420               	retlw	32	;' '
   387  026E  346F               	retlw	111	;'o'
   388  026F  3466               	retlw	102	;'f'
   389  0270  3420               	retlw	32	;' '
   390  0271  3472               	retlw	114	;'r'
   391  0272  3465               	retlw	101	;'e'
   392  0273  3467               	retlw	103	;'g'
   393  0274  3472               	retlw	114	;'r'
   394  0275  3465               	retlw	101	;'e'
   395  0276  3473               	retlw	115	;'s'
   396  0277  3473               	retlw	115	;'s'
   397  0278  3469               	retlw	105	;'i'
   398  0279  346F               	retlw	111	;'o'
   399  027A  346E               	retlw	110	;'n'
   400  027B  3420               	retlw	32	;' '
   401  027C  3474               	retlw	116	;'t'
   402  027D  3465               	retlw	101	;'e'
   403  027E  3473               	retlw	115	;'s'
   404  027F  3474               	retlw	116	;'t'
   405  0280  342E               	retlw	46	;'.'
   406  0281  342E               	retlw	46	;'.'
   407  0282  340D               	retlw	13
   408  0283  340A               	retlw	10
   409  0284  3400               	retlw	0
   410                           psect	stringtext
   411                           	
   412  0285                     STR_5:	
   413  0285  342E               	retlw	46	;'.'
   414  0286  3463               	retlw	99	;'c'
   415  0287  346F               	retlw	111	;'o'
   416  0288  346E               	retlw	110	;'n'
   417  0289  346E               	retlw	110	;'n'
   418  028A  3465               	retlw	101	;'e'
   419  028B  3463               	retlw	99	;'c'
   420  028C  3474               	retlw	116	;'t'
   421  028D  3465               	retlw	101	;'e'
   422  028E  3464               	retlw	100	;'d'
   423  028F  3420               	retlw	32	;' '
   424  0290  346D               	retlw	109	;'m'
   425  0291  3465               	retlw	101	;'e'
   426  0292  3420               	retlw	32	;' '
   427  0293  3474               	retlw	116	;'t'
   428  0294  346F               	retlw	111	;'o'
   429  0295  3420               	retlw	32	;' '
   430  0296  3477               	retlw	119	;'w'
   431  0297  3465               	retlw	101	;'e'
   432  0298  3469               	retlw	105	;'i'
   433  0299  3472               	retlw	114	;'r'
   434  029A  3464               	retlw	100	;'d'
   435  029B  3420               	retlw	32	;' '
   436  029C  3470               	retlw	112	;'p'
   437  029D  3472               	retlw	114	;'r'
   438  029E  346F               	retlw	111	;'o'
   439  029F  3474               	retlw	116	;'t'
   440  02A0  346F               	retlw	111	;'o'
   441  02A1  3474               	retlw	116	;'t'
   442  02A2  3479               	retlw	121	;'y'
   443  02A3  3470               	retlw	112	;'p'
   444  02A4  3465               	retlw	101	;'e'
   445  02A5  3473               	retlw	115	;'s'
   446  02A6  342E               	retlw	46	;'.'
   447  02A7  342E               	retlw	46	;'.'
   448  02A8  342E               	retlw	46	;'.'
   449  02A9  340D               	retlw	13
   450  02AA  340A               	retlw	10
   451  02AB  3400               	retlw	0
   452                           psect	stringtext
   453                           	
   454  02AC                     STR_10:	
   455  02AC  3443               	retlw	67	;'C'
   456  02AD  344F               	retlw	79	;'O'
   457  02AE  3455               	retlw	85	;'U'
   458  02AF  344C               	retlw	76	;'L'
   459  02B0  3444               	retlw	68	;'D'
   460  02B1  3420               	retlw	32	;' '
   461  02B2  3459               	retlw	89	;'Y'
   462  02B3  344F               	retlw	79	;'O'
   463  02B4  3455               	retlw	85	;'U'
   464  02B5  3420               	retlw	32	;' '
   465  02B6  3450               	retlw	80	;'P'
   466  02B7  344C               	retlw	76	;'L'
   467  02B8  3445               	retlw	69	;'E'
   468  02B9  3441               	retlw	65	;'A'
   469  02BA  3453               	retlw	83	;'S'
   470  02BB  3445               	retlw	69	;'E'
   471  02BC  3420               	retlw	32	;' '
   472  02BD  344C               	retlw	76	;'L'
   473  02BE  3445               	retlw	69	;'E'
   474  02BF  3441               	retlw	65	;'A'
   475  02C0  3456               	retlw	86	;'V'
   476  02C1  3445               	retlw	69	;'E'
   477  02C2  3420               	retlw	32	;' '
   478  02C3  344D               	retlw	77	;'M'
   479  02C4  3445               	retlw	69	;'E'
   480  02C5  3420               	retlw	32	;' '
   481  02C6  3441               	retlw	65	;'A'
   482  02C7  344C               	retlw	76	;'L'
   483  02C8  344F               	retlw	79	;'O'
   484  02C9  344E               	retlw	78	;'N'
   485  02CA  3445               	retlw	69	;'E'
   486  02CB  343F               	retlw	63	;'?'
   487  02CC  3421               	retlw	33	;'!'
   488  02CD  343F               	retlw	63	;'?'
   489  02CE  3421               	retlw	33	;'!'
   490  02CF  343F               	retlw	63	;'?'
   491  02D0  3421               	retlw	33	;'!'
   492  02D1  3400               	retlw	0
   493                           psect	stringtext
   494                           	
   495  02D2                     STR_4:	
   496  02D2  342E               	retlw	46	;'.'
   497  02D3  342E               	retlw	46	;'.'
   498  02D4  3420               	retlw	32	;' '
   499  02D5  3463               	retlw	99	;'c'
   500  02D6  346F               	retlw	111	;'o'
   501  02D7  346E               	retlw	110	;'n'
   502  02D8  3464               	retlw	100	;'d'
   503  02D9  3475               	retlw	117	;'u'
   504  02DA  3463               	retlw	99	;'c'
   505  02DB  3474               	retlw	116	;'t'
   506  02DC  3465               	retlw	101	;'e'
   507  02DD  3464               	retlw	100	;'d'
   508  02DE  3420               	retlw	32	;' '
   509  02DF  3473               	retlw	115	;'s'
   510  02E0  3465               	retlw	101	;'e'
   511  02E1  3476               	retlw	118	;'v'
   512  02E2  3465               	retlw	101	;'e'
   513  02E3  3472               	retlw	114	;'r'
   514  02E4  3461               	retlw	97	;'a'
   515  02E5  346C               	retlw	108	;'l'
   516  02E6  3420               	retlw	32	;' '
   517  02E7  3474               	retlw	116	;'t'
   518  02E8  3465               	retlw	101	;'e'
   519  02E9  3473               	retlw	115	;'s'
   520  02EA  3474               	retlw	116	;'t'
   521  02EB  3473               	retlw	115	;'s'
   522  02EC  3420               	retlw	32	;' '
   523  02ED  346F               	retlw	111	;'o'
   524  02EE  346E               	retlw	110	;'n'
   525  02EF  3420               	retlw	32	;' '
   526  02F0  346D               	retlw	109	;'m'
   527  02F1  3465               	retlw	101	;'e'
   528  02F2  342E               	retlw	46	;'.'
   529  02F3  342E               	retlw	46	;'.'
   530  02F4  340D               	retlw	13
   531  02F5  340A               	retlw	10
   532  02F6  3400               	retlw	0
   533                           psect	stringtext
   534                           	
   535  02F7                     STR_8:	
   536  02F7  346C               	retlw	108	;'l'
   537  02F8  3465               	retlw	101	;'e'
   538  02F9  3474               	retlw	116	;'t'
   539  02FA  3420               	retlw	32	;' '
   540  02FB  346D               	retlw	109	;'m'
   541  02FC  3465               	retlw	101	;'e'
   542  02FD  3420               	retlw	32	;' '
   543  02FE  3474               	retlw	116	;'t'
   544  02FF  3461               	retlw	97	;'a'
   545  0300  346C               	retlw	108	;'l'
   546  0301  346B               	retlw	107	;'k'
   547  0302  3420               	retlw	32	;' '
   548  0303  3449               	retlw	73	;'I'
   549  0304  3432               	retlw	50	;'2'
   550  0305  3443               	retlw	67	;'C'
   551  0306  342C               	retlw	44	;','
   552  0307  3420               	retlw	32	;' '
   553  0308  3453               	retlw	83	;'S'
   554  0309  3450               	retlw	80	;'P'
   555  030A  3449               	retlw	73	;'I'
   556  030B  342C               	retlw	44	;','
   557  030C  3420               	retlw	32	;' '
   558  030D  3455               	retlw	85	;'U'
   559  030E  3441               	retlw	65	;'A'
   560  030F  3452               	retlw	82	;'R'
   561  0310  3454               	retlw	84	;'T'
   562  0311  342E               	retlw	46	;'.'
   563  0312  342E               	retlw	46	;'.'
   564  0313  342E               	retlw	46	;'.'
   565  0314  342E               	retlw	46	;'.'
   566  0315  342E               	retlw	46	;'.'
   567  0316  342E               	retlw	46	;'.'
   568  0317  340D               	retlw	13
   569  0318  340A               	retlw	10
   570  0319  3400               	retlw	0
   571                           psect	stringtext
   572                           	
   573  031A                     STR_2:	
   574  031A  3449               	retlw	73	;'I'
   575  031B  3427               	retlw	39	;'''
   576  031C  346D               	retlw	109	;'m'
   577  031D  3420               	retlw	32	;' '
   578  031E  3468               	retlw	104	;'h'
   579  031F  3461               	retlw	97	;'a'
   580  0320  3470               	retlw	112	;'p'
   581  0321  3470               	retlw	112	;'p'
   582  0322  3479               	retlw	121	;'y'
   583  0323  3420               	retlw	32	;' '
   584  0324  3474               	retlw	116	;'t'
   585  0325  346F               	retlw	111	;'o'
   586  0326  3420               	retlw	32	;' '
   587  0327  3474               	retlw	116	;'t'
   588  0328  3465               	retlw	101	;'e'
   589  0329  346C               	retlw	108	;'l'
   590  032A  346C               	retlw	108	;'l'
   591  032B  3420               	retlw	32	;' '
   592  032C  3479               	retlw	121	;'y'
   593  032D  346F               	retlw	111	;'o'
   594  032E  3475               	retlw	117	;'u'
   595  032F  3420               	retlw	32	;' '
   596  0330  346D               	retlw	109	;'m'
   597  0331  3479               	retlw	121	;'y'
   598  0332  3420               	retlw	32	;' '
   599  0333  3473               	retlw	115	;'s'
   600  0334  3474               	retlw	116	;'t'
   601  0335  346F               	retlw	111	;'o'
   602  0336  3472               	retlw	114	;'r'
   603  0337  3479               	retlw	121	;'y'
   604  0338  340D               	retlw	13
   605  0339  340A               	retlw	10
   606  033A  3400               	retlw	0
   607                           psect	stringtext
   608                           	
   609  033B                     STR_1:	
   610  033B  3448               	retlw	72	;'H'
   611  033C  3465               	retlw	101	;'e'
   612  033D  346C               	retlw	108	;'l'
   613  033E  346C               	retlw	108	;'l'
   614  033F  346F               	retlw	111	;'o'
   615  0340  342C               	retlw	44	;','
   616  0341  3420               	retlw	32	;' '
   617  0342  346E               	retlw	110	;'n'
   618  0343  3469               	retlw	105	;'i'
   619  0344  3463               	retlw	99	;'c'
   620  0345  3465               	retlw	101	;'e'
   621  0346  3420               	retlw	32	;' '
   622  0347  346F               	retlw	111	;'o'
   623  0348  3466               	retlw	102	;'f'
   624  0349  3420               	retlw	32	;' '
   625  034A  3479               	retlw	121	;'y'
   626  034B  346F               	retlw	111	;'o'
   627  034C  3475               	retlw	117	;'u'
   628  034D  3420               	retlw	32	;' '
   629  034E  3474               	retlw	116	;'t'
   630  034F  346F               	retlw	111	;'o'
   631  0350  3420               	retlw	32	;' '
   632  0351  3464               	retlw	100	;'d'
   633  0352  3472               	retlw	114	;'r'
   634  0353  346F               	retlw	111	;'o'
   635  0354  3470               	retlw	112	;'p'
   636  0355  3420               	retlw	32	;' '
   637  0356  3462               	retlw	98	;'b'
   638  0357  3479               	retlw	121	;'y'
   639  0358  340D               	retlw	13
   640  0359  340A               	retlw	10
   641  035A  3400               	retlw	0
   642                           psect	stringtext
   643                           	
   644  035B                     STR_7:	
   645  035B  3475               	retlw	117	;'u'
   646  035C  3473               	retlw	115	;'s'
   647  035D  3465               	retlw	101	;'e'
   648  035E  3464               	retlw	100	;'d'
   649  035F  3420               	retlw	32	;' '
   650  0360  3448               	retlw	72	;'H'
   651  0361  3469               	retlw	105	;'i'
   652  0362  345A               	retlw	90	;'Z'
   653  0363  3420               	retlw	32	;' '
   654  0364  346F               	retlw	111	;'o'
   655  0365  346E               	retlw	110	;'n'
   656  0366  3420               	retlw	32	;' '
   657  0367  346D               	retlw	109	;'m'
   658  0368  3465               	retlw	101	;'e'
   659  0369  342E               	retlw	46	;'.'
   660  036A  342E               	retlw	46	;'.'
   661  036B  342E               	retlw	46	;'.'
   662  036C  342E               	retlw	46	;'.'
   663  036D  342E               	retlw	46	;'.'
   664  036E  342E               	retlw	46	;'.'
   665  036F  342E               	retlw	46	;'.'
   666  0370  340D               	retlw	13
   667  0371  340A               	retlw	10
   668  0372  3400               	retlw	0
   669                           psect	stringtext
   670                           	
   671  0373                     STR_6:	
   672  0373  3461               	retlw	97	;'a'
   673  0374  3462               	retlw	98	;'b'
   674  0375  3475               	retlw	117	;'u'
   675  0376  3473               	retlw	115	;'s'
   676  0377  3465               	retlw	101	;'e'
   677  0378  3464               	retlw	100	;'d'
   678  0379  3420               	retlw	32	;' '
   679  037A  346D               	retlw	109	;'m'
   680  037B  3465               	retlw	101	;'e'
   681  037C  3420               	retlw	32	;' '
   682  037D  3477               	retlw	119	;'w'
   683  037E  3469               	retlw	105	;'i'
   684  037F  3474               	retlw	116	;'t'
   685  0380  3468               	retlw	104	;'h'
   686  0381  3420               	retlw	32	;' '
   687  0382  3435               	retlw	53	;'5'
   688  0383  3456               	retlw	86	;'V'
   689  0384  342E               	retlw	46	;'.'
   690  0385  342E               	retlw	46	;'.'
   691  0386  342E               	retlw	46	;'.'
   692  0387  342E               	retlw	46	;'.'
   693  0388  340D               	retlw	13
   694  0389  340A               	retlw	10
   695  038A  3400               	retlw	0
   696                           psect	stringtext
   697                           	file	"BP Demoboard v5.as"
   698                           	line	#
   699                           psect cinit,class=CODE,delta=2
   700                           global start_initialization
   701  0700                     start_initialization:
   702                           
   703                           psect	bssCOMMON,class=COMMON,space=1
   704                           global __pbssCOMMON
   705  0078                     __pbssCOMMON:
   706  0078                     _mode_protocol:
   707  0078                            ds      1
   708                           
   709  0079                     _rhead:
   710  0079                            ds      1
   711                           
   712  007A                     _rtail:
   713  007A                            ds      1
   714                           
   715                           psect	bssBANK0,class=BANK0,space=1
   716                           global __pbssBANK0
   717  0020                     __pbssBANK0:
   718  0020                     _ringbuff:
   719  0020                            ds      16
   720                           
   721  0030                     _mode_device:
   722  0030                            ds      1
   723                           
   724                           psect	dataBANK0,class=BANK0,space=1
   725                           global __pdataBANK0
   726  0031                     __pdataBANK0:
   727                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
   728  0031                     _protos:
   729  0031                            ds      16
   730                           
   731                           psect clrtext,class=CODE,delta=2
   732                           global clear_ram
   733                           ;	Called with FSR0 containing the base address, and
   734                           ;	WREG with the size to clear
   735  0784                     clear_ram:
   736  0784  0064               	clrwdt			;clear the watchdog before getting into this loop
   737  0785                     clrloop:
   738  0785  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   739  0786  3101               	addfsr	0,1
   740  0787  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   741  0788  2F85               	goto clrloop	;have we reached the end yet?
   742  0789  3400               	retlw	0		;all done for this memory range, return
   743                           ; Clear objects allocated to COMMON
   744                           psect cinit,class=CODE,delta=2
   745                           	global __pbssCOMMON
   746  0700  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   747  0701  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   748  0702  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   749                           ; Clear objects allocated to BANK0
   750                           psect cinit,class=CODE,delta=2
   751                           	global __pbssBANK0
   752  0703  3020               	movlw	low(__pbssBANK0)
   753  0704  0084               	movwf	fsr0l
   754  0705  3000               	movlw	high(__pbssBANK0)
   755  0706  0085               	movwf	fsr0h
   756  0707  3011               	movlw	011h
   757  0708  3187  2784  3187   	fcall	clear_ram
   758                           psect inittext,class=CODE,delta=2
   759                           global init_ram,btemp
   760  078A                     init_ram:
   761  078A  00FE               	movwf btemp,f
   762  078B                     initloop:
   763  078B  0012               	moviw fsr0++
   764  078C  001E               	movwi fsr1++
   765  078D  0BFE               	decfsz btemp
   766  078E  2F8B               	goto initloop
   767  078F  3400               	retlw 0
   768                           ; Initialize objects allocated to BANK0
   769                           	global __pidataBANK0,__pdataBANK0
   770                           psect cinit,class=CODE,delta=2
   771  070B  3031               	movlw low(__pidataBANK0)
   772  070C  0084               	movwf fsr0l
   773  070D  3087               	movlw high(__pidataBANK0)|80h
   774  070E  0085               	movwf fsr0h
   775  070F  3031               	movlw low(__pdataBANK0)
   776  0710  0086               	movwf fsr1l
   777  0711  3000               	movlw high(__pdataBANK0)
   778  0712  0087               	movwf fsr1h
   779  0713  3010               	movlw 010h
   780  0714  3187  278A  3187   	fcall init_ram
   781                           psect cinit,class=CODE,delta=2
   782                           global end_of_initialization
   783                           
   784                           ;End of C runtime variable initialization code
   785                           
   786  0717                     end_of_initialization:
   787  0717  0020               movlb 0
   788  0718  3184  2C8A         ljmp _main	;jump to C main() function
   789                           psect	cstackCOMMON,class=COMMON,space=1
   790                           global __pcstackCOMMON
   791  0070                     __pcstackCOMMON:
   792                           	global	?_nullfunc1
   793  0070                     ?_nullfunc1:	; 0 bytes @ 0x0
   794                           	global	?_UARTworker
   795  0070                     ?_UARTworker:	; 0 bytes @ 0x0
   796                           	global	?_I2CADCworker
   797  0070                     ?_I2CADCworker:	; 0 bytes @ 0x0
   798                           	global	?_I2CDACworker
   799  0070                     ?_I2CDACworker:	; 0 bytes @ 0x0
   800                           	global	?_I2CEEworker
   801  0070                     ?_I2CEEworker:	; 0 bytes @ 0x0
   802                           	global	?_init
   803  0070                     ?_init:	; 0 bytes @ 0x0
   804                           	global	?_doEE
   805  0070                     ?_doEE:	; 0 bytes @ 0x0
   806                           	global	?_initSPI
   807  0070                     ?_initSPI:	; 0 bytes @ 0x0
   808                           	global	?_initI2C
   809  0070                     ?_initI2C:	; 0 bytes @ 0x0
   810                           	global	?_initUART
   811  0070                     ?_initUART:	; 0 bytes @ 0x0
   812                           	global	?_I2CWrite
   813  0070                     ?_I2CWrite:	; 0 bytes @ 0x0
   814                           	global	?_enableTS
   815  0070                     ?_enableTS:	; 0 bytes @ 0x0
   816                           	global	?_enableDAC
   817  0070                     ?_enableDAC:	; 0 bytes @ 0x0
   818                           	global	?_setDAC
   819  0070                     ?_setDAC:	; 0 bytes @ 0x0
   820                           	global	?_UARTwrite
   821  0070                     ?_UARTwrite:	; 0 bytes @ 0x0
   822                           	global	?_isr
   823  0070                     ?_isr:	; 0 bytes @ 0x0
   824                           	global	??_isr
   825  0070                     ??_isr:	; 0 bytes @ 0x0
   826                           	global	?_isEE
   827  0070                     ?_isEE:	; 1 bytes @ 0x0
   828                           	global	?_EEPROMread
   829  0070                     ?_EEPROMread:	; 1 bytes @ 0x0
   830                           	global	?_UARTread
   831  0070                     ?_UARTread:	; 1 bytes @ 0x0
   832                           	global	?_main
   833  0070                     ?_main:	; 2 bytes @ 0x0
   834  0070                     	ds	3
   835                           	global	??_nullfunc1
   836  0073                     ??_nullfunc1:	; 0 bytes @ 0x3
   837                           	global	??_isEE
   838  0073                     ??_isEE:	; 0 bytes @ 0x3
   839                           	global	??_initSPI
   840  0073                     ??_initSPI:	; 0 bytes @ 0x3
   841                           	global	??_initI2C
   842  0073                     ??_initI2C:	; 0 bytes @ 0x3
   843                           	global	??_initUART
   844  0073                     ??_initUART:	; 0 bytes @ 0x3
   845                           	global	?_EEPROMwrite
   846  0073                     ?_EEPROMwrite:	; 0 bytes @ 0x3
   847                           	global	??_I2CWrite
   848  0073                     ??_I2CWrite:	; 0 bytes @ 0x3
   849                           	global	??_EEPROMread
   850  0073                     ??_EEPROMread:	; 0 bytes @ 0x3
   851                           	global	??_enableTS
   852  0073                     ??_enableTS:	; 0 bytes @ 0x3
   853                           	global	??_enableDAC
   854  0073                     ??_enableDAC:	; 0 bytes @ 0x3
   855                           	global	??_setDAC
   856  0073                     ??_setDAC:	; 0 bytes @ 0x3
   857                           	global	??_UARTread
   858  0073                     ??_UARTread:	; 0 bytes @ 0x3
   859                           	global	??_UARTwrite
   860  0073                     ??_UARTwrite:	; 0 bytes @ 0x3
   861                           	global	?_getADC
   862  0073                     ?_getADC:	; 2 bytes @ 0x3
   863                           	global	I2CWrite@c
   864  0073                     I2CWrite@c:	; 1 bytes @ 0x3
   865                           	global	UARTwrite@c
   866  0073                     UARTwrite@c:	; 1 bytes @ 0x3
   867                           	global	EEPROMwrite@data
   868  0073                     EEPROMwrite@data:	; 1 bytes @ 0x3
   869                           	global	EEPROMread@addr
   870  0073                     EEPROMread@addr:	; 1 bytes @ 0x3
   871                           	global	setDAC@dac
   872  0073                     setDAC@dac:	; 1 bytes @ 0x3
   873  0073                     	ds	1
   874                           	global	??_EEPROMwrite
   875  0074                     ??_EEPROMwrite:	; 0 bytes @ 0x4
   876                           	global	?_teletype
   877  0074                     ?_teletype:	; 0 bytes @ 0x4
   878                           	global	initUART@i
   879  0074                     initUART@i:	; 1 bytes @ 0x4
   880                           	global	UARTread@temp
   881  0074                     UARTread@temp:	; 1 bytes @ 0x4
   882                           	global	EEPROMwrite@addr
   883  0074                     EEPROMwrite@addr:	; 1 bytes @ 0x4
   884                           	global	teletype@s
   885  0074                     teletype@s:	; 2 bytes @ 0x4
   886  0074                     	ds	1
   887                           	global	??_UARTworker
   888  0075                     ??_UARTworker:	; 0 bytes @ 0x5
   889                           	global	??_I2CEEworker
   890  0075                     ??_I2CEEworker:	; 0 bytes @ 0x5
   891                           	global	??_init
   892  0075                     ??_init:	; 0 bytes @ 0x5
   893                           	global	getADC@adc
   894  0075                     getADC@adc:	; 1 bytes @ 0x5
   895  0075                     	ds	1
   896                           	global	??_teletype
   897  0076                     ??_teletype:	; 0 bytes @ 0x6
   898                           	global	UARTworker@c
   899  0076                     UARTworker@c:	; 1 bytes @ 0x6
   900                           	global	teletype@i
   901  0076                     teletype@i:	; 2 bytes @ 0x6
   902                           	global	getADC@i
   903  0076                     getADC@i:	; 2 bytes @ 0x6
   904  0076                     	ds	2
   905                           	global	??_doEE
   906  0078                     ??_doEE:	; 0 bytes @ 0x8
   907                           psect	cstackBANK0,class=BANK0,space=1
   908                           global __pcstackBANK0
   909  0041                     __pcstackBANK0:
   910                           	global	??_getADC
   911  0041                     ??_getADC:	; 0 bytes @ 0x0
   912                           	global	I2CEEworker@temp
   913  0041                     I2CEEworker@temp:	; 1 bytes @ 0x0
   914  0041                     	ds	1
   915                           	global	I2CEEworker@token
   916  0042                     I2CEEworker@token:	; 1 bytes @ 0x1
   917  0042                     	ds	1
   918                           	global	I2CEEworker@addressed
   919  0043                     I2CEEworker@addressed:	; 1 bytes @ 0x2
   920  0043                     	ds	1
   921                           	global	I2CEEworker@addr
   922  0044                     I2CEEworker@addr:	; 1 bytes @ 0x3
   923  0044                     	ds	1
   924                           	global	??_I2CADCworker
   925  0045                     ??_I2CADCworker:	; 0 bytes @ 0x4
   926                           	global	??_I2CDACworker
   927  0045                     ??_I2CDACworker:	; 0 bytes @ 0x4
   928  0045                     	ds	1
   929                           	global	I2CADCworker@temp
   930  0046                     I2CADCworker@temp:	; 1 bytes @ 0x5
   931                           	global	I2CDACworker@temp
   932  0046                     I2CDACworker@temp:	; 1 bytes @ 0x5
   933  0046                     	ds	1
   934                           	global	I2CADCworker@token
   935  0047                     I2CADCworker@token:	; 1 bytes @ 0x6
   936                           	global	I2CDACworker@token
   937  0047                     I2CDACworker@token:	; 1 bytes @ 0x6
   938  0047                     	ds	1
   939                           	global	I2CADCworker@adc
   940  0048                     I2CADCworker@adc:	; 1 bytes @ 0x7
   941                           	global	I2CDACworker@dac
   942  0048                     I2CDACworker@dac:	; 1 bytes @ 0x7
   943  0048                     	ds	1
   944                           	global	??_main
   945  0049                     ??_main:	; 0 bytes @ 0x8
   946  0049                     	ds	1
   947 ;;Data sizes: Strings 394, constant 0, data 16, bss 20, persistent 1 stack 0
   948 ;;Auto spaces:   Size  Autos    Used
   949 ;; COMMON          14      8      11
   950 ;; BANK0           80      9      43
   951 ;; BANK1           80      0       0
   952 ;; BANK2           80      0       0
   953 ;; BANK3           80      0       0
   954 ;; BANK4           80      0       0
   955 ;; BANK5           80      0       0
   956 ;; BANK6           80      0       0
   957 ;; BANK7           80      0       0
   958 ;; BANK8           80      0       0
   959 ;; BANK9           80      0       0
   960 ;; BANK10          80      0       0
   961 ;; BANK11          80      0       0
   962 ;; BANK12          48      0       0
   963                           
   964 ;;
   965 ;; Pointer list with targets:
   966                           
   967 ;; ?_getADC	unsigned int  size(1) Largest target is 0
   968 ;;
   969 ;; teletype@s	PTR const unsigned char  size(2) Largest target is 75
   970 ;;		 -> STR_10(CODE[38]), STR_9(CODE[75]), STR_8(CODE[35]), STR_7(CODE[24]), 
   971 ;;		 -> STR_6(CODE[24]), STR_5(CODE[39]), STR_4(CODE[37]), STR_3(CODE[57]), 
   972 ;;		 -> STR_2(CODE[33]), STR_1(CODE[32]), 
   973 ;;
   974 ;; S2884_proto$PWMworker	PTR FTN()void  size(1) Largest target is 0
   975 ;;		 -> UARTworker(), nullfunc1(), 
   976 ;;
   977 ;; protos.PWMworker	PTR FTN()void  size(1) Largest target is 0
   978 ;;		 -> UARTworker(), nullfunc1(), 
   979 ;;
   980 ;; S2884_proto$EEPROMworker	PTR FTN()void  size(1) Largest target is 0
   981 ;;		 -> I2CEEworker(), UARTworker(), nullfunc1(), 
   982 ;;
   983 ;; protos.EEPROMworker	PTR FTN()void  size(1) Largest target is 0
   984 ;;		 -> I2CEEworker(), UARTworker(), nullfunc1(), 
   985 ;;
   986 ;; S2884_proto$DACworker	PTR FTN()void  size(1) Largest target is 0
   987 ;;		 -> I2CDACworker(), UARTworker(), nullfunc1(), 
   988 ;;
   989 ;; protos.DACworker	PTR FTN()void  size(1) Largest target is 0
   990 ;;		 -> I2CDACworker(), UARTworker(), nullfunc1(), 
   991 ;;
   992 ;; S2884_proto$ADCworker	PTR FTN()void  size(1) Largest target is 0
   993 ;;		 -> I2CADCworker(), UARTworker(), nullfunc1(), 
   994 ;;
   995 ;; protos.ADCworker	PTR FTN()void  size(1) Largest target is 0
   996 ;;		 -> I2CADCworker(), UARTworker(), nullfunc1(), 
   997 ;;
   998                           
   999                           
  1000 ;;
  1001 ;; Critical Paths under _main in COMMON
  1002 ;;
  1003 ;;   _doEE->_teletype
  1004 ;;   _teletype->_UARTwrite
  1005 ;;   _UARTworker->_UARTread
  1006 ;;   _I2CDACworker->_getADC
  1007 ;;   _I2CADCworker->_getADC
  1008 ;;   _I2CEEworker->_EEPROMwrite
  1009 ;;   _init->_initUART
  1010 ;;
  1011 ;; Critical Paths under _isr in COMMON
  1012 ;;
  1013 ;;   None.
  1014 ;;
  1015 ;; Critical Paths under _main in BANK0
  1016 ;;
  1017 ;;   _main->_I2CADCworker
  1018 ;;   _main->_I2CDACworker
  1019 ;;   _I2CDACworker->_getADC
  1020 ;;   _I2CADCworker->_getADC
  1021 ;;
  1022 ;; Critical Paths under _isr in BANK0
  1023 ;;
  1024 ;;   None.
  1025 ;;
  1026 ;; Critical Paths under _main in BANK1
  1027 ;;
  1028 ;;   None.
  1029 ;;
  1030 ;; Critical Paths under _isr in BANK1
  1031 ;;
  1032 ;;   None.
  1033 ;;
  1034 ;; Critical Paths under _main in BANK2
  1035 ;;
  1036 ;;   None.
  1037 ;;
  1038 ;; Critical Paths under _isr in BANK2
  1039 ;;
  1040 ;;   None.
  1041 ;;
  1042 ;; Critical Paths under _main in BANK3
  1043 ;;
  1044 ;;   None.
  1045 ;;
  1046 ;; Critical Paths under _isr in BANK3
  1047 ;;
  1048 ;;   None.
  1049 ;;
  1050 ;; Critical Paths under _main in BANK4
  1051 ;;
  1052 ;;   None.
  1053 ;;
  1054 ;; Critical Paths under _isr in BANK4
  1055 ;;
  1056 ;;   None.
  1057 ;;
  1058 ;; Critical Paths under _main in BANK5
  1059 ;;
  1060 ;;   None.
  1061 ;;
  1062 ;; Critical Paths under _isr in BANK5
  1063 ;;
  1064 ;;   None.
  1065 ;;
  1066 ;; Critical Paths under _main in BANK6
  1067 ;;
  1068 ;;   None.
  1069 ;;
  1070 ;; Critical Paths under _isr in BANK6
  1071 ;;
  1072 ;;   None.
  1073 ;;
  1074 ;; Critical Paths under _main in BANK7
  1075 ;;
  1076 ;;   None.
  1077 ;;
  1078 ;; Critical Paths under _isr in BANK7
  1079 ;;
  1080 ;;   None.
  1081 ;;
  1082 ;; Critical Paths under _main in BANK8
  1083 ;;
  1084 ;;   None.
  1085 ;;
  1086 ;; Critical Paths under _isr in BANK8
  1087 ;;
  1088 ;;   None.
  1089 ;;
  1090 ;; Critical Paths under _main in BANK9
  1091 ;;
  1092 ;;   None.
  1093 ;;
  1094 ;; Critical Paths under _isr in BANK9
  1095 ;;
  1096 ;;   None.
  1097 ;;
  1098 ;; Critical Paths under _main in BANK10
  1099 ;;
  1100 ;;   None.
  1101 ;;
  1102 ;; Critical Paths under _isr in BANK10
  1103 ;;
  1104 ;;   None.
  1105 ;;
  1106 ;; Critical Paths under _main in BANK11
  1107 ;;
  1108 ;;   None.
  1109 ;;
  1110 ;; Critical Paths under _isr in BANK11
  1111 ;;
  1112 ;;   None.
  1113 ;;
  1114 ;; Critical Paths under _main in BANK12
  1115 ;;
  1116 ;;   None.
  1117 ;;
  1118 ;; Critical Paths under _isr in BANK12
  1119 ;;
  1120 ;;   None.
  1121                           
  1122 ;;
  1123 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1124 ;;
  1125                           
  1126 ;;
  1127 ;;Call Graph Tables:
  1128 ;;
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (0) _main                                                 1     1      0    1108
  1133 ;;                                              8 BANK0      1     1      0
  1134 ;;                               _init
  1135 ;;                               _isEE
  1136 ;;                               _doEE
  1137 ;;                       _I2CADCworker
  1138 ;;                         _UARTworker
  1139 ;;                          _nullfunc1
  1140 ;;                        _I2CEEworker
  1141 ;;                       _I2CDACworker
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (1) _doEE                                                 0     0      0     113
  1144 ;;                           _teletype
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (2) _teletype                                             5     3      2     113
  1147 ;;                                              4 COMMON     4     2      2
  1148 ;;                          _UARTwrite
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (1) _UARTworker                                           2     2      0      68
  1151 ;;                                              5 COMMON     2     2      0
  1152 ;;                           _UARTread
  1153 ;;                          _UARTwrite
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (1) _I2CDACworker                                         4     4      0     300
  1156 ;;                                              4 BANK0      4     4      0
  1157 ;;                          _enableDAC
  1158 ;;                             _setDAC
  1159 ;;                             _getADC
  1160 ;;                           _I2CWrite
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (1) _I2CADCworker                                         4     4      0     244
  1163 ;;                                              4 BANK0      4     4      0
  1164 ;;                           _enableTS
  1165 ;;                             _getADC
  1166 ;;                           _I2CWrite
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (1) _I2CEEworker                                          5     5      0     315
  1169 ;;                                              5 COMMON     1     1      0
  1170 ;;                                              0 BANK0      4     4      0
  1171 ;;                        _EEPROMwrite
  1172 ;;                         _EEPROMread
  1173 ;;                           _I2CWrite
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (1) _init                                                 1     1      0      68
  1176 ;;                                              5 COMMON     1     1      0
  1177 ;;                            _initSPI
  1178 ;;                            _initI2C
  1179 ;;                           _initUART
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; (2) _UARTwrite                                            1     1      0      22
  1182 ;;                                              3 COMMON     1     1      0
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (2) _UARTread                                             2     2      0      23
  1185 ;;                                              3 COMMON     2     2      0
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; (2) _setDAC                                               1     1      0      22
  1188 ;;                                              3 COMMON     1     1      0
  1189 ;; ---------------------------------------------------------------------------------
  1190 ;; (2) _enableDAC                                            0     0      0       0
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (2) _getADC                                               9     7      2     102
  1193 ;;                                              3 COMMON     5     3      2
  1194 ;;                                              0 BANK0      4     4      0
  1195 ;; ---------------------------------------------------------------------------------
  1196 ;; (2) _enableTS                                             1     1      0       0
  1197 ;;                                              3 COMMON     1     1      0
  1198 ;; ---------------------------------------------------------------------------------
  1199 ;; (2) _I2CWrite                                             1     1      0      31
  1200 ;;                                              3 COMMON     1     1      0
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; (2) _EEPROMread                                           1     1      0      31
  1203 ;;                                              3 COMMON     1     1      0
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (2) _EEPROMwrite                                          2     1      1      62
  1206 ;;                                              3 COMMON     2     1      1
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (2) _initUART                                             2     2      0      68
  1209 ;;                                              3 COMMON     2     2      0
  1210 ;; ---------------------------------------------------------------------------------
  1211 ;; (2) _initI2C                                              1     1      0       0
  1212 ;;                                              3 COMMON     1     1      0
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (2) _initSPI                                              0     0      0       0
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (1) _isEE                                                 0     0      0       0
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (1) _nullfunc1                                            0     0      0       0
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; Estimated maximum stack depth 2
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (4) _isr                                                  3     3      0       0
  1225 ;;                                              0 COMMON     3     3      0
  1226 ;; ---------------------------------------------------------------------------------
  1227 ;; Estimated maximum stack depth 4
  1228 ;; ---------------------------------------------------------------------------------
  1229                           
  1230 ;; Call Graph Graphs:
  1231                           
  1232 ;; _main (ROOT)
  1233 ;;   _init
  1234 ;;     _initSPI
  1235 ;;     _initI2C
  1236 ;;     _initUART
  1237 ;;   _isEE
  1238 ;;   _doEE
  1239 ;;     _teletype
  1240 ;;       _UARTwrite
  1241 ;;   _I2CADCworker
  1242 ;;     _enableTS
  1243 ;;     _getADC
  1244 ;;     _I2CWrite
  1245 ;;   _UARTworker
  1246 ;;     _UARTread
  1247 ;;     _UARTwrite
  1248 ;;   _nullfunc1
  1249 ;;   _I2CEEworker
  1250 ;;     _EEPROMwrite
  1251 ;;     _EEPROMread
  1252 ;;     _I2CWrite
  1253 ;;   _I2CDACworker
  1254 ;;     _enableDAC
  1255 ;;     _setDAC
  1256 ;;     _getADC
  1257 ;;     _I2CWrite
  1258 ;;
  1259 ;; _isr (ROOT)
  1260 ;;
  1261                           
  1262 ;; Address spaces:
  1263                           
  1264 ;;Name               Size   Autos  Total    Cost      Usage
  1265 ;;BIGRAM             3F0      0       0       0        0.0%
  1266 ;;EEDATA             100      0       0       0        0.0%
  1267 ;;NULL                 0      0       0       0        0.0%
  1268 ;;CODE                 0      0       0       0        0.0%
  1269 ;;BITCOMMON            E      0       0       1        0.0%
  1270 ;;BITSFR0              0      0       0       1        0.0%
  1271 ;;SFR0                 0      0       0       1        0.0%
  1272 ;;COMMON               E      8       B       2       78.6%
  1273 ;;BITSFR1              0      0       0       2        0.0%
  1274 ;;SFR1                 0      0       0       2        0.0%
  1275 ;;BITSFR2              0      0       0       3        0.0%
  1276 ;;SFR2                 0      0       0       3        0.0%
  1277 ;;STACK                0      0       3       3        0.0%
  1278 ;;BITBANK0            50      0       0       4        0.0%
  1279 ;;BITSFR3              0      0       0       4        0.0%
  1280 ;;SFR3                 0      0       0       4        0.0%
  1281 ;;BANK0               50      9      2B       5       53.8%
  1282 ;;BITSFR4              0      0       0       5        0.0%
  1283 ;;SFR4                 0      0       0       5        0.0%
  1284 ;;BITBANK1            50      0       0       6        0.0%
  1285 ;;BITSFR5              0      0       0       6        0.0%
  1286 ;;SFR5                 0      0       0       6        0.0%
  1287 ;;BANK1               50      0       0       7        0.0%
  1288 ;;BITSFR6              0      0       0       7        0.0%
  1289 ;;SFR6                 0      0       0       7        0.0%
  1290 ;;BITBANK2            50      0       0       8        0.0%
  1291 ;;BITSFR7              0      0       0       8        0.0%
  1292 ;;SFR7                 0      0       0       8        0.0%
  1293 ;;BANK2               50      0       0       9        0.0%
  1294 ;;BITSFR8              0      0       0       9        0.0%
  1295 ;;SFR8                 0      0       0       9        0.0%
  1296 ;;BITBANK3            50      0       0      10        0.0%
  1297 ;;BITSFR9              0      0       0      10        0.0%
  1298 ;;SFR9                 0      0       0      10        0.0%
  1299 ;;BANK3               50      0       0      11        0.0%
  1300 ;;BITSFR10             0      0       0      11        0.0%
  1301 ;;SFR10                0      0       0      11        0.0%
  1302 ;;BITBANK4            50      0       0      12        0.0%
  1303 ;;BITSFR11             0      0       0      12        0.0%
  1304 ;;SFR11                0      0       0      12        0.0%
  1305 ;;BANK4               50      0       0      13        0.0%
  1306 ;;BITSFR12             0      0       0      13        0.0%
  1307 ;;SFR12                0      0       0      13        0.0%
  1308 ;;BITBANK5            50      0       0      14        0.0%
  1309 ;;BITSFR13             0      0       0      14        0.0%
  1310 ;;SFR13                0      0       0      14        0.0%
  1311 ;;BANK5               50      0       0      15        0.0%
  1312 ;;BITSFR14             0      0       0      15        0.0%
  1313 ;;SFR14                0      0       0      15        0.0%
  1314 ;;BITBANK6            50      0       0      16        0.0%
  1315 ;;BITSFR15             0      0       0      16        0.0%
  1316 ;;SFR15                0      0       0      16        0.0%
  1317 ;;BANK6               50      0       0      17        0.0%
  1318 ;;BITSFR16             0      0       0      17        0.0%
  1319 ;;SFR16                0      0       0      17        0.0%
  1320 ;;BITBANK7            50      0       0      18        0.0%
  1321 ;;BITSFR17             0      0       0      18        0.0%
  1322 ;;SFR17                0      0       0      18        0.0%
  1323 ;;BANK7               50      0       0      19        0.0%
  1324 ;;BITSFR18             0      0       0      19        0.0%
  1325 ;;SFR18                0      0       0      19        0.0%
  1326 ;;BITSFR19             0      0       0      20        0.0%
  1327 ;;SFR19                0      0       0      20        0.0%
  1328 ;;ABS                  0      0      36      20        0.0%
  1329 ;;BITBANK8            50      0       0      21        0.0%
  1330 ;;BITSFR20             0      0       0      21        0.0%
  1331 ;;SFR20                0      0       0      21        0.0%
  1332 ;;BANK8               50      0       0      22        0.0%
  1333 ;;BITSFR21             0      0       0      22        0.0%
  1334 ;;SFR21                0      0       0      22        0.0%
  1335 ;;BITBANK9            50      0       0      23        0.0%
  1336 ;;BITSFR22             0      0       0      23        0.0%
  1337 ;;SFR22                0      0       0      23        0.0%
  1338 ;;BANK9               50      0       0      24        0.0%
  1339 ;;BITSFR23             0      0       0      24        0.0%
  1340 ;;SFR23                0      0       0      24        0.0%
  1341 ;;BITBANK10           50      0       0      25        0.0%
  1342 ;;BITSFR24             0      0       0      25        0.0%
  1343 ;;SFR24                0      0       0      25        0.0%
  1344 ;;BANK10              50      0       0      26        0.0%
  1345 ;;BITSFR25             0      0       0      26        0.0%
  1346 ;;SFR25                0      0       0      26        0.0%
  1347 ;;BITBANK11           50      0       0      27        0.0%
  1348 ;;BITSFR26             0      0       0      27        0.0%
  1349 ;;SFR26                0      0       0      27        0.0%
  1350 ;;BANK11              50      0       0      28        0.0%
  1351 ;;BITSFR27             0      0       0      28        0.0%
  1352 ;;SFR27                0      0       0      28        0.0%
  1353 ;;BITBANK12           30      0       0      29        0.0%
  1354 ;;BITSFR28             0      0       0      29        0.0%
  1355 ;;SFR28                0      0       0      29        0.0%
  1356 ;;BANK12              30      0       0      30        0.0%
  1357 ;;BITSFR29             0      0       0      30        0.0%
  1358 ;;SFR29                0      0       0      30        0.0%
  1359 ;;BITSFR30             0      0       0      31        0.0%
  1360 ;;SFR30                0      0       0      31        0.0%
  1361 ;;DATA                 0      0      39      31        0.0%
  1362 ;;BITSFR31             0      0       0      32        0.0%
  1363 ;;SFR31                0      0       0      32        0.0%
  1364                           
  1365                           	global	_main
  1366                           psect	maintext,global,class=CODE,delta=2
  1367                           global __pmaintext
  1368  048A                     __pmaintext:
  1369                           
  1370 ;; *************** function _main *****************
  1371 ;; Defined at:
  1372 ;;		line 69 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2  1593[COMMON] int 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 17F/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		_init
  1394 ;;		_isEE
  1395 ;;		_doEE
  1396 ;;		_I2CADCworker
  1397 ;;		_UARTworker
  1398 ;;		_nullfunc1
  1399 ;;		_I2CEEworker
  1400 ;;		_I2CDACworker
  1401 ;; This function is called by:
  1402 ;;		Startup code after reset
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           psect	maintext
  1406                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  1407                           	line	69
  1408                           	global	__size_of_main
  1409  0072                     	__size_of_main	equ	__end_of_main-_main
  1410                           	
  1411  048A                     _main:	
  1412                           	opt	stack 12
  1413                           ; Regs used in _main: [allreg]
  1414                           	line	70
  1415                           	
  1416  048A                     l14608:	
  1417                           ;main.c: 70: mode=0x02;
  1418  048A  3002               	movlw	(02h)
  1419  048B  0020               	movlb 0	; select bank0
  1420  048C  00C9               	movwf	(??_main+0)+0
  1421  048D  0849               	movf	(??_main+0)+0,w
  1422  048E  00CA               	movwf	(_mode)
  1423                           	line	72
  1424                           	
  1425  048F                     l14610:	
  1426                           ;main.c: 72: init();
  1427  048F  3185  2567  3184   	fcall	_init
  1428  0492  2C93               	goto	l14612
  1429                           	line	74
  1430                           ;main.c: 74: while(1){
  1431                           	
  1432  0493                     l1594:	
  1433                           	line	76
  1434                           	
  1435  0493                     l14612:	
  1436                           ;main.c: 76: if(isEE()) doEE();
  1437  0493  3187  279A  3184   	fcall	_isEE
  1438  0496  3A00               	xorlw	0&0ffh
  1439  0497  1903               	skipnz
  1440  0498  2C9A               	goto	u2931
  1441  0499  2C9B               	goto	u2930
  1442  049A                     u2931:
  1443  049A  2CE9               	goto	l14626
  1444  049B                     u2930:
  1445                           	
  1446  049B                     l14614:	
  1447  049B  3186  2629  3184   	fcall	_doEE
  1448  049E  2CE9               	goto	l14626
  1449                           	
  1450  049F                     l1595:	
  1451                           	line	79
  1452                           ;main.c: 79: switch(mode_device)
  1453  049F  2CE9               	goto	l14626
  1454                           	line	80
  1455                           ;main.c: 80: { case 0x03: protos[mode_protocol].ADCworker();
  1456                           	
  1457  04A0                     l1597:	
  1458                           	
  1459  04A0                     l14616:	
  1460  04A0  0878               	movf	(_mode_protocol),w
  1461  04A1  0020               	movlb 0	; select bank0
  1462  04A2  00C9               	movwf	(??_main+0)+0
  1463  04A3  3001               	movlw	(02h)-1
  1464  04A4                     u2945:
  1465  04A4  35C9               	lslf	(??_main+0)+0,f
  1466  04A5  3EFF               	addlw	-1
  1467  04A6  1D03               	skipz
  1468  04A7  2CA4               	goto	u2945
  1469  04A8  3549               	lslf	(??_main+0)+0,w
  1470  04A9  3E31               	addlw	_protos&0ffh
  1471  04AA  0086               	movwf	fsr1l
  1472  04AB  0187               	clrf fsr1h	
  1473                           	
  1474  04AC  0801               	movf	indf1,w
  1475  04AD  3181  2100  3184   	fcall	fptable
  1476                           	line	81
  1477                           ;main.c: 81: break;
  1478  04B0  2C93               	goto	l14612
  1479                           	line	82
  1480                           ;main.c: 82: case 0x01: protos[mode_protocol].EEPROMworker();
  1481                           	
  1482  04B1                     l1599:	
  1483                           	
  1484  04B1                     l14618:	
  1485  04B1  0878               	movf	(_mode_protocol),w
  1486  04B2  0020               	movlb 0	; select bank0
  1487  04B3  00C9               	movwf	(??_main+0)+0
  1488  04B4  3001               	movlw	(02h)-1
  1489  04B5                     u2955:
  1490  04B5  35C9               	lslf	(??_main+0)+0,f
  1491  04B6  3EFF               	addlw	-1
  1492  04B7  1D03               	skipz
  1493  04B8  2CB5               	goto	u2955
  1494  04B9  3549               	lslf	(??_main+0)+0,w
  1495  04BA  3E02               	addlw	02h
  1496  04BB  3E31               	addlw	_protos&0ffh
  1497  04BC  0086               	movwf	fsr1l
  1498  04BD  0187               	clrf fsr1h	
  1499                           	
  1500  04BE  0801               	movf	indf1,w
  1501  04BF  3181  2100  3184   	fcall	fptable
  1502                           	line	83
  1503                           ;main.c: 83: break;
  1504  04C2  2C93               	goto	l14612
  1505                           	line	84
  1506                           ;main.c: 84: case 0x02: protos[mode_protocol].DACworker();
  1507                           	
  1508  04C3                     l1600:	
  1509                           	
  1510  04C3                     l14620:	
  1511  04C3  0878               	movf	(_mode_protocol),w
  1512  04C4  0020               	movlb 0	; select bank0
  1513  04C5  00C9               	movwf	(??_main+0)+0
  1514  04C6  3001               	movlw	(02h)-1
  1515  04C7                     u2965:
  1516  04C7  35C9               	lslf	(??_main+0)+0,f
  1517  04C8  3EFF               	addlw	-1
  1518  04C9  1D03               	skipz
  1519  04CA  2CC7               	goto	u2965
  1520  04CB  3549               	lslf	(??_main+0)+0,w
  1521  04CC  3E01               	addlw	01h
  1522  04CD  3E31               	addlw	_protos&0ffh
  1523  04CE  0086               	movwf	fsr1l
  1524  04CF  0187               	clrf fsr1h	
  1525                           	
  1526  04D0  0801               	movf	indf1,w
  1527  04D1  3181  2100  3184   	fcall	fptable
  1528                           	line	85
  1529                           ;main.c: 85: break;
  1530  04D4  2C93               	goto	l14612
  1531                           	line	86
  1532                           ;main.c: 86: case 0x00: protos[mode_protocol].PWMworker();
  1533                           	
  1534  04D5                     l1601:	
  1535                           	
  1536  04D5                     l14622:	
  1537  04D5  0878               	movf	(_mode_protocol),w
  1538  04D6  0020               	movlb 0	; select bank0
  1539  04D7  00C9               	movwf	(??_main+0)+0
  1540  04D8  3001               	movlw	(02h)-1
  1541  04D9                     u2975:
  1542  04D9  35C9               	lslf	(??_main+0)+0,f
  1543  04DA  3EFF               	addlw	-1
  1544  04DB  1D03               	skipz
  1545  04DC  2CD9               	goto	u2975
  1546  04DD  3549               	lslf	(??_main+0)+0,w
  1547  04DE  3E03               	addlw	03h
  1548  04DF  3E31               	addlw	_protos&0ffh
  1549  04E0  0086               	movwf	fsr1l
  1550  04E1  0187               	clrf fsr1h	
  1551                           	
  1552  04E2  0801               	movf	indf1,w
  1553  04E3  3181  2100  3184   	fcall	fptable
  1554  04E6  2C93               	goto	l14612
  1555                           	line	87
  1556                           ;main.c: 87: default: break;
  1557                           	
  1558  04E7                     l1602:	
  1559  04E7  2C93               	goto	l14612
  1560                           	line	88
  1561                           	
  1562  04E8                     l14624:	
  1563                           ;main.c: 88: }
  1564  04E8  2C93               	goto	l14612
  1565                           	line	79
  1566                           	
  1567  04E9                     l1596:	
  1568                           	
  1569  04E9                     l14626:	
  1570  04E9  0020               	movlb 0	; select bank0
  1571  04EA  0830               	movf	(_mode_device),w
  1572                           	; Switch size 1, requested type "space"
  1573                           ; Number of cases is 4, Range of values is 0 to 3
  1574                           ; switch strategies available:
  1575                           ; Name         Instructions Cycles
  1576                           ; simple_byte           13     7 (average)
  1577                           ; direct_byte           14     6 (fixed)
  1578                           ; jumptable            260     6 (fixed)
  1579                           ; rangetable             8     4 (fixed)
  1580                           ; spacedrange           13     6 (fixed)
  1581                           ; locatedrange           4     3 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583                           
  1584                           	opt asmopt_off
  1585  04EB  3A00               	xorlw	0^0	; case 0
  1586  04EC  1903               	skipnz
  1587  04ED  2CD5               	goto	l14622
  1588  04EE  3A01               	xorlw	1^0	; case 1
  1589  04EF  1903               	skipnz
  1590  04F0  2CB1               	goto	l14618
  1591  04F1  3A03               	xorlw	2^1	; case 2
  1592  04F2  1903               	skipnz
  1593  04F3  2CC3               	goto	l14620
  1594  04F4  3A01               	xorlw	3^2	; case 3
  1595  04F5  1903               	skipnz
  1596  04F6  2CA0               	goto	l14616
  1597  04F7  2C93               	goto	l14612
  1598                           	opt asmopt_on
  1599                           
  1600                           	line	88
  1601                           	
  1602  04F8                     l1598:	
  1603  04F8  2C93               	goto	l14612
  1604                           	line	89
  1605                           	
  1606  04F9                     l1603:	
  1607                           	line	74
  1608  04F9  2C93               	goto	l14612
  1609                           	
  1610  04FA                     l1604:	
  1611                           	line	91
  1612                           	
  1613  04FA                     l1605:	
  1614                           	global	start
  1615  04FA  3180  2839         	ljmp	start
  1616                           	opt stack 0
  1617                           GLOBAL	__end_of_main
  1618  04FC                     	__end_of_main:
  1619 ;; =============== function _main ends ============
  1620                           
  1621                           	signat	_main,90
  1622                           	global	_doEE
  1623                           psect	text729,local,class=CODE,delta=2
  1624                           global __ptext729
  1625  0629                     __ptext729:
  1626                           
  1627 ;; *************** function _doEE *****************
  1628 ;; Defined at:
  1629 ;;		line 21 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    3
  1650 ;; This function calls:
  1651 ;;		_teletype
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           psect	text729
  1657                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  1658                           	line	21
  1659                           	global	__size_of_doEE
  1660  0049                     	__size_of_doEE	equ	__end_of_doEE-_doEE
  1661                           	
  1662  0629                     _doEE:	
  1663                           	opt	stack 12
  1664                           ; Regs used in _doEE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1665                           	line	22
  1666                           	
  1667  0629                     l14428:	
  1668                           ;easteregg.c: 22: teletype("Hello, nice of you to drop by\r\n");
  1669  0629  303B               	movlw	low(STR_1|8000h)
  1670  062A  00F4               	movwf	(?_teletype)
  1671  062B  3083               	movlw	high(STR_1|8000h)
  1672  062C  00F5               	movwf	((?_teletype))+1
  1673  062D  3186  2672  3186   	fcall	_teletype
  1674                           	line	23
  1675                           ;easteregg.c: 23: teletype("I'm happy to tell you my story\r\n");
  1676  0630  301A               	movlw	low(STR_2|8000h)
  1677  0631  00F4               	movwf	(?_teletype)
  1678  0632  3083               	movlw	high(STR_2|8000h)
  1679  0633  00F5               	movwf	((?_teletype))+1
  1680  0634  3186  2672  3186   	fcall	_teletype
  1681                           	line	24
  1682                           ;easteregg.c: 24: teletype("They put me through endless hours of regression test..\r\n")
                                 ;
  1683  0637  304C               	movlw	low(STR_3|8000h)
  1684  0638  00F4               	movwf	(?_teletype)
  1685  0639  3082               	movlw	high(STR_3|8000h)
  1686  063A  00F5               	movwf	((?_teletype))+1
  1687  063B  3186  2672  3186   	fcall	_teletype
  1688                           	line	25
  1689                           ;easteregg.c: 25: teletype(".. conducted several tests on me..\r\n");
  1690  063E  30D2               	movlw	low(STR_4|8000h)
  1691  063F  00F4               	movwf	(?_teletype)
  1692  0640  3082               	movlw	high(STR_4|8000h)
  1693  0641  00F5               	movwf	((?_teletype))+1
  1694  0642  3186  2672  3186   	fcall	_teletype
  1695                           	line	26
  1696                           ;easteregg.c: 26: teletype(".connected me to weird prototypes...\r\n");
  1697  0645  3085               	movlw	low(STR_5|8000h)
  1698  0646  00F4               	movwf	(?_teletype)
  1699  0647  3082               	movlw	high(STR_5|8000h)
  1700  0648  00F5               	movwf	((?_teletype))+1
  1701  0649  3186  2672  3186   	fcall	_teletype
  1702                           	line	27
  1703                           ;easteregg.c: 27: teletype("abused me with 5V....\r\n");
  1704  064C  3073               	movlw	low(STR_6|8000h)
  1705  064D  00F4               	movwf	(?_teletype)
  1706  064E  3083               	movlw	high(STR_6|8000h)
  1707  064F  00F5               	movwf	((?_teletype))+1
  1708  0650  3186  2672  3186   	fcall	_teletype
  1709                           	line	28
  1710                           ;easteregg.c: 28: teletype("used HiZ on me.......\r\n");
  1711  0653  305B               	movlw	low(STR_7|8000h)
  1712  0654  00F4               	movwf	(?_teletype)
  1713  0655  3083               	movlw	high(STR_7|8000h)
  1714  0656  00F5               	movwf	((?_teletype))+1
  1715  0657  3186  2672  3186   	fcall	_teletype
  1716                           	line	29
  1717                           ;easteregg.c: 29: teletype("let me talk I2C, SPI, UART......\r\n");
  1718  065A  30F7               	movlw	low(STR_8|8000h)
  1719  065B  00F4               	movwf	(?_teletype)
  1720  065C  3082               	movlw	high(STR_8|8000h)
  1721  065D  00F5               	movwf	((?_teletype))+1
  1722  065E  3186  2672  3186   	fcall	_teletype
  1723                           	line	30
  1724                           ;easteregg.c: 30: teletype("made me do weird shit like PWM, memoryemulation, convert hig
                                 h voltages..\r\n");
  1725  0661  3001               	movlw	low(STR_9|8000h)
  1726  0662  00F4               	movwf	(?_teletype)
  1727  0663  3082               	movlw	high(STR_9|8000h)
  1728  0664  00F5               	movwf	((?_teletype))+1
  1729  0665  3186  2672  3186   	fcall	_teletype
  1730                           	line	31
  1731                           ;easteregg.c: 31: teletype("COULD YOU PLEASE LEAVE ME ALONE?!?!?!");
  1732  0668  30AC               	movlw	low(STR_10|8000h)
  1733  0669  00F4               	movwf	(?_teletype)
  1734  066A  3082               	movlw	high(STR_10|8000h)
  1735  066B  00F5               	movwf	((?_teletype))+1
  1736  066C  3186  2672  3186   	fcall	_teletype
  1737  066F  2E70               	goto	l6406
  1738                           	line	32
  1739                           ;easteregg.c: 32: while(1);
  1740                           	
  1741  0670                     l6405:	
  1742                           	
  1743  0670                     l6406:	
  1744  0670  2E70               	goto	l6406
  1745                           	
  1746  0671                     l6407:	
  1747                           	line	33
  1748                           	
  1749  0671                     l6408:	
  1750  0671  0008               	return
  1751                           	opt stack 0
  1752                           GLOBAL	__end_of_doEE
  1753  0672                     	__end_of_doEE:
  1754 ;; =============== function _doEE ends ============
  1755                           
  1756                           	signat	_doEE,88
  1757                           	global	_teletype
  1758                           psect	text730,local,class=CODE,delta=2
  1759                           global __ptext730
  1760  0672                     __ptext730:
  1761                           
  1762 ;; *************** function _teletype *****************
  1763 ;; Defined at:
  1764 ;;		line 36 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  s               2    4[COMMON] PTR const unsigned char 
  1767 ;;		 -> STR_10(38), STR_9(75), STR_8(35), STR_7(24), 
  1768 ;;		 -> STR_6(24), STR_5(39), STR_4(37), STR_3(57), 
  1769 ;;		 -> STR_2(33), STR_1(32), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  i               2    6[COMMON] int 
  1772 ;;  c               1    0        unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1786 ;;Total ram usage:        4 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    2
  1789 ;; This function calls:
  1790 ;;		_UARTwrite
  1791 ;; This function is called by:
  1792 ;;		_doEE
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           psect	text730
  1796                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  1797                           	line	36
  1798                           	global	__size_of_teletype
  1799  003E                     	__size_of_teletype	equ	__end_of_teletype-_teletype
  1800                           	
  1801  0672                     _teletype:	
  1802                           	opt	stack 12
  1803                           ; Regs used in _teletype: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1804                           	line	39
  1805                           	
  1806  0672                     l14410:	
  1807                           ;easteregg.c: 37: char c;
  1808                           ;easteregg.c: 39: while(*s)
  1809  0672  2EA4               	goto	l14426
  1810                           	
  1811  0673                     l6412:	
  1812                           	line	41
  1813                           	
  1814  0673                     l14412:	
  1815                           ;easteregg.c: 40: {
  1816                           ;easteregg.c: 41: UARTwrite(*(s++));
  1817  0673  0874               	movf	(teletype@s),w
  1818  0674  0084               	movwf	fsr0l
  1819  0675  0875               	movf	((teletype@s+1)),w
  1820  0676  0085               	movwf	fsr0h
  1821  0677  0800               	movf	indf0,w ;code access
  1822  0678  3187  2741  3186   	fcall	_UARTwrite
  1823                           	
  1824  067B                     l14414:	
  1825  067B  3001               	movlw	low(01h)
  1826  067C  07F4               	addwf	(teletype@s),f
  1827  067D  3000               	movlw	high(01h)
  1828  067E  3DF5               	addwfc	(teletype@s+1),f
  1829                           	line	43
  1830                           	
  1831  067F                     l14416:	
  1832                           ;easteregg.c: 43: for(i=0; i<10000; i++) asm("nop");
  1833  067F  01F6               	clrf	(teletype@i)
  1834  0680  01F7               	clrf	(teletype@i+1)
  1835                           	
  1836  0681                     l14418:	
  1837  0681  0877               	movf	(teletype@i+1),w
  1838  0682  3A80               	xorlw	80h
  1839  0683  00FF               	movwf	btemp+1
  1840  0684  30A7               	movlw	(high(02710h))^80h
  1841  0685  027F               	subwf	btemp+1,w
  1842  0686  1D03               	skipz
  1843  0687  2E8A               	goto	u2695
  1844  0688  3010               	movlw	low(02710h)
  1845  0689  0276               	subwf	(teletype@i),w
  1846  068A                     u2695:
  1847                           
  1848  068A  1C03               	skipc
  1849  068B  2E8D               	goto	u2691
  1850  068C  2E8E               	goto	u2690
  1851  068D                     u2691:
  1852  068D  2E90               	goto	l6413
  1853  068E                     u2690:
  1854  068E  2EA4               	goto	l14426
  1855                           	
  1856  068F                     l14420:	
  1857  068F  2EA4               	goto	l14426
  1858                           	
  1859  0690                     l6413:	
  1860                           # 43 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  1861  0690  0000               nop ;#
  1862                           psect	text730
  1863                           	
  1864  0691                     l14422:	
  1865  0691  3001               	movlw	low(01h)
  1866  0692  07F6               	addwf	(teletype@i),f
  1867  0693  3000               	movlw	high(01h)
  1868  0694  3DF7               	addwfc	(teletype@i+1),f
  1869                           	
  1870  0695                     l14424:	
  1871  0695  0877               	movf	(teletype@i+1),w
  1872  0696  3A80               	xorlw	80h
  1873  0697  00FF               	movwf	btemp+1
  1874  0698  30A7               	movlw	(high(02710h))^80h
  1875  0699  027F               	subwf	btemp+1,w
  1876  069A  1D03               	skipz
  1877  069B  2E9E               	goto	u2705
  1878  069C  3010               	movlw	low(02710h)
  1879  069D  0276               	subwf	(teletype@i),w
  1880  069E                     u2705:
  1881                           
  1882  069E  1C03               	skipc
  1883  069F  2EA1               	goto	u2701
  1884  06A0  2EA2               	goto	u2700
  1885  06A1                     u2701:
  1886  06A1  2E90               	goto	l6413
  1887  06A2                     u2700:
  1888  06A2  2EA4               	goto	l14426
  1889                           	
  1890  06A3                     l6414:	
  1891  06A3  2EA4               	goto	l14426
  1892                           	line	44
  1893                           	
  1894  06A4                     l6411:	
  1895                           	line	39
  1896                           	
  1897  06A4                     l14426:	
  1898  06A4  0874               	movf	(teletype@s),w
  1899  06A5  0084               	movwf	fsr0l
  1900  06A6  0875               	movf	((teletype@s+1)),w
  1901  06A7  0085               	movwf	fsr0h
  1902  06A8  0800               	movf	indf0,w ;code access
  1903  06A9  3800               	iorlw	0
  1904  06AA  1D03               	skipz
  1905  06AB  2EAD               	goto	u2711
  1906  06AC  2EAE               	goto	u2710
  1907  06AD                     u2711:
  1908  06AD  2E73               	goto	l14412
  1909  06AE                     u2710:
  1910  06AE  2EAF               	goto	l6416
  1911                           	
  1912  06AF                     l6415:	
  1913                           	line	45
  1914                           	
  1915  06AF                     l6416:	
  1916  06AF  0008               	return
  1917                           	opt stack 0
  1918                           GLOBAL	__end_of_teletype
  1919  06B0                     	__end_of_teletype:
  1920 ;; =============== function _teletype ends ============
  1921                           
  1922                           	signat	_teletype,4216
  1923                           	global	_UARTworker
  1924                           	global	_nullfunc1
  1925                           	global	_I2CADCworker
  1926                           psect	text731,local,class=CODE,delta=2
  1927                           global __ptext731
  1928  04FC                     __ptext731:
  1929                           
  1930 ;; *************** function _I2CADCworker *****************
  1931 ;; Defined at:
  1932 ;;		line 87 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  adc             1    7[BANK0 ] unsigned char 
  1937 ;;  token           1    6[BANK0 ] unsigned char 
  1938 ;;  temp            1    5[BANK0 ] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;		None               void
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1949 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  1950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1951 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		_enableTS
  1957 ;;		_getADC
  1958 ;;		_I2CWrite
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           psect	text731
  1964                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  1965                           	line	87
  1966                           	global	__size_of_I2CADCworker
  1967  006B                     	__size_of_I2CADCworker	equ	__end_of_I2CADCworker-_I2CADCworker
  1968                           	
  1969  04FC                     _I2CADCworker:	
  1970                           	opt	stack 13
  1971                           ; Regs used in _I2CADCworker: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1972                           	line	89
  1973                           	
  1974  04FC                     l14542:	
  1975                           ;i2c.c: 89: adc=0x00;
  1976  04FC  0020               	movlb 0	; select bank0
  1977  04FD  01C8               	clrf	(I2CADCworker@adc)
  1978                           	line	90
  1979                           	
  1980  04FE                     l14544:	
  1981                           ;i2c.c: 90: enableTS();
  1982  04FE  3187  277D  3184   	fcall	_enableTS
  1983                           	line	91
  1984                           	
  1985  0501                     l14546:	
  1986                           ;i2c.c: 91: SSP2ADD=0x10;
  1987  0501  3010               	movlw	(010h)
  1988  0502  0024               	movlb 4	; select bank4
  1989  0503  009A               	movwf	(538)^0200h	;volatile
  1990  0504  2D05               	goto	l14548
  1991                           	line	93
  1992                           ;i2c.c: 93: while(1)
  1993                           	
  1994  0505                     l3217:	
  1995                           	line	96
  1996                           	
  1997  0505                     l14548:	
  1998                           ;i2c.c: 94: {
  1999                           ;i2c.c: 96: if(SSP2IF)
  2000  0505  0020               	movlb 0	; select bank0
  2001  0506  1C14               	btfss	(160/8),(160)&7
  2002  0507  2D09               	goto	u2871
  2003  0508  2D0A               	goto	u2870
  2004  0509                     u2871:
  2005  0509  2D05               	goto	l14548
  2006  050A                     u2870:
  2007                           	line	98
  2008                           	
  2009  050A                     l14550:	
  2010                           ;i2c.c: 97: {
  2011                           ;i2c.c: 98: token=SSP2STAT&0x25;
  2012  050A  0024               	movlb 4	; select bank4
  2013  050B  081C               	movf	(540)^0200h,w
  2014  050C  3925               	andlw	025h
  2015  050D  0020               	movlb 0	; select bank0
  2016  050E  00C5               	movwf	(??_I2CADCworker+0)+0
  2017  050F  0845               	movf	(??_I2CADCworker+0)+0,w
  2018  0510  00C7               	movwf	(I2CADCworker@token)
  2019                           	line	100
  2020                           	
  2021  0511                     l14552:	
  2022                           ;i2c.c: 100: if(SSP2STATbits.S)
  2023  0511  0024               	movlb 4	; select bank4
  2024  0512  1D9C               	btfss	(540)^0200h,3	;volatile
  2025  0513  2D15               	goto	u2881
  2026  0514  2D16               	goto	u2880
  2027  0515                     u2881:
  2028  0515  2D56               	goto	l3219
  2029  0516                     u2880:
  2030                           	line	101
  2031                           	
  2032  0516                     l14554:	
  2033                           ;i2c.c: 101: { RC5=1;;
  2034  0516  0020               	movlb 0	; select bank0
  2035  0517  168E               	bsf	(117/8),(117)&7
  2036                           	line	102
  2037                           ;i2c.c: 102: switch(token)
  2038  0518  2D46               	goto	l14570
  2039                           	line	104
  2040                           ;i2c.c: 103: {
  2041                           ;i2c.c: 104: case 0x01:
  2042                           	
  2043  0519                     l3221:	
  2044                           	line	105
  2045                           	
  2046  0519                     l14556:	
  2047                           ;i2c.c: 105: temp=SSP2BUF;
  2048  0519  0024               	movlb 4	; select bank4
  2049  051A  0819               	movf	(537)^0200h,w	;volatile
  2050  051B  0020               	movlb 0	; select bank0
  2051  051C  00C5               	movwf	(??_I2CADCworker+0)+0
  2052  051D  0845               	movf	(??_I2CADCworker+0)+0,w
  2053  051E  00C6               	movwf	(I2CADCworker@temp)
  2054                           	line	106
  2055                           ;i2c.c: 106: break;
  2056  051F  2D5E               	goto	l3226
  2057                           	line	107
  2058                           ;i2c.c: 107: case 0x21:
  2059                           	
  2060  0520                     l3223:	
  2061                           	line	108
  2062                           	
  2063  0520                     l14558:	
  2064                           ;i2c.c: 108: adc=SSP2BUF;
  2065  0520  0024               	movlb 4	; select bank4
  2066  0521  0819               	movf	(537)^0200h,w	;volatile
  2067  0522  0020               	movlb 0	; select bank0
  2068  0523  00C5               	movwf	(??_I2CADCworker+0)+0
  2069  0524  0845               	movf	(??_I2CADCworker+0)+0,w
  2070  0525  00C8               	movwf	(I2CADCworker@adc)
  2071                           	line	109
  2072                           ;i2c.c: 109: break;
  2073  0526  2D5E               	goto	l3226
  2074                           	line	110
  2075                           ;i2c.c: 110: case 0x05:
  2076                           	
  2077  0527                     l3224:	
  2078                           	line	111
  2079                           	
  2080  0527                     l14560:	
  2081                           ;i2c.c: 111: temp=SSP2BUF;
  2082  0527  0024               	movlb 4	; select bank4
  2083  0528  0819               	movf	(537)^0200h,w	;volatile
  2084  0529  0020               	movlb 0	; select bank0
  2085  052A  00C5               	movwf	(??_I2CADCworker+0)+0
  2086  052B  0845               	movf	(??_I2CADCworker+0)+0,w
  2087  052C  00C6               	movwf	(I2CADCworker@temp)
  2088                           	line	112
  2089                           	
  2090  052D                     l14562:	
  2091                           ;i2c.c: 112: I2CWrite(getADC(adc));
  2092  052D  0848               	movf	(I2CADCworker@adc),w
  2093  052E  3185  25D0  3184   	fcall	_getADC
  2094  0531  0873               	movf	(0+(?_getADC)),w
  2095  0532  3187  2768  3184   	fcall	_I2CWrite
  2096                           	line	113
  2097                           ;i2c.c: 113: break;
  2098  0535  2D5E               	goto	l3226
  2099                           	line	114
  2100                           ;i2c.c: 114: case 0x24:
  2101                           	
  2102  0536                     l3225:	
  2103                           	line	115
  2104                           	
  2105  0536                     l14564:	
  2106                           ;i2c.c: 115: temp=SSP2BUF;
  2107  0536  0024               	movlb 4	; select bank4
  2108  0537  0819               	movf	(537)^0200h,w	;volatile
  2109  0538  0020               	movlb 0	; select bank0
  2110  0539  00C5               	movwf	(??_I2CADCworker+0)+0
  2111  053A  0845               	movf	(??_I2CADCworker+0)+0,w
  2112  053B  00C6               	movwf	(I2CADCworker@temp)
  2113                           	line	116
  2114                           	
  2115  053C                     l14566:	
  2116                           ;i2c.c: 116: I2CWrite(getADC(adc));
  2117  053C  0848               	movf	(I2CADCworker@adc),w
  2118  053D  3185  25D0  3184   	fcall	_getADC
  2119  0540  0873               	movf	(0+(?_getADC)),w
  2120  0541  3187  2768  3184   	fcall	_I2CWrite
  2121                           	line	117
  2122                           ;i2c.c: 117: break;
  2123  0544  2D5E               	goto	l3226
  2124                           	line	118
  2125                           	
  2126  0545                     l14568:	
  2127                           ;i2c.c: 118: }
  2128  0545  2D5E               	goto	l3226
  2129                           	line	102
  2130                           	
  2131  0546                     l3220:	
  2132                           	
  2133  0546                     l14570:	
  2134  0546  0020               	movlb 0	; select bank0
  2135  0547  0847               	movf	(I2CADCworker@token),w
  2136                           	; Switch size 1, requested type "space"
  2137                           ; Number of cases is 4, Range of values is 1 to 36
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte           13     7 (average)
  2141                           ; direct_byte           81     9 (fixed)
  2142                           ; jumptable            263     9 (fixed)
  2143                           ;	Chosen strategy is simple_byte
  2144                           
  2145                           	opt asmopt_off
  2146  0548  3A01               	xorlw	1^0	; case 1
  2147  0549  1903               	skipnz
  2148  054A  2D19               	goto	l14556
  2149  054B  3A04               	xorlw	5^1	; case 5
  2150  054C  1903               	skipnz
  2151  054D  2D27               	goto	l14560
  2152  054E  3A24               	xorlw	33^5	; case 33
  2153  054F  1903               	skipnz
  2154  0550  2D20               	goto	l14558
  2155  0551  3A05               	xorlw	36^33	; case 36
  2156  0552  1903               	skipnz
  2157  0553  2D36               	goto	l14564
  2158  0554  2D5E               	goto	l3226
  2159                           	opt asmopt_on
  2160                           
  2161                           	line	118
  2162                           	
  2163  0555                     l3222:	
  2164                           	line	119
  2165                           ;i2c.c: 119: }
  2166  0555  2D5E               	goto	l3226
  2167                           	line	120
  2168                           	
  2169  0556                     l3219:	
  2170                           ;i2c.c: 120: else if(SSP2STATbits.P)
  2171  0556  1E1C               	btfss	(540)^0200h,4	;volatile
  2172  0557  2D59               	goto	u2891
  2173  0558  2D5A               	goto	u2890
  2174  0559                     u2891:
  2175  0559  2D5E               	goto	l3226
  2176  055A                     u2890:
  2177                           	line	121
  2178                           	
  2179  055A                     l14572:	
  2180                           ;i2c.c: 121: { RC5=0;;
  2181  055A  0020               	movlb 0	; select bank0
  2182  055B  128E               	bcf	(117/8),(117)&7
  2183                           	line	122
  2184                           # 122 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2185  055C  0000               NOP ;#
  2186                           psect	text731
  2187  055D  2D5E               	goto	l3226
  2188                           	line	123
  2189                           	
  2190  055E                     l3227:	
  2191                           	line	124
  2192                           	
  2193  055E                     l3226:	
  2194                           ;i2c.c: 123: }
  2195                           ;i2c.c: 124: SSP2IF=0;
  2196  055E  0020               	movlb 0	; select bank0
  2197  055F  1014               	bcf	(160/8),(160)&7
  2198                           	line	125
  2199                           ;i2c.c: 125: SSP2CON1bits.SSPEN=1;
  2200  0560  0024               	movlb 4	; select bank4
  2201  0561  169D               	bsf	(541)^0200h,5	;volatile
  2202                           	line	126
  2203                           ;i2c.c: 126: SSP2CON1bits.CKP=1;
  2204  0562  161D               	bsf	(541)^0200h,4	;volatile
  2205  0563  2D05               	goto	l14548
  2206                           	line	127
  2207                           	
  2208  0564                     l3218:	
  2209  0564  2D05               	goto	l14548
  2210                           	line	128
  2211                           	
  2212  0565                     l3228:	
  2213                           	line	93
  2214  0565  2D05               	goto	l14548
  2215                           	
  2216  0566                     l3229:	
  2217                           	line	129
  2218                           	
  2219  0566                     l3230:	
  2220  0566  0008               	return
  2221                           	opt stack 0
  2222                           GLOBAL	__end_of_I2CADCworker
  2223  0567                     	__end_of_I2CADCworker:
  2224 ;; =============== function _I2CADCworker ends ============
  2225                           
  2226                           	signat	_I2CADCworker,88
  2227                           	global	_I2CDACworker
  2228                           psect	text732,local,class=CODE,delta=2
  2229                           global __ptext732
  2230  0415                     __ptext732:
  2231                           
  2232 ;; *************** function _I2CDACworker *****************
  2233 ;; Defined at:
  2234 ;;		line 134 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  dac             1    7[BANK0 ] unsigned char 
  2239 ;;  token           1    6[BANK0 ] unsigned char 
  2240 ;;  temp            1    5[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;		None               void
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2251 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2254 ;;Total ram usage:        4 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    2
  2257 ;; This function calls:
  2258 ;;		_enableDAC
  2259 ;;		_setDAC
  2260 ;;		_getADC
  2261 ;;		_I2CWrite
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           psect	text732
  2267                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2268                           	line	134
  2269                           	global	__size_of_I2CDACworker
  2270  0075                     	__size_of_I2CDACworker	equ	__end_of_I2CDACworker-_I2CDACworker
  2271                           	
  2272  0415                     _I2CDACworker:	
  2273                           	opt	stack 13
  2274                           ; Regs used in _I2CDACworker: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2275                           	line	136
  2276                           	
  2277  0415                     l14574:	
  2278                           ;i2c.c: 136: dac=0x00;
  2279  0415  0020               	movlb 0	; select bank0
  2280  0416  01C8               	clrf	(I2CDACworker@dac)
  2281                           	line	137
  2282                           	
  2283  0417                     l14576:	
  2284                           ;i2c.c: 137: enableDAC();
  2285  0417  3187  2796  3184   	fcall	_enableDAC
  2286                           	line	138
  2287                           	
  2288  041A                     l14578:	
  2289                           ;i2c.c: 138: SSP2ADD=0x20;
  2290  041A  3020               	movlw	(020h)
  2291  041B  0024               	movlb 4	; select bank4
  2292  041C  009A               	movwf	(538)^0200h	;volatile
  2293  041D  2C1E               	goto	l14580
  2294                           	line	140
  2295                           ;i2c.c: 140: while(1)
  2296                           	
  2297  041E                     l3233:	
  2298                           	line	143
  2299                           	
  2300  041E                     l14580:	
  2301                           ;i2c.c: 141: {
  2302                           ;i2c.c: 143: if(SSP2IF)
  2303  041E  0020               	movlb 0	; select bank0
  2304  041F  1C14               	btfss	(160/8),(160)&7
  2305  0420  2C22               	goto	u2901
  2306  0421  2C23               	goto	u2900
  2307  0422                     u2901:
  2308  0422  2C1E               	goto	l14580
  2309  0423                     u2900:
  2310                           	line	145
  2311                           	
  2312  0423                     l14582:	
  2313                           ;i2c.c: 144: {
  2314                           ;i2c.c: 145: token=SSP2STAT&0x25;
  2315  0423  0024               	movlb 4	; select bank4
  2316  0424  081C               	movf	(540)^0200h,w
  2317  0425  3925               	andlw	025h
  2318  0426  0020               	movlb 0	; select bank0
  2319  0427  00C5               	movwf	(??_I2CDACworker+0)+0
  2320  0428  0845               	movf	(??_I2CDACworker+0)+0,w
  2321  0429  00C7               	movwf	(I2CDACworker@token)
  2322                           	line	147
  2323                           	
  2324  042A                     l14584:	
  2325                           ;i2c.c: 147: if(SSP2STATbits.S)
  2326  042A  0024               	movlb 4	; select bank4
  2327  042B  1D9C               	btfss	(540)^0200h,3	;volatile
  2328  042C  2C2E               	goto	u2911
  2329  042D  2C2F               	goto	u2910
  2330  042E                     u2911:
  2331  042E  2C79               	goto	l3235
  2332  042F                     u2910:
  2333                           	line	148
  2334                           	
  2335  042F                     l14586:	
  2336                           ;i2c.c: 148: { RC5=1;;
  2337  042F  0020               	movlb 0	; select bank0
  2338  0430  168E               	bsf	(117/8),(117)&7
  2339                           	line	149
  2340                           ;i2c.c: 149: switch(token)
  2341  0431  2C69               	goto	l14604
  2342                           	line	151
  2343                           ;i2c.c: 150: {
  2344                           ;i2c.c: 151: case 0x01:
  2345                           	
  2346  0432                     l3237:	
  2347                           	line	152
  2348                           	
  2349  0432                     l14588:	
  2350                           ;i2c.c: 152: temp=SSP2BUF;
  2351  0432  0024               	movlb 4	; select bank4
  2352  0433  0819               	movf	(537)^0200h,w	;volatile
  2353  0434  0020               	movlb 0	; select bank0
  2354  0435  00C5               	movwf	(??_I2CDACworker+0)+0
  2355  0436  0845               	movf	(??_I2CDACworker+0)+0,w
  2356  0437  00C6               	movwf	(I2CDACworker@temp)
  2357                           	line	153
  2358                           ;i2c.c: 153: break;
  2359  0438  2C81               	goto	l3242
  2360                           	line	154
  2361                           ;i2c.c: 154: case 0x21:
  2362                           	
  2363  0439                     l3239:	
  2364                           	line	155
  2365                           	
  2366  0439                     l14590:	
  2367                           ;i2c.c: 155: dac=SSP2BUF;
  2368  0439  0024               	movlb 4	; select bank4
  2369  043A  0819               	movf	(537)^0200h,w	;volatile
  2370  043B  0020               	movlb 0	; select bank0
  2371  043C  00C5               	movwf	(??_I2CDACworker+0)+0
  2372  043D  0845               	movf	(??_I2CDACworker+0)+0,w
  2373  043E  00C8               	movwf	(I2CDACworker@dac)
  2374                           	line	156
  2375                           ;i2c.c: 156: dac>>=3;
  2376  043F  1003               	clrc
  2377  0440  0CC8               	rrf	(I2CDACworker@dac),f
  2378  0441  1003               	clrc
  2379  0442  0CC8               	rrf	(I2CDACworker@dac),f
  2380  0443  1003               	clrc
  2381  0444  0CC8               	rrf	(I2CDACworker@dac),f
  2382                           
  2383                           	line	157
  2384                           	
  2385  0445                     l14592:	
  2386                           ;i2c.c: 157: setDAC(dac);
  2387  0445  0848               	movf	(I2CDACworker@dac),w
  2388  0446  3187  2790  3184   	fcall	_setDAC
  2389                           	line	158
  2390                           ;i2c.c: 158: break;
  2391  0449  2C81               	goto	l3242
  2392                           	line	159
  2393                           ;i2c.c: 159: case 0x05:
  2394                           	
  2395  044A                     l3240:	
  2396                           	line	160
  2397                           	
  2398  044A                     l14594:	
  2399                           ;i2c.c: 160: temp=SSP2BUF;
  2400  044A  0024               	movlb 4	; select bank4
  2401  044B  0819               	movf	(537)^0200h,w	;volatile
  2402  044C  0020               	movlb 0	; select bank0
  2403  044D  00C5               	movwf	(??_I2CDACworker+0)+0
  2404  044E  0845               	movf	(??_I2CDACworker+0)+0,w
  2405  044F  00C6               	movwf	(I2CDACworker@temp)
  2406                           	line	161
  2407                           	
  2408  0450                     l14596:	
  2409                           ;i2c.c: 161: I2CWrite(getADC(dac));
  2410  0450  0848               	movf	(I2CDACworker@dac),w
  2411  0451  3185  25D0  3184   	fcall	_getADC
  2412  0454  0873               	movf	(0+(?_getADC)),w
  2413  0455  3187  2768  3184   	fcall	_I2CWrite
  2414                           	line	162
  2415                           ;i2c.c: 162: break;
  2416  0458  2C81               	goto	l3242
  2417                           	line	163
  2418                           ;i2c.c: 163: case 0x24:
  2419                           	
  2420  0459                     l3241:	
  2421                           	line	164
  2422                           	
  2423  0459                     l14598:	
  2424                           ;i2c.c: 164: temp=SSP2BUF;
  2425  0459  0024               	movlb 4	; select bank4
  2426  045A  0819               	movf	(537)^0200h,w	;volatile
  2427  045B  0020               	movlb 0	; select bank0
  2428  045C  00C5               	movwf	(??_I2CDACworker+0)+0
  2429  045D  0845               	movf	(??_I2CDACworker+0)+0,w
  2430  045E  00C6               	movwf	(I2CDACworker@temp)
  2431                           	line	165
  2432                           	
  2433  045F                     l14600:	
  2434                           ;i2c.c: 165: I2CWrite(getADC(dac));
  2435  045F  0848               	movf	(I2CDACworker@dac),w
  2436  0460  3185  25D0  3184   	fcall	_getADC
  2437  0463  0873               	movf	(0+(?_getADC)),w
  2438  0464  3187  2768  3184   	fcall	_I2CWrite
  2439                           	line	166
  2440                           ;i2c.c: 166: break;
  2441  0467  2C81               	goto	l3242
  2442                           	line	167
  2443                           	
  2444  0468                     l14602:	
  2445                           ;i2c.c: 167: }
  2446  0468  2C81               	goto	l3242
  2447                           	line	149
  2448                           	
  2449  0469                     l3236:	
  2450                           	
  2451  0469                     l14604:	
  2452  0469  0020               	movlb 0	; select bank0
  2453  046A  0847               	movf	(I2CDACworker@token),w
  2454                           	; Switch size 1, requested type "space"
  2455                           ; Number of cases is 4, Range of values is 1 to 36
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte           13     7 (average)
  2459                           ; direct_byte           81     9 (fixed)
  2460                           ; jumptable            263     9 (fixed)
  2461                           ;	Chosen strategy is simple_byte
  2462                           
  2463                           	opt asmopt_off
  2464  046B  3A01               	xorlw	1^0	; case 1
  2465  046C  1903               	skipnz
  2466  046D  2C32               	goto	l14588
  2467  046E  3A04               	xorlw	5^1	; case 5
  2468  046F  1903               	skipnz
  2469  0470  2C4A               	goto	l14594
  2470  0471  3A24               	xorlw	33^5	; case 33
  2471  0472  1903               	skipnz
  2472  0473  2C39               	goto	l14590
  2473  0474  3A05               	xorlw	36^33	; case 36
  2474  0475  1903               	skipnz
  2475  0476  2C59               	goto	l14598
  2476  0477  2C81               	goto	l3242
  2477                           	opt asmopt_on
  2478                           
  2479                           	line	167
  2480                           	
  2481  0478                     l3238:	
  2482                           	line	168
  2483                           ;i2c.c: 168: }
  2484  0478  2C81               	goto	l3242
  2485                           	line	169
  2486                           	
  2487  0479                     l3235:	
  2488                           ;i2c.c: 169: else if(SSP2STATbits.P)
  2489  0479  1E1C               	btfss	(540)^0200h,4	;volatile
  2490  047A  2C7C               	goto	u2921
  2491  047B  2C7D               	goto	u2920
  2492  047C                     u2921:
  2493  047C  2C81               	goto	l3242
  2494  047D                     u2920:
  2495                           	line	170
  2496                           	
  2497  047D                     l14606:	
  2498                           ;i2c.c: 170: { RC5=0;;
  2499  047D  0020               	movlb 0	; select bank0
  2500  047E  128E               	bcf	(117/8),(117)&7
  2501                           	line	171
  2502                           # 171 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2503  047F  0000               NOP ;#
  2504                           psect	text732
  2505  0480  2C81               	goto	l3242
  2506                           	line	172
  2507                           	
  2508  0481                     l3243:	
  2509                           	line	173
  2510                           	
  2511  0481                     l3242:	
  2512                           ;i2c.c: 172: }
  2513                           ;i2c.c: 173: SSP2IF=0;
  2514  0481  0020               	movlb 0	; select bank0
  2515  0482  1014               	bcf	(160/8),(160)&7
  2516                           	line	174
  2517                           ;i2c.c: 174: SSP2CON1bits.SSPEN=1;
  2518  0483  0024               	movlb 4	; select bank4
  2519  0484  169D               	bsf	(541)^0200h,5	;volatile
  2520                           	line	175
  2521                           ;i2c.c: 175: SSP2CON1bits.CKP=1;
  2522  0485  161D               	bsf	(541)^0200h,4	;volatile
  2523  0486  2C1E               	goto	l14580
  2524                           	line	176
  2525                           	
  2526  0487                     l3234:	
  2527  0487  2C1E               	goto	l14580
  2528                           	line	177
  2529                           	
  2530  0488                     l3244:	
  2531                           	line	140
  2532  0488  2C1E               	goto	l14580
  2533                           	
  2534  0489                     l3245:	
  2535                           	line	178
  2536                           	
  2537  0489                     l3246:	
  2538  0489  0008               	return
  2539                           	opt stack 0
  2540                           GLOBAL	__end_of_I2CDACworker
  2541  048A                     	__end_of_I2CDACworker:
  2542 ;; =============== function _I2CDACworker ends ============
  2543                           
  2544                           	signat	_I2CDACworker,88
  2545                           	global	_I2CEEworker
  2546                           psect	text733,local,class=CODE,delta=2
  2547                           global __ptext733
  2548  038B                     __ptext733:
  2549                           
  2550 ;; *************** function _I2CEEworker *****************
  2551 ;; Defined at:
  2552 ;;		line 29 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  addr            1    3[BANK0 ] unsigned char 
  2557 ;;  addressed       1    2[BANK0 ] unsigned char 
  2558 ;;  token           1    1[BANK0 ] unsigned char 
  2559 ;;  temp            1    0[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2572 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2573 ;;Total ram usage:        5 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    2
  2576 ;; This function calls:
  2577 ;;		_EEPROMwrite
  2578 ;;		_EEPROMread
  2579 ;;		_I2CWrite
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           psect	text733
  2585                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2586                           	line	29
  2587                           	global	__size_of_I2CEEworker
  2588  008A                     	__size_of_I2CEEworker	equ	__end_of_I2CEEworker-_I2CEEworker
  2589                           	
  2590  038B                     _I2CEEworker:	
  2591                           	opt	stack 13
  2592                           ; Regs used in _I2CEEworker: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2593                           	line	31
  2594                           	
  2595  038B                     l14500:	
  2596                           ;i2c.c: 31: addr=0x00;
  2597  038B  0020               	movlb 0	; select bank0
  2598  038C  01C4               	clrf	(I2CEEworker@addr)
  2599                           	line	32
  2600                           ;i2c.c: 32: addressed=0;
  2601  038D  01C3               	clrf	(I2CEEworker@addressed)
  2602                           	line	34
  2603                           	
  2604  038E                     l14502:	
  2605                           ;i2c.c: 34: SSP2ADD=0xA0;
  2606  038E  30A0               	movlw	(0A0h)
  2607  038F  0024               	movlb 4	; select bank4
  2608  0390  009A               	movwf	(538)^0200h	;volatile
  2609  0391  2B92               	goto	l14504
  2610                           	line	36
  2611                           ;i2c.c: 36: while(1)
  2612                           	
  2613  0392                     l3199:	
  2614                           	line	39
  2615                           	
  2616  0392                     l14504:	
  2617                           ;i2c.c: 37: {
  2618                           ;i2c.c: 39: if(SSP2IF)
  2619  0392  0020               	movlb 0	; select bank0
  2620  0393  1C14               	btfss	(160/8),(160)&7
  2621  0394  2B96               	goto	u2831
  2622  0395  2B97               	goto	u2830
  2623  0396                     u2831:
  2624  0396  2B92               	goto	l14504
  2625  0397                     u2830:
  2626                           	line	41
  2627                           	
  2628  0397                     l14506:	
  2629                           ;i2c.c: 40: {
  2630                           ;i2c.c: 41: token=SSP2STAT&0x25;
  2631  0397  0024               	movlb 4	; select bank4
  2632  0398  081C               	movf	(540)^0200h,w
  2633  0399  3925               	andlw	025h
  2634  039A  00F5               	movwf	(??_I2CEEworker+0)+0
  2635  039B  0875               	movf	(??_I2CEEworker+0)+0,w
  2636  039C  0020               	movlb 0	; select bank0
  2637  039D  00C2               	movwf	(I2CEEworker@token)
  2638                           	line	43
  2639                           	
  2640  039E                     l14508:	
  2641                           ;i2c.c: 43: if(SSP2STATbits.S)
  2642  039E  0024               	movlb 4	; select bank4
  2643  039F  1D9C               	btfss	(540)^0200h,3	;volatile
  2644  03A0  2BA2               	goto	u2841
  2645  03A1  2BA3               	goto	u2840
  2646  03A2                     u2841:
  2647  03A2  2C03               	goto	l3201
  2648  03A3                     u2840:
  2649                           	line	44
  2650                           	
  2651  03A3                     l14510:	
  2652                           ;i2c.c: 44: { RC5=1;;
  2653  03A3  0020               	movlb 0	; select bank0
  2654  03A4  168E               	bsf	(117/8),(117)&7
  2655                           	line	45
  2656                           ;i2c.c: 45: switch(token)
  2657  03A5  2BF4               	goto	l14538
  2658                           	line	47
  2659                           ;i2c.c: 46: {
  2660                           ;i2c.c: 47: case 0x01:
  2661                           	
  2662  03A6                     l3203:	
  2663                           	line	48
  2664                           	
  2665  03A6                     l14512:	
  2666                           ;i2c.c: 48: temp=SSP2BUF;
  2667  03A6  0024               	movlb 4	; select bank4
  2668  03A7  0819               	movf	(537)^0200h,w	;volatile
  2669  03A8  00F5               	movwf	(??_I2CEEworker+0)+0
  2670  03A9  0875               	movf	(??_I2CEEworker+0)+0,w
  2671  03AA  0020               	movlb 0	; select bank0
  2672  03AB  00C1               	movwf	(I2CEEworker@temp)
  2673                           	line	49
  2674                           ;i2c.c: 49: break;
  2675  03AC  2C0C               	goto	l3210
  2676                           	line	50
  2677                           ;i2c.c: 50: case 0x21:
  2678                           	
  2679  03AD                     l3205:	
  2680                           	line	51
  2681                           	
  2682  03AD                     l14514:	
  2683                           ;i2c.c: 51: if(!addressed)
  2684  03AD  08C3               	movf	(I2CEEworker@addressed),f
  2685  03AE  1D03               	skipz
  2686  03AF  2BB1               	goto	u2851
  2687  03B0  2BB2               	goto	u2850
  2688  03B1                     u2851:
  2689  03B1  2BBC               	goto	l14520
  2690  03B2                     u2850:
  2691                           	line	52
  2692                           	
  2693  03B2                     l14516:	
  2694                           ;i2c.c: 52: { addr=SSP2BUF;
  2695  03B2  0024               	movlb 4	; select bank4
  2696  03B3  0819               	movf	(537)^0200h,w	;volatile
  2697  03B4  00F5               	movwf	(??_I2CEEworker+0)+0
  2698  03B5  0875               	movf	(??_I2CEEworker+0)+0,w
  2699  03B6  0020               	movlb 0	; select bank0
  2700  03B7  00C4               	movwf	(I2CEEworker@addr)
  2701                           	line	53
  2702                           	
  2703  03B8                     l14518:	
  2704                           ;i2c.c: 53: addressed=1;
  2705  03B8  01C3               	clrf	(I2CEEworker@addressed)
  2706  03B9  1403               	bsf	status,0
  2707  03BA  0DC3               	rlf	(I2CEEworker@addressed),f
  2708                           	line	54
  2709                           ;i2c.c: 54: }
  2710  03BB  2C0C               	goto	l3210
  2711                           	line	55
  2712                           	
  2713  03BC                     l3206:	
  2714                           	line	57
  2715                           	
  2716  03BC                     l14520:	
  2717                           ;i2c.c: 55: else
  2718                           ;i2c.c: 56: {
  2719                           ;i2c.c: 57: EEPROMwrite(addr, SSP2BUF);
  2720  03BC  0024               	movlb 4	; select bank4
  2721  03BD  0819               	movf	(537)^0200h,w	;volatile
  2722  03BE  00F5               	movwf	(??_I2CEEworker+0)+0
  2723  03BF  0875               	movf	(??_I2CEEworker+0)+0,w
  2724  03C0  00F3               	movwf	(?_EEPROMwrite)
  2725  03C1  0020               	movlb 0	; select bank0
  2726  03C2  0844               	movf	(I2CEEworker@addr),w
  2727  03C3  3187  271A  3183   	fcall	_EEPROMwrite
  2728                           	line	58
  2729                           	
  2730  03C6                     l14522:	
  2731                           ;i2c.c: 58: addr++;
  2732  03C6  3001               	movlw	(01h)
  2733  03C7  00F5               	movwf	(??_I2CEEworker+0)+0
  2734  03C8  0875               	movf	(??_I2CEEworker+0)+0,w
  2735  03C9  0020               	movlb 0	; select bank0
  2736  03CA  07C4               	addwf	(I2CEEworker@addr),f
  2737  03CB  2C0C               	goto	l3210
  2738                           	line	59
  2739                           	
  2740  03CC                     l3207:	
  2741                           	line	61
  2742                           ;i2c.c: 59: }
  2743                           ;i2c.c: 61: break;
  2744  03CC  2C0C               	goto	l3210
  2745                           	line	62
  2746                           ;i2c.c: 62: case 0x05:
  2747                           	
  2748  03CD                     l3208:	
  2749                           	line	63
  2750                           	
  2751  03CD                     l14524:	
  2752                           ;i2c.c: 63: temp=SSP2BUF;
  2753  03CD  0024               	movlb 4	; select bank4
  2754  03CE  0819               	movf	(537)^0200h,w	;volatile
  2755  03CF  00F5               	movwf	(??_I2CEEworker+0)+0
  2756  03D0  0875               	movf	(??_I2CEEworker+0)+0,w
  2757  03D1  0020               	movlb 0	; select bank0
  2758  03D2  00C1               	movwf	(I2CEEworker@temp)
  2759                           	line	64
  2760                           	
  2761  03D3                     l14526:	
  2762                           ;i2c.c: 64: I2CWrite(EEPROMread(addr++));
  2763  03D3  0844               	movf	(I2CEEworker@addr),w
  2764  03D4  3187  2773  3183   	fcall	_EEPROMread
  2765  03D7  3187  2768  3183   	fcall	_I2CWrite
  2766                           	
  2767  03DA                     l14528:	
  2768  03DA  3001               	movlw	(01h)
  2769  03DB  00F5               	movwf	(??_I2CEEworker+0)+0
  2770  03DC  0875               	movf	(??_I2CEEworker+0)+0,w
  2771  03DD  0020               	movlb 0	; select bank0
  2772  03DE  07C4               	addwf	(I2CEEworker@addr),f
  2773                           	line	65
  2774                           ;i2c.c: 65: break;
  2775  03DF  2C0C               	goto	l3210
  2776                           	line	66
  2777                           ;i2c.c: 66: case 0x24:
  2778                           	
  2779  03E0                     l3209:	
  2780                           	line	67
  2781                           	
  2782  03E0                     l14530:	
  2783                           ;i2c.c: 67: temp=SSP2BUF;
  2784  03E0  0024               	movlb 4	; select bank4
  2785  03E1  0819               	movf	(537)^0200h,w	;volatile
  2786  03E2  00F5               	movwf	(??_I2CEEworker+0)+0
  2787  03E3  0875               	movf	(??_I2CEEworker+0)+0,w
  2788  03E4  0020               	movlb 0	; select bank0
  2789  03E5  00C1               	movwf	(I2CEEworker@temp)
  2790                           	line	68
  2791                           	
  2792  03E6                     l14532:	
  2793                           ;i2c.c: 68: I2CWrite(EEPROMread(addr++));
  2794  03E6  0844               	movf	(I2CEEworker@addr),w
  2795  03E7  3187  2773  3183   	fcall	_EEPROMread
  2796  03EA  3187  2768  3183   	fcall	_I2CWrite
  2797                           	
  2798  03ED                     l14534:	
  2799  03ED  3001               	movlw	(01h)
  2800  03EE  00F5               	movwf	(??_I2CEEworker+0)+0
  2801  03EF  0875               	movf	(??_I2CEEworker+0)+0,w
  2802  03F0  0020               	movlb 0	; select bank0
  2803  03F1  07C4               	addwf	(I2CEEworker@addr),f
  2804                           	line	69
  2805                           ;i2c.c: 69: break;
  2806  03F2  2C0C               	goto	l3210
  2807                           	line	70
  2808                           	
  2809  03F3                     l14536:	
  2810                           ;i2c.c: 70: }
  2811  03F3  2C0C               	goto	l3210
  2812                           	line	45
  2813                           	
  2814  03F4                     l3202:	
  2815                           	
  2816  03F4                     l14538:	
  2817  03F4  0842               	movf	(I2CEEworker@token),w
  2818                           	; Switch size 1, requested type "space"
  2819                           ; Number of cases is 4, Range of values is 1 to 36
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte           13     7 (average)
  2823                           ; direct_byte           81     9 (fixed)
  2824                           ; jumptable            263     9 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826                           
  2827                           	opt asmopt_off
  2828  03F5  3A01               	xorlw	1^0	; case 1
  2829  03F6  1903               	skipnz
  2830  03F7  2BA6               	goto	l14512
  2831  03F8  3A04               	xorlw	5^1	; case 5
  2832  03F9  1903               	skipnz
  2833  03FA  2BCD               	goto	l14524
  2834  03FB  3A24               	xorlw	33^5	; case 33
  2835  03FC  1903               	skipnz
  2836  03FD  2BAD               	goto	l14514
  2837  03FE  3A05               	xorlw	36^33	; case 36
  2838  03FF  1903               	skipnz
  2839  0400  2BE0               	goto	l14530
  2840  0401  2C0C               	goto	l3210
  2841                           	opt asmopt_on
  2842                           
  2843                           	line	70
  2844                           	
  2845  0402                     l3204:	
  2846                           	line	71
  2847                           ;i2c.c: 71: }
  2848  0402  2C0C               	goto	l3210
  2849                           	line	72
  2850                           	
  2851  0403                     l3201:	
  2852                           ;i2c.c: 72: else if(SSP2STATbits.P)
  2853  0403  1E1C               	btfss	(540)^0200h,4	;volatile
  2854  0404  2C06               	goto	u2861
  2855  0405  2C07               	goto	u2860
  2856  0406                     u2861:
  2857  0406  2C0C               	goto	l3210
  2858  0407                     u2860:
  2859                           	line	73
  2860                           	
  2861  0407                     l14540:	
  2862                           ;i2c.c: 73: { RC5=0;;
  2863  0407  0020               	movlb 0	; select bank0
  2864  0408  128E               	bcf	(117/8),(117)&7
  2865                           	line	74
  2866                           ;i2c.c: 74: addressed=0;
  2867  0409  01C3               	clrf	(I2CEEworker@addressed)
  2868                           	line	75
  2869                           # 75 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  2870  040A  0000               NOP ;#
  2871                           psect	text733
  2872  040B  2C0C               	goto	l3210
  2873                           	line	76
  2874                           	
  2875  040C                     l3211:	
  2876                           	line	77
  2877                           	
  2878  040C                     l3210:	
  2879                           ;i2c.c: 76: }
  2880                           ;i2c.c: 77: SSP2IF=0;
  2881  040C  0020               	movlb 0	; select bank0
  2882  040D  1014               	bcf	(160/8),(160)&7
  2883                           	line	78
  2884                           ;i2c.c: 78: SSP2CON1bits.SSPEN=1;
  2885  040E  0024               	movlb 4	; select bank4
  2886  040F  169D               	bsf	(541)^0200h,5	;volatile
  2887                           	line	79
  2888                           ;i2c.c: 79: SSP2CON1bits.CKP=1;
  2889  0410  161D               	bsf	(541)^0200h,4	;volatile
  2890  0411  2B92               	goto	l14504
  2891                           	line	80
  2892                           	
  2893  0412                     l3200:	
  2894  0412  2B92               	goto	l14504
  2895                           	line	81
  2896                           	
  2897  0413                     l3212:	
  2898                           	line	36
  2899  0413  2B92               	goto	l14504
  2900                           	
  2901  0414                     l3213:	
  2902                           	line	82
  2903                           	
  2904  0414                     l3214:	
  2905  0414  0008               	return
  2906                           	opt stack 0
  2907                           GLOBAL	__end_of_I2CEEworker
  2908  0415                     	__end_of_I2CEEworker:
  2909 ;; =============== function _I2CEEworker ends ============
  2910                           
  2911                           	signat	_I2CEEworker,88
  2912                           psect	text734,local,class=CODE,delta=2
  2913                           global __ptext734
  2914  079D                     __ptext734:
  2915                           
  2916 ;; *************** function _nullfunc1 *****************
  2917 ;; Defined at:
  2918 ;;		line 66 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		None
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           psect	text734
  2946                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  2947                           	line	66
  2948                           	global	__size_of_nullfunc1
  2949  0001                     	__size_of_nullfunc1	equ	__end_of_nullfunc1-_nullfunc1
  2950                           	
  2951  079D                     _nullfunc1:	
  2952                           	opt	stack 14
  2953                           ; Regs used in _nullfunc1: []
  2954                           	
  2955  079D                     l1591:	
  2956  079D  0008               	return
  2957                           	opt stack 0
  2958                           GLOBAL	__end_of_nullfunc1
  2959  079E                     	__end_of_nullfunc1:
  2960 ;; =============== function _nullfunc1 ends ============
  2961                           
  2962                           	signat	_nullfunc1,88
  2963                           psect	text735,local,class=CODE,delta=2
  2964                           global __ptext735
  2965  075D                     __ptext735:
  2966                           
  2967 ;; *************** function _UARTworker *****************
  2968 ;; Defined at:
  2969 ;;		line 47 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  c               1    6[COMMON] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2987 ;;Total ram usage:        2 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    2
  2990 ;; This function calls:
  2991 ;;		_UARTread
  2992 ;;		_UARTwrite
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           psect	text735
  2998                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  2999                           	line	47
  3000                           	global	__size_of_UARTworker
  3001  000B                     	__size_of_UARTworker	equ	__end_of_UARTworker-_UARTworker
  3002                           	
  3003  075D                     _UARTworker:	
  3004                           	opt	stack 13
  3005                           ; Regs used in _UARTworker: [wreg+fsr1l-status,0+pclath+cstack]
  3006                           	line	50
  3007                           	
  3008  075D                     l14406:	
  3009                           ;uart.c: 48: unsigned char c;
  3010                           ;uart.c: 50: c=UARTread();
  3011  075D  3186  26E2  3187   	fcall	_UARTread
  3012  0760  00F5               	movwf	(??_UARTworker+0)+0
  3013  0761  0875               	movf	(??_UARTworker+0)+0,w
  3014  0762  00F6               	movwf	(UARTworker@c)
  3015                           	line	51
  3016                           	
  3017  0763                     l14408:	
  3018                           ;uart.c: 51: UARTwrite(c);
  3019  0763  0876               	movf	(UARTworker@c),w
  3020  0764  3187  2741  3187   	fcall	_UARTwrite
  3021                           	line	52
  3022                           	
  3023  0767                     l4829:	
  3024  0767  0008               	return
  3025                           	opt stack 0
  3026                           GLOBAL	__end_of_UARTworker
  3027  0768                     	__end_of_UARTworker:
  3028 ;; =============== function _UARTworker ends ============
  3029                           
  3030                           	signat	_UARTworker,88
  3031                           	global	_init
  3032                           psect	text736,local,class=CODE,delta=2
  3033                           global __ptext736
  3034  0567                     __ptext736:
  3035                           
  3036 ;; *************** function _init *****************
  3037 ;; Defined at:
  3038 ;;		line 95 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		_initSPI
  3061 ;;		_initI2C
  3062 ;;		_initUART
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           psect	text736
  3068                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  3069                           	line	95
  3070                           	global	__size_of_init
  3071  0069                     	__size_of_init	equ	__end_of_init-_init
  3072                           	
  3073  0567                     _init:	
  3074                           	opt	stack 13
  3075                           ; Regs used in _init: [wreg-status,0+pclath+cstack]
  3076                           	line	96
  3077                           	
  3078  0567                     l14252:	
  3079                           ;main.c: 96: OSCCON=0xEA;
  3080  0567  30EA               	movlw	(0EAh)
  3081  0568  0021               	movlb 1	; select bank1
  3082  0569  0099               	movwf	(153)^080h	;volatile
  3083                           	line	100
  3084                           	
  3085  056A                     l14254:	
  3086                           ;main.c: 100: PORTA=0x00;
  3087  056A  0020               	movlb 0	; select bank0
  3088  056B  018C               	clrf	(12)	;volatile
  3089                           	line	101
  3090                           	
  3091  056C                     l14256:	
  3092                           ;main.c: 101: LATA=0x00;
  3093  056C  0022               	movlb 2	; select bank2
  3094  056D  018C               	clrf	(268)^0100h	;volatile
  3095                           	line	102
  3096                           	
  3097  056E                     l14258:	
  3098                           ;main.c: 102: ANSELA=0x00;
  3099  056E  0023               	movlb 3	; select bank3
  3100  056F  018C               	clrf	(396)^0180h	;volatile
  3101                           	line	103
  3102                           	
  3103  0570                     l14260:	
  3104                           ;main.c: 103: TRISA=0xFF;
  3105  0570  30FF               	movlw	(0FFh)
  3106  0571  0021               	movlb 1	; select bank1
  3107  0572  008C               	movwf	(140)^080h	;volatile
  3108                           	line	104
  3109                           ;main.c: 104: WPUA=0x00;
  3110  0573  0024               	movlb 4	; select bank4
  3111  0574  018C               	clrf	(524)^0200h	;volatile
  3112                           	line	107
  3113                           ;main.c: 107: PORTB=0x00;
  3114  0575  0020               	movlb 0	; select bank0
  3115  0576  018D               	clrf	(13)	;volatile
  3116                           	line	108
  3117                           ;main.c: 108: LATB=0x00;
  3118  0577  0022               	movlb 2	; select bank2
  3119  0578  018D               	clrf	(269)^0100h	;volatile
  3120                           	line	109
  3121                           ;main.c: 109: ANSELB=0x00;
  3122  0579  0023               	movlb 3	; select bank3
  3123  057A  018D               	clrf	(397)^0180h	;volatile
  3124                           	line	110
  3125                           	
  3126  057B                     l14262:	
  3127                           ;main.c: 110: TRISB=0xFF;
  3128  057B  30FF               	movlw	(0FFh)
  3129  057C  0021               	movlb 1	; select bank1
  3130  057D  008D               	movwf	(141)^080h	;volatile
  3131                           	line	111
  3132                           	
  3133  057E                     l14264:	
  3134                           ;main.c: 111: WPUB=0x50;
  3135  057E  3050               	movlw	(050h)
  3136  057F  0024               	movlb 4	; select bank4
  3137  0580  008D               	movwf	(525)^0200h	;volatile
  3138                           	line	114
  3139                           ;main.c: 114: PORTC=0x00;
  3140  0581  0020               	movlb 0	; select bank0
  3141  0582  018E               	clrf	(14)	;volatile
  3142                           	line	115
  3143                           ;main.c: 115: LATC=0x00;
  3144  0583  0022               	movlb 2	; select bank2
  3145  0584  018E               	clrf	(270)^0100h	;volatile
  3146                           	line	116
  3147                           ;main.c: 116: ANSELC=0x00;
  3148  0585  0023               	movlb 3	; select bank3
  3149  0586  018E               	clrf	(398)^0180h	;volatile
  3150                           	line	117
  3151                           	
  3152  0587                     l14266:	
  3153                           ;main.c: 117: TRISC=0xD7;
  3154  0587  30D7               	movlw	(0D7h)
  3155  0588  0021               	movlb 1	; select bank1
  3156  0589  008E               	movwf	(142)^080h	;volatile
  3157                           	line	118
  3158                           	
  3159  058A                     l14268:	
  3160                           ;main.c: 118: WPUC=0x05;
  3161  058A  3005               	movlw	(05h)
  3162  058B  0024               	movlb 4	; select bank4
  3163  058C  008E               	movwf	(526)^0200h	;volatile
  3164                           	line	120
  3165                           	
  3166  058D                     l14270:	
  3167                           ;main.c: 120: nWPUEN=0;
  3168  058D  0021               	movlb 1	; select bank1
  3169  058E  1395               	bcf	(1199/8)^080h,(1199)&7
  3170                           	line	123
  3171                           ;main.c: 123: APFCON0=0x00;
  3172  058F  0022               	movlb 2	; select bank2
  3173  0590  019D               	clrf	(285)^0100h	;volatile
  3174                           	line	124
  3175                           ;main.c: 124: APFCON1=0x00;
  3176  0591  019E               	clrf	(286)^0100h	;volatile
  3177                           	line	126
  3178                           	
  3179  0592                     l14272:	
  3180                           ;main.c: 126: RC5=1;;
  3181  0592  0020               	movlb 0	; select bank0
  3182  0593  168E               	bsf	(117/8),(117)&7
  3183                           	line	127
  3184                           	
  3185  0594                     l14274:	
  3186                           ;main.c: 127: RC3=1;;
  3187  0594  158E               	bsf	(115/8),(115)&7
  3188                           	line	133
  3189                           	
  3190  0595                     l14276:	
  3191                           ;main.c: 133: mode_device=0x00;
  3192  0595  01B0               	clrf	(_mode_device)
  3193                           	line	134
  3194                           	
  3195  0596                     l14278:	
  3196                           ;main.c: 134: mode_protocol=0x00;
  3197  0596  01F8               	clrf	(_mode_protocol)
  3198                           	line	135
  3199                           	
  3200  0597                     l14280:	
  3201                           ;main.c: 135: mode_device|=(RC2<<1);
  3202  0597  3000               	movlw	0
  3203  0598  190E               	btfsc	(114/8),(114)&7
  3204  0599  3002               	movlw	(1 << (01h))
  3205  059A  00F5               	movwf	(??_init+0)+0
  3206  059B  0875               	movf	(??_init+0)+0,w
  3207  059C  04B0               	iorwf	(_mode_device),f
  3208                           	line	136
  3209                           	
  3210  059D                     l14282:	
  3211                           ;main.c: 136: mode_device|=(RC0);
  3212  059D  3000               	movlw	0
  3213  059E  180E               	btfsc	(112/8),(112)&7
  3214  059F  3001               	movlw	1
  3215  05A0  00F5               	movwf	(??_init+0)+0
  3216  05A1  0875               	movf	(??_init+0)+0,w
  3217  05A2  04B0               	iorwf	(_mode_device),f
  3218                           	line	137
  3219                           	
  3220  05A3                     l14284:	
  3221                           ;main.c: 137: mode_protocol|=(RB6<<1);
  3222  05A3  3000               	movlw	0
  3223  05A4  1B0D               	btfsc	(110/8),(110)&7
  3224  05A5  3002               	movlw	(1 << (01h))
  3225  05A6  00F5               	movwf	(??_init+0)+0
  3226  05A7  0875               	movf	(??_init+0)+0,w
  3227  05A8  04F8               	iorwf	(_mode_protocol),f
  3228                           	line	138
  3229                           	
  3230  05A9                     l14286:	
  3231                           ;main.c: 138: mode_protocol|=(RB4);
  3232  05A9  3000               	movlw	0
  3233  05AA  1A0D               	btfsc	(108/8),(108)&7
  3234  05AB  3001               	movlw	1
  3235  05AC  00F5               	movwf	(??_init+0)+0
  3236  05AD  0875               	movf	(??_init+0)+0,w
  3237  05AE  04F8               	iorwf	(_mode_protocol),f
  3238                           	line	142
  3239                           ;main.c: 142: switch(mode_protocol)
  3240  05AF  2DBF               	goto	l14296
  3241                           	line	143
  3242                           ;main.c: 143: { case 0x03: initSPI();
  3243                           	
  3244  05B0                     l1609:	
  3245                           	
  3246  05B0                     l14288:	
  3247  05B0  3187  279E  3185   	fcall	_initSPI
  3248                           	line	144
  3249                           ;main.c: 144: break;
  3250  05B3  2DCD               	goto	l1610
  3251                           	line	145
  3252                           ;main.c: 145: case 0x02: initI2C();
  3253                           	
  3254  05B4                     l1611:	
  3255                           	
  3256  05B4                     l14290:	
  3257  05B4  3187  2750  3185   	fcall	_initI2C
  3258                           	line	146
  3259                           ;main.c: 146: break;
  3260  05B7  2DCD               	goto	l1610
  3261                           	line	147
  3262                           ;main.c: 147: case 0x01: initUART();
  3263                           	
  3264  05B8                     l1612:	
  3265                           	
  3266  05B8                     l14292:	
  3267  05B8  3186  26B0  3185   	fcall	_initUART
  3268                           	line	148
  3269                           ;main.c: 148: break;
  3270  05BB  2DCD               	goto	l1610
  3271                           	line	149
  3272                           ;main.c: 149: case 0x00: break;
  3273                           	
  3274  05BC                     l1613:	
  3275  05BC  2DCD               	goto	l1610
  3276                           	line	150
  3277                           ;main.c: 150: default: break;
  3278                           	
  3279  05BD                     l1614:	
  3280  05BD  2DCD               	goto	l1610
  3281                           	line	151
  3282                           	
  3283  05BE                     l14294:	
  3284                           ;main.c: 151: }
  3285  05BE  2DCD               	goto	l1610
  3286                           	line	142
  3287                           	
  3288  05BF                     l1608:	
  3289                           	
  3290  05BF                     l14296:	
  3291  05BF  0878               	movf	(_mode_protocol),w
  3292                           	; Switch size 1, requested type "space"
  3293                           ; Number of cases is 4, Range of values is 0 to 3
  3294                           ; switch strategies available:
  3295                           ; Name         Instructions Cycles
  3296                           ; simple_byte           13     7 (average)
  3297                           ; direct_byte           14     6 (fixed)
  3298                           ; jumptable            260     6 (fixed)
  3299                           ; rangetable             8     4 (fixed)
  3300                           ; spacedrange           13     6 (fixed)
  3301                           ; locatedrange           4     3 (fixed)
  3302                           ;	Chosen strategy is simple_byte
  3303                           
  3304                           	opt asmopt_off
  3305  05C0  3A00               	xorlw	0^0	; case 0
  3306  05C1  1903               	skipnz
  3307  05C2  2DCD               	goto	l1610
  3308  05C3  3A01               	xorlw	1^0	; case 1
  3309  05C4  1903               	skipnz
  3310  05C5  2DB8               	goto	l14292
  3311  05C6  3A03               	xorlw	2^1	; case 2
  3312  05C7  1903               	skipnz
  3313  05C8  2DB4               	goto	l14290
  3314  05C9  3A01               	xorlw	3^2	; case 3
  3315  05CA  1903               	skipnz
  3316  05CB  2DB0               	goto	l14288
  3317  05CC  2DCD               	goto	l1610
  3318                           	opt asmopt_on
  3319                           
  3320                           	line	151
  3321                           	
  3322  05CD                     l1610:	
  3323                           	line	153
  3324                           ;main.c: 153: RC5=0;;
  3325  05CD  0020               	movlb 0	; select bank0
  3326  05CE  128E               	bcf	(117/8),(117)&7
  3327                           	line	159
  3328                           	
  3329  05CF                     l1615:	
  3330  05CF  0008               	return
  3331                           	opt stack 0
  3332                           GLOBAL	__end_of_init
  3333  05D0                     	__end_of_init:
  3334 ;; =============== function _init ends ============
  3335                           
  3336                           	signat	_init,88
  3337                           	global	_UARTwrite
  3338                           psect	text737,local,class=CODE,delta=2
  3339                           global __ptext737
  3340  0741                     __ptext737:
  3341                           
  3342 ;; *************** function _UARTwrite *****************
  3343 ;; Defined at:
  3344 ;;		line 73 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  c               1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  c               1    3[COMMON] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_UARTworker
  3369 ;;		_teletype
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           psect	text737
  3373                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  3374                           	line	73
  3375                           	global	__size_of_UARTwrite
  3376  000F                     	__size_of_UARTwrite	equ	__end_of_UARTwrite-_UARTwrite
  3377                           	
  3378  0741                     _UARTwrite:	
  3379                           	opt	stack 13
  3380                           ; Regs used in _UARTwrite: [wreg]
  3381                           ;UARTwrite@c stored from wreg
  3382  0741  00F3               	movwf	(UARTwrite@c)
  3383                           	line	74
  3384                           	
  3385  0742                     l14246:	
  3386                           ;uart.c: 74: RC3=1;;
  3387  0742  0020               	movlb 0	; select bank0
  3388  0743  158E               	bsf	(115/8),(115)&7
  3389                           	line	76
  3390                           ;uart.c: 76: while(!TRMT);
  3391  0744  2F45               	goto	l4838
  3392                           	
  3393  0745                     l4839:	
  3394                           	
  3395  0745                     l4838:	
  3396  0745  0023               	movlb 3	; select bank3
  3397  0746  1C9E               	btfss	(3313/8)^0180h,(3313)&7
  3398  0747  2F49               	goto	u2581
  3399  0748  2F4A               	goto	u2580
  3400  0749                     u2581:
  3401  0749  2F45               	goto	l4838
  3402  074A                     u2580:
  3403  074A  2F4B               	goto	l14248
  3404                           	
  3405  074B                     l4840:	
  3406                           	line	78
  3407                           	
  3408  074B                     l14248:	
  3409                           ;uart.c: 78: TXREG=c;
  3410  074B  0873               	movf	(UARTwrite@c),w
  3411  074C  009A               	movwf	(410)^0180h	;volatile
  3412                           	line	80
  3413                           	
  3414  074D                     l14250:	
  3415                           ;uart.c: 80: RC3=0;;
  3416  074D  0020               	movlb 0	; select bank0
  3417  074E  118E               	bcf	(115/8),(115)&7
  3418                           	line	81
  3419                           	
  3420  074F                     l4841:	
  3421  074F  0008               	return
  3422                           	opt stack 0
  3423                           GLOBAL	__end_of_UARTwrite
  3424  0750                     	__end_of_UARTwrite:
  3425 ;; =============== function _UARTwrite ends ============
  3426                           
  3427                           	signat	_UARTwrite,4216
  3428                           	global	_UARTread
  3429                           psect	text738,local,class=CODE,delta=2
  3430                           global __ptext738
  3431  06E2                     __ptext738:
  3432                           
  3433 ;; *************** function _UARTread *****************
  3434 ;; Defined at:
  3435 ;;		line 56 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  temp            1    4[COMMON] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      unsigned char 
  3442 ;; Registers used:
  3443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3453 ;;Total ram usage:        2 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_UARTworker
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           psect	text738
  3463                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  3464                           	line	56
  3465                           	global	__size_of_UARTread
  3466  001E                     	__size_of_UARTread	equ	__end_of_UARTread-_UARTread
  3467                           	
  3468  06E2                     _UARTread:	
  3469                           	opt	stack 13
  3470                           ; Regs used in _UARTread: [wreg+fsr1l-status,0]
  3471                           	line	59
  3472                           	
  3473  06E2                     l14232:	
  3474                           ;uart.c: 57: unsigned char temp;
  3475                           ;uart.c: 59: while(rtail==rhead);
  3476  06E2  2EE4               	goto	l14234
  3477                           	
  3478  06E3                     l4833:	
  3479  06E3  2EE4               	goto	l14234
  3480                           	
  3481  06E4                     l4832:	
  3482                           	
  3483  06E4                     l14234:	
  3484  06E4  087A               	movf	(_rtail),w	;volatile
  3485  06E5  0679               	xorwf	(_rhead),w	;volatile
  3486  06E6  1903               	skipnz
  3487  06E7  2EE9               	goto	u2571
  3488  06E8  2EEA               	goto	u2570
  3489  06E9                     u2571:
  3490  06E9  2EE4               	goto	l14234
  3491  06EA                     u2570:
  3492                           	
  3493  06EA                     l4834:	
  3494                           	line	62
  3495                           ;uart.c: 62: GIE=0;
  3496  06EA  138B               	bcf	(95/8),(95)&7
  3497                           	line	63
  3498                           	
  3499  06EB                     l14236:	
  3500                           ;uart.c: 63: rtail++;
  3501  06EB  3001               	movlw	(01h)
  3502  06EC  00F3               	movwf	(??_UARTread+0)+0
  3503  06ED  0873               	movf	(??_UARTread+0)+0,w
  3504  06EE  07FA               	addwf	(_rtail),f	;volatile
  3505                           	line	64
  3506                           ;uart.c: 64: rtail&=(8-1);
  3507  06EF  3007               	movlw	(07h)
  3508  06F0  00F3               	movwf	(??_UARTread+0)+0
  3509  06F1  0873               	movf	(??_UARTread+0)+0,w
  3510  06F2  05FA               	andwf	(_rtail),f	;volatile
  3511                           	line	65
  3512                           	
  3513  06F3                     l14238:	
  3514                           ;uart.c: 65: temp=ringbuff[rtail];
  3515  06F3  087A               	movf	(_rtail),w	;volatile
  3516  06F4  0709               	addwf	wreg,w
  3517  06F5  3E20               	addlw	_ringbuff&0ffh
  3518  06F6  0086               	movwf	fsr1l
  3519  06F7  0187               	clrf fsr1h	
  3520                           	
  3521  06F8  0801               	movf	indf1,w
  3522  06F9  00F3               	movwf	(??_UARTread+0)+0
  3523  06FA  0873               	movf	(??_UARTread+0)+0,w
  3524  06FB  00F4               	movwf	(UARTread@temp)
  3525                           	line	66
  3526                           	
  3527  06FC                     l14240:	
  3528                           ;uart.c: 66: GIE=1;
  3529  06FC  178B               	bsf	(95/8),(95)&7
  3530                           	line	68
  3531                           	
  3532  06FD                     l14242:	
  3533                           ;uart.c: 68: return temp;
  3534  06FD  0874               	movf	(UARTread@temp),w
  3535  06FE  2EFF               	goto	l4835
  3536                           	
  3537  06FF                     l14244:	
  3538                           	line	69
  3539                           	
  3540  06FF                     l4835:	
  3541  06FF  0008               	return
  3542                           	opt stack 0
  3543                           GLOBAL	__end_of_UARTread
  3544  0700                     	__end_of_UARTread:
  3545 ;; =============== function _UARTread ends ============
  3546                           
  3547                           	signat	_UARTread,89
  3548                           	global	_setDAC
  3549                           psect	text739,local,class=CODE,delta=2
  3550                           global __ptext739
  3551  0790                     __ptext739:
  3552                           
  3553 ;; *************** function _setDAC *****************
  3554 ;; Defined at:
  3555 ;;		line 18 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\dac.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  dac             1    wreg     unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  dac             1    3[COMMON] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;		None               void
  3562 ;; Registers used:
  3563 ;;		wreg, status,2
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3573 ;;Total ram usage:        1 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_I2CDACworker
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           psect	text739
  3583                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\dac.c"
  3584                           	line	18
  3585                           	global	__size_of_setDAC
  3586  0006                     	__size_of_setDAC	equ	__end_of_setDAC-_setDAC
  3587                           	
  3588  0790                     _setDAC:	
  3589                           	opt	stack 13
  3590                           ; Regs used in _setDAC: [wreg+status,2]
  3591                           ;setDAC@dac stored from wreg
  3592  0790  00F3               	movwf	(setDAC@dac)
  3593                           	line	19
  3594                           	
  3595  0791                     l14230:	
  3596                           ;dac.c: 19: DACCON1=dac&0x1F;
  3597  0791  0873               	movf	(setDAC@dac),w
  3598  0792  391F               	andlw	01Fh
  3599  0793  0022               	movlb 2	; select bank2
  3600  0794  0099               	movwf	(281)^0100h	;volatile
  3601                           	line	20
  3602                           	
  3603  0795                     l11107:	
  3604  0795  0008               	return
  3605                           	opt stack 0
  3606                           GLOBAL	__end_of_setDAC
  3607  0796                     	__end_of_setDAC:
  3608 ;; =============== function _setDAC ends ============
  3609                           
  3610                           	signat	_setDAC,4216
  3611                           	global	_enableDAC
  3612                           psect	text740,local,class=CODE,delta=2
  3613                           global __ptext740
  3614  0796                     __ptext740:
  3615                           
  3616 ;; *************** function _enableDAC *****************
  3617 ;; Defined at:
  3618 ;;		line 8 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\dac.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;		None               void
  3625 ;; Registers used:
  3626 ;;		wreg
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_I2CDACworker
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           psect	text740
  3646                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\dac.c"
  3647                           	line	8
  3648                           	global	__size_of_enableDAC
  3649  0004                     	__size_of_enableDAC	equ	__end_of_enableDAC-_enableDAC
  3650                           	
  3651  0796                     _enableDAC:	
  3652                           	opt	stack 13
  3653                           ; Regs used in _enableDAC: [wreg]
  3654                           	line	9
  3655                           	
  3656  0796                     l14228:	
  3657                           ;dac.c: 9: DACCON0=0b10100000;
  3658  0796  30A0               	movlw	(0A0h)
  3659  0797  0022               	movlb 2	; select bank2
  3660  0798  0098               	movwf	(280)^0100h	;volatile
  3661                           	line	10
  3662                           	
  3663  0799                     l11101:	
  3664  0799  0008               	return
  3665                           	opt stack 0
  3666                           GLOBAL	__end_of_enableDAC
  3667  079A                     	__end_of_enableDAC:
  3668 ;; =============== function _enableDAC ends ============
  3669                           
  3670                           	signat	_enableDAC,88
  3671                           	global	_getADC
  3672                           psect	text741,local,class=CODE,delta=2
  3673                           global __ptext741
  3674  05D0                     __ptext741:
  3675                           
  3676 ;; *************** function _getADC *****************
  3677 ;; Defined at:
  3678 ;;		line 16 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\adc.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  adc             1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  adc             1    5[COMMON] unsigned char 
  3683 ;;  i               2    6[COMMON] int 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2    3[COMMON] unsigned int 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, btemp+1
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3694 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3696 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3697 ;;Total ram usage:        9 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_I2CADCworker
  3704 ;;		_I2CDACworker
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           psect	text741
  3708                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\adc.c"
  3709                           	line	16
  3710                           	global	__size_of_getADC
  3711  0059                     	__size_of_getADC	equ	__end_of_getADC-_getADC
  3712                           	
  3713  05D0                     _getADC:	
  3714                           	opt	stack 13
  3715                           ; Regs used in _getADC: [wreg+status,2+status,0+btemp+1]
  3716                           ;getADC@adc stored from wreg
  3717                           	line	20
  3718  05D0  00F5               	movwf	(getADC@adc)
  3719                           	
  3720  05D1                     l14478:	
  3721                           ;adc.c: 17: int i;
  3722                           ;adc.c: 20: ADCON1=0b11000000;
  3723  05D1  30C0               	movlw	(0C0h)
  3724  05D2  0021               	movlb 1	; select bank1
  3725  05D3  009E               	movwf	(158)^080h	;volatile
  3726                           	line	21
  3727                           	
  3728  05D4                     l14480:	
  3729                           ;adc.c: 21: adc&=0x1F;
  3730  05D4  301F               	movlw	(01Fh)
  3731  05D5  0020               	movlb 0	; select bank0
  3732  05D6  00C1               	movwf	(??_getADC+0)+0
  3733  05D7  0841               	movf	(??_getADC+0)+0,w
  3734  05D8  05F5               	andwf	(getADC@adc),f
  3735                           	line	22
  3736                           	
  3737  05D9                     l14482:	
  3738                           ;adc.c: 22: ADCON0=0x01|(adc<<2);
  3739  05D9  0875               	movf	(getADC@adc),w
  3740  05DA  00C1               	movwf	(??_getADC+0)+0
  3741  05DB  3001               	movlw	(02h)-1
  3742  05DC                     u2795:
  3743  05DC  35C1               	lslf	(??_getADC+0)+0,f
  3744  05DD  3EFF               	addlw	-1
  3745  05DE  1D03               	skipz
  3746  05DF  2DDC               	goto	u2795
  3747  05E0  3541               	lslf	(??_getADC+0)+0,w
  3748  05E1  3801               	iorlw	01h
  3749  05E2  0021               	movlb 1	; select bank1
  3750  05E3  009D               	movwf	(157)^080h	;volatile
  3751                           	line	24
  3752                           	
  3753  05E4                     l14484:	
  3754                           ;adc.c: 24: for(i=0; i<4; i++) asm("nop");
  3755  05E4  01F6               	clrf	(getADC@i)
  3756  05E5  01F7               	clrf	(getADC@i+1)
  3757                           	
  3758  05E6                     l14486:	
  3759  05E6  0877               	movf	(getADC@i+1),w
  3760  05E7  3A80               	xorlw	80h
  3761  05E8  00FF               	movwf	btemp+1
  3762  05E9  3080               	movlw	(high(04h))^80h
  3763  05EA  027F               	subwf	btemp+1,w
  3764  05EB  1D03               	skipz
  3765  05EC  2DEF               	goto	u2805
  3766  05ED  3004               	movlw	low(04h)
  3767  05EE  0276               	subwf	(getADC@i),w
  3768  05EF                     u2805:
  3769                           
  3770  05EF  1C03               	skipc
  3771  05F0  2DF2               	goto	u2801
  3772  05F1  2DF3               	goto	u2800
  3773  05F2                     u2801:
  3774  05F2  2DF5               	goto	l9536
  3775  05F3                     u2800:
  3776  05F3  2E07               	goto	l9537
  3777                           	
  3778  05F4                     l14488:	
  3779  05F4  2E07               	goto	l9537
  3780                           	
  3781  05F5                     l9536:	
  3782                           # 24 "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\adc.c"
  3783  05F5  0000               nop ;#
  3784                           psect	text741
  3785                           	
  3786  05F6                     l14490:	
  3787  05F6  3001               	movlw	low(01h)
  3788  05F7  07F6               	addwf	(getADC@i),f
  3789  05F8  3000               	movlw	high(01h)
  3790  05F9  3DF7               	addwfc	(getADC@i+1),f
  3791                           	
  3792  05FA                     l14492:	
  3793  05FA  0877               	movf	(getADC@i+1),w
  3794  05FB  3A80               	xorlw	80h
  3795  05FC  00FF               	movwf	btemp+1
  3796  05FD  3080               	movlw	(high(04h))^80h
  3797  05FE  027F               	subwf	btemp+1,w
  3798  05FF  1D03               	skipz
  3799  0600  2E03               	goto	u2815
  3800  0601  3004               	movlw	low(04h)
  3801  0602  0276               	subwf	(getADC@i),w
  3802  0603                     u2815:
  3803                           
  3804  0603  1C03               	skipc
  3805  0604  2E06               	goto	u2811
  3806  0605  2E07               	goto	u2810
  3807  0606                     u2811:
  3808  0606  2DF5               	goto	l9536
  3809  0607                     u2810:
  3810                           	
  3811  0607                     l9537:	
  3812                           	line	26
  3813                           ;adc.c: 26: ADCON0bits.ADGO=1;
  3814  0607  0021               	movlb 1	; select bank1
  3815  0608  149D               	bsf	(157)^080h,1	;volatile
  3816                           	line	27
  3817                           ;adc.c: 27: while(ADCON0bits.ADGO);
  3818  0609  2E0A               	goto	l9538
  3819                           	
  3820  060A                     l9539:	
  3821                           	
  3822  060A                     l9538:	
  3823  060A  189D               	btfsc	(157)^080h,1	;volatile
  3824  060B  2E0D               	goto	u2821
  3825  060C  2E0E               	goto	u2820
  3826  060D                     u2821:
  3827  060D  2E0A               	goto	l9538
  3828  060E                     u2820:
  3829  060E  2E0F               	goto	l14494
  3830                           	
  3831  060F                     l9540:	
  3832                           	line	29
  3833                           	
  3834  060F                     l14494:	
  3835                           ;adc.c: 29: ADCON0&=0xFE;
  3836  060F  30FE               	movlw	(0FEh)
  3837  0610  0020               	movlb 0	; select bank0
  3838  0611  00C1               	movwf	(??_getADC+0)+0
  3839  0612  0841               	movf	(??_getADC+0)+0,w
  3840  0613  0021               	movlb 1	; select bank1
  3841  0614  059D               	andwf	(157)^080h,f	;volatile
  3842                           	line	30
  3843                           	
  3844  0615                     l14496:	
  3845                           ;adc.c: 30: return (ADRESH<<8)|ADRESL;
  3846  0615  081B               	movf	(155)^080h,w	;volatile
  3847  0616  0020               	movlb 0	; select bank0
  3848  0617  00C1               	movwf	(??_getADC+0)+0
  3849  0618  01C2               	clrf	(??_getADC+0)+0+1
  3850  0619  0021               	movlb 1	; select bank1
  3851  061A  081C               	movf	(156)^080h,w	;volatile
  3852  061B  0020               	movlb 0	; select bank0
  3853  061C  00C3               	movwf	(??_getADC+2)+0
  3854  061D  01C4               	clrf	(??_getADC+2)+0+1
  3855  061E  0843               	movf	(??_getADC+2)+0,w
  3856  061F  00C4               	movwf	(??_getADC+2)+1
  3857  0620  01C3               	clrf	(??_getADC+2)+0
  3858  0621  0841               	movf	0+(??_getADC+0)+0,w
  3859  0622  0443               	iorwf	0+(??_getADC+2)+0,w
  3860  0623  00F3               	movwf	(?_getADC)
  3861  0624  0842               	movf	1+(??_getADC+0)+0,w
  3862  0625  0444               	iorwf	1+(??_getADC+2)+0,w
  3863  0626  00F4               	movwf	1+(?_getADC)
  3864  0627  2E28               	goto	l9541
  3865                           	
  3866  0628                     l14498:	
  3867                           	line	31
  3868                           	
  3869  0628                     l9541:	
  3870  0628  0008               	return
  3871                           	opt stack 0
  3872                           GLOBAL	__end_of_getADC
  3873  0629                     	__end_of_getADC:
  3874 ;; =============== function _getADC ends ============
  3875                           
  3876                           	signat	_getADC,4218
  3877                           	global	_enableTS
  3878                           psect	text742,local,class=CODE,delta=2
  3879                           global __ptext742
  3880  077D                     __ptext742:
  3881                           
  3882 ;; *************** function _enableTS *****************
  3883 ;; Defined at:
  3884 ;;		line 35 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\adc.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;		None               void
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3902 ;;Total ram usage:        1 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    1
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_I2CADCworker
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           psect	text742
  3912                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\adc.c"
  3913                           	line	35
  3914                           	global	__size_of_enableTS
  3915  0007                     	__size_of_enableTS	equ	__end_of_enableTS-_enableTS
  3916                           	
  3917  077D                     _enableTS:	
  3918                           	opt	stack 13
  3919                           ; Regs used in _enableTS: [wreg+status,2+status,0]
  3920                           	line	36
  3921                           	
  3922  077D                     l14202:	
  3923                           ;adc.c: 36: FVRCON|=0b00100000;
  3924  077D  0022               	movlb 2	; select bank2
  3925  077E  1697               	bsf	(279)^0100h+(5/8),(5)&7	;volatile
  3926                           	line	37
  3927                           	
  3928  077F                     l14204:	
  3929                           ;adc.c: 37: FVRCON&=0b11101111;
  3930  077F  30EF               	movlw	(0EFh)
  3931  0780  00F3               	movwf	(??_enableTS+0)+0
  3932  0781  0873               	movf	(??_enableTS+0)+0,w
  3933  0782  0597               	andwf	(279)^0100h,f	;volatile
  3934                           	line	38
  3935                           	
  3936  0783                     l9544:	
  3937  0783  0008               	return
  3938                           	opt stack 0
  3939                           GLOBAL	__end_of_enableTS
  3940  0784                     	__end_of_enableTS:
  3941 ;; =============== function _enableTS ends ============
  3942                           
  3943                           	signat	_enableTS,88
  3944                           	global	_I2CWrite
  3945                           psect	text743,local,class=CODE,delta=2
  3946                           global __ptext743
  3947  0768                     __ptext743:
  3948                           
  3949 ;; *************** function _I2CWrite *****************
  3950 ;; Defined at:
  3951 ;;		line 182 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  c               1    wreg     unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  c               1    3[COMMON] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;		None               void
  3958 ;; Registers used:
  3959 ;;		wreg
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3969 ;;Total ram usage:        1 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_I2CEEworker
  3976 ;;		_I2CADCworker
  3977 ;;		_I2CDACworker
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           psect	text743
  3981                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  3982                           	line	182
  3983                           	global	__size_of_I2CWrite
  3984  000B                     	__size_of_I2CWrite	equ	__end_of_I2CWrite-_I2CWrite
  3985                           	
  3986  0768                     _I2CWrite:	
  3987                           	opt	stack 13
  3988                           ; Regs used in _I2CWrite: [wreg]
  3989                           ;I2CWrite@c stored from wreg
  3990                           	line	185
  3991  0768  00F3               	movwf	(I2CWrite@c)
  3992                           	line	183
  3993                           ;i2c.c: 183: do
  3994                           	
  3995  0769                     l3249:	
  3996                           	line	185
  3997                           ;i2c.c: 184: {
  3998                           ;i2c.c: 185: SSP2CON1bits.WCOL=0;
  3999  0769  0024               	movlb 4	; select bank4
  4000  076A  139D               	bcf	(541)^0200h,7	;volatile
  4001                           	line	186
  4002                           	
  4003  076B                     l14474:	
  4004                           ;i2c.c: 186: SSP2BUF=c;
  4005  076B  0873               	movf	(I2CWrite@c),w
  4006  076C  0099               	movwf	(537)^0200h	;volatile
  4007                           	line	187
  4008                           	
  4009  076D                     l14476:	
  4010                           ;i2c.c: 187: } while(SSP2CON1bits.WCOL);
  4011  076D  1B9D               	btfsc	(541)^0200h,7	;volatile
  4012  076E  2F70               	goto	u2781
  4013  076F  2F71               	goto	u2780
  4014  0770                     u2781:
  4015  0770  2F69               	goto	l3249
  4016  0771                     u2780:
  4017                           	
  4018  0771                     l3250:	
  4019                           	line	188
  4020                           ;i2c.c: 188: SSP2CON1bits.CKP=1;
  4021  0771  161D               	bsf	(541)^0200h,4	;volatile
  4022                           	line	189
  4023                           	
  4024  0772                     l3251:	
  4025  0772  0008               	return
  4026                           	opt stack 0
  4027                           GLOBAL	__end_of_I2CWrite
  4028  0773                     	__end_of_I2CWrite:
  4029 ;; =============== function _I2CWrite ends ============
  4030                           
  4031                           	signat	_I2CWrite,4216
  4032                           	global	_EEPROMread
  4033                           psect	text744,local,class=CODE,delta=2
  4034                           global __ptext744
  4035  0773                     __ptext744:
  4036                           
  4037 ;; *************** function _EEPROMread *****************
  4038 ;; Defined at:
  4039 ;;		line 24 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\eeprom.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  addr            1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  addr            1    3[COMMON] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4057 ;;Total ram usage:        1 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_I2CEEworker
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           psect	text744
  4067                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\eeprom.c"
  4068                           	line	24
  4069                           	global	__size_of_EEPROMread
  4070  000A                     	__size_of_EEPROMread	equ	__end_of_EEPROMread-_EEPROMread
  4071                           	
  4072  0773                     _EEPROMread:	
  4073                           	opt	stack 13
  4074                           ; Regs used in _EEPROMread: [wreg]
  4075                           ;EEPROMread@addr stored from wreg
  4076  0773  00F3               	movwf	(EEPROMread@addr)
  4077                           	line	25
  4078                           	
  4079  0774                     l14464:	
  4080                           ;eeprom.c: 25: EEADRL=addr;
  4081  0774  0873               	movf	(EEPROMread@addr),w
  4082  0775  0023               	movlb 3	; select bank3
  4083  0776  0091               	movwf	(401)^0180h	;volatile
  4084                           	line	26
  4085                           	
  4086  0777                     l14466:	
  4087                           ;eeprom.c: 26: EECON1bits.CFGS=0;
  4088  0777  1315               	bcf	(405)^0180h,6	;volatile
  4089                           	line	27
  4090                           	
  4091  0778                     l14468:	
  4092                           ;eeprom.c: 27: EECON1bits.EEPGD=0;
  4093  0778  1395               	bcf	(405)^0180h,7	;volatile
  4094                           	line	28
  4095                           	
  4096  0779                     l14470:	
  4097                           ;eeprom.c: 28: EECON1bits.RD=1;
  4098  0779  1415               	bsf	(405)^0180h,0	;volatile
  4099                           	line	30
  4100                           ;eeprom.c: 30: return EEDATL;
  4101  077A  0813               	movf	(403)^0180h,w	;volatile
  4102  077B  2F7C               	goto	l7979
  4103                           	
  4104  077C                     l14472:	
  4105                           	line	31
  4106                           	
  4107  077C                     l7979:	
  4108  077C  0008               	return
  4109                           	opt stack 0
  4110                           GLOBAL	__end_of_EEPROMread
  4111  077D                     	__end_of_EEPROMread:
  4112 ;; =============== function _EEPROMread ends ============
  4113                           
  4114                           	signat	_EEPROMread,4217
  4115                           	global	_EEPROMwrite
  4116                           psect	text745,local,class=CODE,delta=2
  4117                           global __ptext745
  4118  071A                     __ptext745:
  4119                           
  4120 ;; *************** function _EEPROMwrite *****************
  4121 ;; Defined at:
  4122 ;;		line 8 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\eeprom.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  addr            1    wreg     unsigned char 
  4125 ;;  data            1    3[COMMON] unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  addr            1    4[COMMON] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;		None               void
  4130 ;; Registers used:
  4131 ;;		wreg
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4141 ;;Total ram usage:        2 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    1
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_I2CEEworker
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           psect	text745
  4151                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\eeprom.c"
  4152                           	line	8
  4153                           	global	__size_of_EEPROMwrite
  4154  0017                     	__size_of_EEPROMwrite	equ	__end_of_EEPROMwrite-_EEPROMwrite
  4155                           	
  4156  071A                     _EEPROMwrite:	
  4157                           	opt	stack 13
  4158                           ; Regs used in _EEPROMwrite: [wreg]
  4159                           ;EEPROMwrite@addr stored from wreg
  4160  071A  00F4               	movwf	(EEPROMwrite@addr)
  4161                           	line	9
  4162                           	
  4163  071B                     l14450:	
  4164                           ;eeprom.c: 9: EEADRL=addr;
  4165  071B  0874               	movf	(EEPROMwrite@addr),w
  4166  071C  0023               	movlb 3	; select bank3
  4167  071D  0091               	movwf	(401)^0180h	;volatile
  4168                           	line	10
  4169                           ;eeprom.c: 10: EEDATL=data;
  4170  071E  0873               	movf	(EEPROMwrite@data),w
  4171  071F  0093               	movwf	(403)^0180h	;volatile
  4172                           	line	11
  4173                           	
  4174  0720                     l14452:	
  4175                           ;eeprom.c: 11: EECON1bits.CFGS=0;
  4176  0720  1315               	bcf	(405)^0180h,6	;volatile
  4177                           	line	12
  4178                           	
  4179  0721                     l14454:	
  4180                           ;eeprom.c: 12: EECON1bits.EEPGD=0;
  4181  0721  1395               	bcf	(405)^0180h,7	;volatile
  4182                           	line	13
  4183                           	
  4184  0722                     l14456:	
  4185                           ;eeprom.c: 13: EECON1bits.WREN=1;
  4186  0722  1515               	bsf	(405)^0180h,2	;volatile
  4187                           	line	15
  4188                           	
  4189  0723                     l14458:	
  4190                           ;eeprom.c: 15: GIE=0;
  4191  0723  138B               	bcf	(95/8),(95)&7
  4192                           	line	16
  4193                           ;eeprom.c: 16: EECON2=0x55;
  4194  0724  3055               	movlw	(055h)
  4195  0725  0096               	movwf	(406)^0180h	;volatile
  4196                           	line	17
  4197                           ;eeprom.c: 17: EECON2=0xAA;
  4198  0726  30AA               	movlw	(0AAh)
  4199  0727  0096               	movwf	(406)^0180h	;volatile
  4200                           	line	18
  4201                           	
  4202  0728                     l14460:	
  4203                           ;eeprom.c: 18: EECON1bits.WR=1;
  4204  0728  1495               	bsf	(405)^0180h,1	;volatile
  4205                           	line	19
  4206                           	
  4207  0729                     l14462:	
  4208                           ;eeprom.c: 19: GIE=1;
  4209  0729  178B               	bsf	(95/8),(95)&7
  4210                           	line	20
  4211                           ;eeprom.c: 20: while(EECON1bits.WR);
  4212  072A  2F2B               	goto	l7973
  4213                           	
  4214  072B                     l7974:	
  4215                           	
  4216  072B                     l7973:	
  4217  072B  1895               	btfsc	(405)^0180h,1	;volatile
  4218  072C  2F2E               	goto	u2771
  4219  072D  2F2F               	goto	u2770
  4220  072E                     u2771:
  4221  072E  2F2B               	goto	l7973
  4222  072F                     u2770:
  4223  072F  2F30               	goto	l7976
  4224                           	
  4225  0730                     l7975:	
  4226                           	line	21
  4227                           	
  4228  0730                     l7976:	
  4229  0730  0008               	return
  4230                           	opt stack 0
  4231                           GLOBAL	__end_of_EEPROMwrite
  4232  0731                     	__end_of_EEPROMwrite:
  4233 ;; =============== function _EEPROMwrite ends ============
  4234                           
  4235                           	signat	_EEPROMwrite,8312
  4236                           	global	_initUART
  4237                           psect	text746,local,class=CODE,delta=2
  4238                           global __ptext746
  4239  06B0                     __ptext746:
  4240                           
  4241 ;; *************** function _initUART *****************
  4242 ;; Defined at:
  4243 ;;		line 13 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  i               1    4[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;		None               void
  4250 ;; Registers used:
  4251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_init
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           psect	text746
  4271                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\uart.c"
  4272                           	line	13
  4273                           	global	__size_of_initUART
  4274  0032                     	__size_of_initUART	equ	__end_of_initUART-_initUART
  4275                           	
  4276  06B0                     _initUART:	
  4277                           	opt	stack 13
  4278                           ; Regs used in _initUART: [wreg+fsr1l-status,0]
  4279                           	line	15
  4280                           	
  4281  06B0                     l14124:	
  4282                           ;uart.c: 15: APFCON0|=0x04;
  4283  06B0  0022               	movlb 2	; select bank2
  4284  06B1  151D               	bsf	(285)^0100h+(2/8),(2)&7	;volatile
  4285                           	line	16
  4286                           ;uart.c: 16: TRISB5=1;
  4287  06B2  0021               	movlb 1	; select bank1
  4288  06B3  168D               	bsf	(1133/8)^080h,(1133)&7
  4289                           	line	17
  4290                           ;uart.c: 17: TRISC4=0;
  4291  06B4  120E               	bcf	(1140/8)^080h,(1140)&7
  4292                           	line	21
  4293                           ;uart.c: 21: BRGH=1;
  4294  06B5  0023               	movlb 3	; select bank3
  4295  06B6  151E               	bsf	(3314/8)^0180h,(3314)&7
  4296                           	line	22
  4297                           	
  4298  06B7                     l14126:	
  4299                           ;uart.c: 22: SPBRGH=0x00;
  4300  06B7  019C               	clrf	(412)^0180h	;volatile
  4301                           	line	23
  4302                           	
  4303  06B8                     l14128:	
  4304                           ;uart.c: 23: SPBRGL=25;
  4305  06B8  3019               	movlw	(019h)
  4306  06B9  009B               	movwf	(411)^0180h	;volatile
  4307                           	line	26
  4308                           	
  4309  06BA                     l14130:	
  4310                           ;uart.c: 26: SYNC=0;
  4311  06BA  121E               	bcf	(3316/8)^0180h,(3316)&7
  4312                           	line	27
  4313                           	
  4314  06BB                     l14132:	
  4315                           ;uart.c: 27: SPEN=1;
  4316  06BB  179D               	bsf	(3311/8)^0180h,(3311)&7
  4317                           	line	28
  4318                           	
  4319  06BC                     l14134:	
  4320                           ;uart.c: 28: TXEN=1;
  4321  06BC  169E               	bsf	(3317/8)^0180h,(3317)&7
  4322                           	line	29
  4323                           	
  4324  06BD                     l14136:	
  4325                           ;uart.c: 29: CREN=1;
  4326  06BD  161D               	bsf	(3308/8)^0180h,(3308)&7
  4327                           	line	32
  4328                           	
  4329  06BE                     l14138:	
  4330                           ;uart.c: 32: RCIE=1;
  4331  06BE  0021               	movlb 1	; select bank1
  4332  06BF  1691               	bsf	(1165/8)^080h,(1165)&7
  4333                           	line	33
  4334                           	
  4335  06C0                     l14140:	
  4336                           ;uart.c: 33: TXIE=0;
  4337  06C0  1211               	bcf	(1164/8)^080h,(1164)&7
  4338                           	line	36
  4339                           	
  4340  06C1                     l14142:	
  4341                           ;uart.c: 36: rhead=0;
  4342  06C1  01F9               	clrf	(_rhead)	;volatile
  4343                           	line	37
  4344                           	
  4345  06C2                     l14144:	
  4346                           ;uart.c: 37: rtail=0;
  4347  06C2  01FA               	clrf	(_rtail)	;volatile
  4348                           	line	38
  4349                           	
  4350  06C3                     l14146:	
  4351                           ;uart.c: 38: for(i=0; i<(8-1); i++)
  4352  06C3  01F4               	clrf	(initUART@i)
  4353                           	
  4354  06C4                     l14148:	
  4355  06C4  3007               	movlw	(07h)
  4356  06C5  0274               	subwf	(initUART@i),w
  4357  06C6  1C03               	skipc
  4358  06C7  2EC9               	goto	u2461
  4359  06C8  2ECA               	goto	u2460
  4360  06C9                     u2461:
  4361  06C9  2ECC               	goto	l14152
  4362  06CA                     u2460:
  4363  06CA  2EDF               	goto	l4825
  4364                           	
  4365  06CB                     l14150:	
  4366  06CB  2EDF               	goto	l4825
  4367                           	line	39
  4368                           	
  4369  06CC                     l4824:	
  4370                           	line	40
  4371                           	
  4372  06CC                     l14152:	
  4373                           ;uart.c: 39: {
  4374                           ;uart.c: 40: ringbuff[i]=0x00;
  4375  06CC  0874               	movf	(initUART@i),w
  4376  06CD  0709               	addwf	wreg,w
  4377  06CE  3E20               	addlw	_ringbuff&0ffh
  4378  06CF  0086               	movwf	fsr1l
  4379  06D0  0187               	clrf fsr1h	
  4380                           	
  4381  06D1  3000               	movlw	low(0)
  4382  06D2  3FC0               	movwi	[0]fsr1
  4383  06D3  3000               	movlw	high(0)
  4384  06D4  3FC1               	movwi	[1]fsr1
  4385                           	line	38
  4386                           	
  4387  06D5                     l14154:	
  4388  06D5  3001               	movlw	(01h)
  4389  06D6  00F3               	movwf	(??_initUART+0)+0
  4390  06D7  0873               	movf	(??_initUART+0)+0,w
  4391  06D8  07F4               	addwf	(initUART@i),f
  4392                           	
  4393  06D9                     l14156:	
  4394  06D9  3007               	movlw	(07h)
  4395  06DA  0274               	subwf	(initUART@i),w
  4396  06DB  1C03               	skipc
  4397  06DC  2EDE               	goto	u2471
  4398  06DD  2EDF               	goto	u2470
  4399  06DE                     u2471:
  4400  06DE  2ECC               	goto	l14152
  4401  06DF                     u2470:
  4402                           	
  4403  06DF                     l4825:	
  4404                           	line	43
  4405                           ;uart.c: 41: }
  4406                           ;uart.c: 43: RC5=1;;
  4407  06DF  0020               	movlb 0	; select bank0
  4408  06E0  168E               	bsf	(117/8),(117)&7
  4409                           	line	44
  4410                           	
  4411  06E1                     l4826:	
  4412  06E1  0008               	return
  4413                           	opt stack 0
  4414                           GLOBAL	__end_of_initUART
  4415  06E2                     	__end_of_initUART:
  4416 ;; =============== function _initUART ends ============
  4417                           
  4418                           	signat	_initUART,88
  4419                           	global	_initI2C
  4420                           psect	text747,local,class=CODE,delta=2
  4421                           global __ptext747
  4422  0750                     __ptext747:
  4423                           
  4424 ;; *************** function _initI2C *****************
  4425 ;; Defined at:
  4426 ;;		line 15 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_init
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           psect	text747
  4454                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\i2c.c"
  4455                           	line	15
  4456                           	global	__size_of_initI2C
  4457  000D                     	__size_of_initI2C	equ	__end_of_initI2C-_initI2C
  4458                           	
  4459  0750                     _initI2C:	
  4460                           	opt	stack 13
  4461                           ; Regs used in _initI2C: [wreg+status,2+status,0]
  4462                           	line	18
  4463                           	
  4464  0750                     l14114:	
  4465                           ;i2c.c: 18: SSP2BUF=0x00;
  4466  0750  0024               	movlb 4	; select bank4
  4467  0751  0199               	clrf	(537)^0200h	;volatile
  4468                           	line	19
  4469                           	
  4470  0752                     l14116:	
  4471                           ;i2c.c: 19: SSP2STAT=0x80;
  4472  0752  3080               	movlw	(080h)
  4473  0753  009C               	movwf	(540)^0200h	;volatile
  4474                           	line	20
  4475                           	
  4476  0754                     l14118:	
  4477                           ;i2c.c: 20: SSP2MSK=0xFE;
  4478  0754  30FE               	movlw	(0FEh)
  4479  0755  009B               	movwf	(539)^0200h	;volatile
  4480                           	line	21
  4481                           	
  4482  0756                     l14120:	
  4483                           ;i2c.c: 21: SSP2CON1=0x36;
  4484  0756  3036               	movlw	(036h)
  4485  0757  009D               	movwf	(541)^0200h	;volatile
  4486                           	line	22
  4487                           	
  4488  0758                     l14122:	
  4489                           ;i2c.c: 22: SSP2CON3|=0b11000000;
  4490  0758  30C0               	movlw	(0C0h)
  4491  0759  00F3               	movwf	(??_initI2C+0)+0
  4492  075A  0873               	movf	(??_initI2C+0)+0,w
  4493  075B  049F               	iorwf	(543)^0200h,f	;volatile
  4494                           	line	23
  4495                           	
  4496  075C                     l3196:	
  4497  075C  0008               	return
  4498                           	opt stack 0
  4499                           GLOBAL	__end_of_initI2C
  4500  075D                     	__end_of_initI2C:
  4501 ;; =============== function _initI2C ends ============
  4502                           
  4503                           	signat	_initI2C,88
  4504                           	global	_initSPI
  4505                           psect	text748,local,class=CODE,delta=2
  4506                           global __ptext748
  4507  079E                     __ptext748:
  4508                           
  4509 ;; *************** function _initSPI *****************
  4510 ;; Defined at:
  4511 ;;		line 6 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\spi.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;		None               void
  4518 ;; Registers used:
  4519 ;;		None
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_init
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           psect	text748
  4539                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\spi.c"
  4540                           	line	6
  4541                           	global	__size_of_initSPI
  4542  0001                     	__size_of_initSPI	equ	__end_of_initSPI-_initSPI
  4543                           	
  4544  079E                     _initSPI:	
  4545                           	opt	stack 13
  4546                           ; Regs used in _initSPI: []
  4547                           	line	8
  4548                           	
  4549  079E                     l3254:	
  4550  079E  0008               	return
  4551                           	opt stack 0
  4552                           GLOBAL	__end_of_initSPI
  4553  079F                     	__end_of_initSPI:
  4554 ;; =============== function _initSPI ends ============
  4555                           
  4556                           	signat	_initSPI,88
  4557                           	global	_isEE
  4558                           psect	text749,local,class=CODE,delta=2
  4559                           global __ptext749
  4560  079A                     __ptext749:
  4561                           
  4562 ;; *************** function _isEE *****************
  4563 ;; Defined at:
  4564 ;;		line 16 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           psect	text749
  4592                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\easteregg.c"
  4593                           	line	16
  4594                           	global	__size_of_isEE
  4595  0003                     	__size_of_isEE	equ	__end_of_isEE-_isEE
  4596                           	
  4597  079A                     _isEE:	
  4598                           	opt	stack 14
  4599                           ; Regs used in _isEE: [wreg]
  4600                           	line	17
  4601                           	
  4602  079A                     l14110:	
  4603                           ;easteregg.c: 17: return 0;
  4604  079A  3000               	movlw	(0)
  4605  079B  2F9C               	goto	l6402
  4606                           	
  4607  079C                     l14112:	
  4608                           	line	18
  4609                           	
  4610  079C                     l6402:	
  4611  079C  0008               	return
  4612                           	opt stack 0
  4613                           GLOBAL	__end_of_isEE
  4614  079D                     	__end_of_isEE:
  4615 ;; =============== function _isEE ends ============
  4616                           
  4617                           	signat	_isEE,89
  4618                           	global	_isr
  4619                           psect	intentry,class=CODE,delta=2
  4620                           global __pintentry
  4621  0004                     __pintentry:
  4622                           
  4623 ;; *************** function _isr *****************
  4624 ;; Defined at:
  4625 ;;		line 164 in file "E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;		None               void
  4632 ;; Registers used:
  4633 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4641 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4643 ;;Total ram usage:        3 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		Interrupt level 1
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           psect	intentry
  4652                           	file	"E:\Work\dp\Breakout_Boards\Bus_Pirate_demo\Firmware\main.c"
  4653                           	line	164
  4654                           	global	__size_of_isr
  4655  0035                     	__size_of_isr	equ	__end_of_isr-_isr
  4656                           	
  4657  0004                     _isr:	
  4658                           	opt	stack 12
  4659                           ; Regs used in _isr: [wreg+fsr1l-status,0]
  4660                           psect	intentry
  4661  0004  3180               	pagesel	$
  4662  0005  0020               	movlb 0	; select bank0
  4663  0006  087F               	movf	btemp+1,w
  4664  0007  00F2               	movwf	(??_isr+2)
  4665                           	line	165
  4666                           ;main.c: 165: do { if(RCIF) { RC3=1;; if(!(RCSTA&0b00000110)) { rhead++; rhead&=(8-1); r
                                 ingbuff[rhead]=RCREG; } RCIF=0; RC3=0;; } if(TXIF) { TXIF=0; } } while(0);;
  4667                           	
  4668  0008                     i1l1618:	
  4669  0008  1E91               	btfss	(141/8),(141)&7
  4670  0009  280B               	goto	u248_21
  4671  000A  280C               	goto	u248_20
  4672  000B                     u248_21:
  4673  000B  282D               	goto	i1l14170
  4674  000C                     u248_20:
  4675                           	
  4676  000C                     i1l14158:	
  4677  000C  158E               	bsf	(115/8),(115)&7
  4678                           	
  4679  000D                     i1l14160:	
  4680  000D  0023               	movlb 3	; select bank3
  4681  000E  081D               	movf	(413)^0180h,w
  4682  000F  3906               	andlw	06h
  4683  0010  1D03               	btfss	status,2
  4684  0011  2813               	goto	u249_21
  4685  0012  2814               	goto	u249_20
  4686  0013                     u249_21:
  4687  0013  2829               	goto	i1l14166
  4688  0014                     u249_20:
  4689                           	
  4690  0014                     i1l14162:	
  4691  0014  3001               	movlw	(01h)
  4692  0015  00F0               	movwf	(??_isr+0)+0
  4693  0016  0870               	movf	(??_isr+0)+0,w
  4694  0017  07F9               	addwf	(_rhead),f	;volatile
  4695  0018  3007               	movlw	(07h)
  4696  0019  00F0               	movwf	(??_isr+0)+0
  4697  001A  0870               	movf	(??_isr+0)+0,w
  4698  001B  05F9               	andwf	(_rhead),f	;volatile
  4699                           	
  4700  001C                     i1l14164:	
  4701  001C  0819               	movf	(409)^0180h,w	;volatile
  4702  001D  00F0               	movwf	(??_isr+0)+0
  4703  001E  01F1               	clrf	(??_isr+0)+0+1
  4704  001F  0879               	movf	(_rhead),w	;volatile
  4705  0020  0709               	addwf	wreg,w
  4706  0021  3E20               	addlw	_ringbuff&0ffh
  4707  0022  0086               	movwf	fsr1l
  4708  0023  0187               	clrf fsr1h	
  4709                           	
  4710  0024  0870               	movf	0+(??_isr+0)+0,w
  4711  0025  3FC0               	movwi	[0]fsr1
  4712  0026  0871               	movf	1+(??_isr+0)+0,w
  4713  0027  3FC1               	movwi	[1]fsr1
  4714  0028  2829               	goto	i1l14166
  4715                           	
  4716  0029                     i1l1620:	
  4717                           	
  4718  0029                     i1l14166:	
  4719  0029  0020               	movlb 0	; select bank0
  4720  002A  1291               	bcf	(141/8),(141)&7
  4721                           	
  4722  002B                     i1l14168:	
  4723  002B  118E               	bcf	(115/8),(115)&7
  4724  002C  282D               	goto	i1l14170
  4725                           	
  4726  002D                     i1l1619:	
  4727                           	
  4728  002D                     i1l14170:	
  4729  002D  1E11               	btfss	(140/8),(140)&7
  4730  002E  2830               	goto	u250_21
  4731  002F  2831               	goto	u250_20
  4732  0030                     u250_21:
  4733  0030  2836               	goto	i1l1625
  4734  0031                     u250_20:
  4735                           	
  4736  0031                     i1l14172:	
  4737  0031  1211               	bcf	(140/8),(140)&7
  4738  0032  2836               	goto	i1l1625
  4739                           	
  4740  0033                     i1l1621:	
  4741  0033  2836               	goto	i1l1625
  4742                           	
  4743  0034                     i1l1622:	
  4744  0034  2836               	goto	i1l1625
  4745                           	line	166
  4746                           ;main.c: 166: do { ;} while(0);;
  4747                           	
  4748  0035                     i1l1623:	
  4749  0035  2836               	goto	i1l1625
  4750                           	
  4751  0036                     i1l1624:	
  4752                           	line	169
  4753                           	
  4754  0036                     i1l1625:	
  4755  0036  0872               	movf	(??_isr+2),w
  4756  0037  00FF               	movwf	btemp+1
  4757  0038  0009               	retfie
  4758                           	opt stack 0
  4759                           GLOBAL	__end_of_isr
  4760  0039                     	__end_of_isr:
  4761 ;; =============== function _isr ends ============
  4762                           
  4763                           	signat	_isr,88
  4764                           	global	fptotal
  4765  0015                     fptotal equ 21
  4766                           	file ""
  4767                           	line	#
  4768                           psect	functab,class=CODE,delta=2,reloc=256
  4769                           global __pfunctab
  4770  0100                     __pfunctab:
  4771                           	global	fptable
  4772  0100                     fptable:
  4773  0100  3181               	movlp high(fptable)
  4774  0101  0782               	addwf pc
  4775                           	global	fpbase
  4776  0102                     fpbase:
  4777  0102  2902               	goto fpbase	; Call via a null pointer and you will get stuck here.
  4778                           	file ""
  4779                           	line	#
  4780  0103                     fp__UARTworker:
  4781  0103  3187  2F5D         	ljmp	_UARTworker
  4782                           	file ""
  4783                           	line	#
  4784  0105                     fp__nullfunc1:
  4785  0105  3187  2F9D         	ljmp	_nullfunc1
  4786                           	file ""
  4787                           	line	#
  4788  0107                     fp__I2CEEworker:
  4789  0107  3183  2B8B         	ljmp	_I2CEEworker
  4790                           	file ""
  4791                           	line	#
  4792  0109                     fp__I2CDACworker:
  4793  0109  3184  2C15         	ljmp	_I2CDACworker
  4794                           	file ""
  4795                           	line	#
  4796  010B                     fp__I2CADCworker:
  4797  010B  3184  2CFC         	ljmp	_I2CADCworker
  4798                           	global	btemp
  4799  007E                     	btemp set 07Eh
  4800                           
  4801                           	DABS	1,126,2	;btemp
  4802                           	global	wtemp0
  4803  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Nov 17 15:52:55 2011

                    pc 0002                     _RD 0CA8                     _WR 0CA9                    _GIE 005F  
                  _RC0 0070                    _RC2 0072                    _RB4 006C                    _RC3 0073  
                  _RB6 006E                    _RC5 0075                    _isr 0004                    wreg 0009  
      I2CDACworker@dac 0048        I2CEEworker@addr 0044        I2CEEworker@temp 0041                   l3200 0412  
                 l1600 04C3                   l3201 0403                   l1601 04D5                   l1610 05CD  
                 l3202 03F4                   l3210 040C                   l1602 04E7                   l1611 05B4  
                 l3211 040C                   l3203 03A6                   l1603 04F9                   l1612 05B8  
                 l3212 0413                   l3204 0402                   l3220 0546                   l1604 04FA  
                 l1613 05BC                   l3213 0414                   l3205 03AD                   l3221 0519  
                 l1605 04FA                   l1614 05BD                   l3214 0414                   l3206 03BC  
                 l3230 0566                   l3222 0555                   l1615 05CF                   l3207 03CC  
                 l3223 0520                   l1608 05BF                   l3208 03CD                   l3240 044A  
                 l3224 0527                   l1609 05B0                   l3209 03E0                   l3241 0459  
                 l3233 041E                   l3225 0536                   l3217 0505                   l3250 0771  
                 l3234 0487                   l3242 0481                   l3218 0564                   l3226 055E  
                 l3251 0772                   l3243 0481                   l3235 0479                   l3227 055E  
                 l3219 0556                   l3244 0488                   l3236 0469                   l3228 0565  
                 l3245 0489                   l3237 0432                   l3229 0566                   l3254 079E  
                 l3246 0489                   l3238 0478                   l1591 079D                   l3239 0439  
                 l3249 0769                   l1594 0493                   l1595 049F                   l3196 075C  
                 l1596 04E9                   l1597 04A0                   l1598 04F8                   l3199 0392  
                 l1599 04B1                   l6402 079C                   l6411 06A4                   l6412 0673  
                 l6413 0690                   l6405 0670                   l6414 06A3                   l6406 0670  
                 l6415 06AF                   l6407 0671                   l4824 06CC                   l4832 06E4  
                 l4840 074B                   l6416 06AF                   l6408 0671                   l4825 06DF  
                 l4833 06E3                   l4841 074F                   l4826 06E1                   l4834 06EA  
                 l4835 06FF                   l4829 0767                   l4838 0745                   l4839 0745  
                 ?_isr 0070                   l9540 060F                   l9541 0628                   l9544 0783  
                 l9536 05F5                   l9537 0607                   l9538 060A                   l9539 060A  
                 l7973 072B                   l7974 072B                   l7975 0730                   l7976 0730  
                 l7979 077C                   STR_1 033B                   STR_2 031A                   STR_3 024C  
                 STR_4 02D2                   STR_5 0285                   STR_6 0373                   STR_7 035B  
                 STR_8 02F7                   STR_9 0201                   _BRGH 0CF2                   _CREN 0CEC  
                 _LATA 010C                   _LATB 010D                   _LATC 010E                   u2460 06CA  
                 u2700 06A2                   u2461 06C9                   u2701 06A1                   u2470 06DF  
                 u2710 06AE                   u2471 06DE                   u2711 06AD                   u2800 05F3  
                 u2801 05F2                   u2705 069E                   u2810 0607                   u2570 06EA  
                 u2811 0606                   u2571 06E9                   u2820 060E                   u2580 074A  
                 u2900 0423                   u2821 060D                   u2805 05EF                   u2581 0749  
                 u2901 0422                   u2830 0397                   u2910 042F                   u2815 0603  
                 u2831 0396                   u2911 042E                   u2840 03A3                   u2920 047D  
                 u2841 03A2                   u2921 047C                   u2770 072F                   u2850 03B2  
                 u2690 068E                   u2930 049B                   u2771 072E                   u2851 03B1  
                 u2691 068D                   u2931 049A                   u2780 0771                   u2860 0407  
                 u2781 0770                   u2861 0406                   u2870 050A                   u2871 0509  
                 u2695 068A                   u2880 0516                   u2881 0515                   u2945 04A4  
                 u2890 055A                   u2795 05DC                   u2891 0559                   u2955 04B5  
                 _RCIE 048D                   _RCIF 008D                   u2965 04C7                   u2975 04D9  
                 _SPEN 0CEF                   _TRMT 0CF1                   _TXIE 048C                   _WREN 0CAA  
                 _TXEN 0CF5                   _TXIF 008C                   _SYNC 0CF4                   _WPUA 020C  
                 _WPUB 020D                   _WPUC 020E           fp__nullfunc1 0105                   _doEE 0629  
                 _isEE 079A                   _main 048A                   _init 0567                   _mode 004A  
                 fsr0h 0005                   fsr1h 0007                   fsr0l 0004                   indf0 0000  
                 indf1 0001                   fsr1l 0006                   btemp 007E       __end_of_I2CWrite 0773  
                 start 0039    __size_of_EEPROMread 000A       I2CDACworker@temp 0046                  ??_isr 0070  
                l11101 0799                  l11107 0795                  ?_doEE 0070                  l14110 079A  
                l14112 079C                  l14120 0756                  l14122 0758                  l14114 0750  
                l14130 06BA                  l14202 077D                  l14116 0752                  l14140 06C0  
                l14132 06BB                  l14124 06B0                  l14204 077F                  l14118 0754  
                l14150 06CB                  l14142 06C1                  l14134 06BC                  l14126 06B7  
                l14230 0791                  l14152 06CC                  l14144 06C2                  l14136 06BD  
                l14128 06B8                  l14240 06FC                  l14232 06E2                  l14154 06D5  
                l14146 06C3                  l14138 06BE                  l14242 06FD                  l14234 06E4  
                l14250 074D                  l14410 0672                  l14156 06D9                  l14148 06C4  
                l14228 0796                  l14244 06FF                  l14236 06EB                  l14260 0570  
                l14252 0567                  l14500 038B                  l14420 068F                  l14412 0673  
                l14238 06F3                  l14246 0742                  l14270 058D                  l14262 057B  
                l14254 056A                  l14406 075D                  l14510 03A3                  l14502 038E  
                l14422 0691                  l14414 067B                  l14248 074B                  l14280 0597  
                l14272 0592                  l14264 057E                  l14256 056C                  l14408 0763  
                l14520 03BC                  l14512 03A6                  l14504 0392                  l14600 045F  
                l14424 0695                  l14416 067F                  l14450 071B                  l14290 05B4  
                l14282 059D                  l14274 0594                  l14266 0587                  l14258 056E  
                l14530 03E0                  l14522 03C6                  l14514 03AD                  l14506 0397  
                l14602 0468                  l14418 0681                  l14426 06A4                  l14610 048F  
                l14460 0728                  l14452 0720                  l14292 05B8                  l14284 05A3  
                l14276 0595                  l14268 058A                  l14540 0407                  l14532 03E6  
                l14524 03CD                  l14516 03B2                  l14508 039E                  l14604 0469  
                l14428 0629                  l14620 04C3                  l14612 0493                  l14462 0729  
                l14454 0721                  l14470 0779                  l14294 05BE                  l14286 05A9  
                l14278 0596                  l14534 03ED                  l14526 03D3                  l14518 03B8  
                l14606 047D                  l14550 050A                  l14542 04FC                  l14622 04D5  
                l14614 049B                  l14456 0722                  l14472 077C                  l14464 0774  
                l14480 05D4                  l14288 05B0                  l14296 05BF                  l14536 03F3  
                l14528 03DA                  l14560 0527                  l14552 0511                  l14544 04FE  
                l14624 04E8                  l14616 04A0                  l14608 048A                  l14458 0723  
                l14466 0777                  l14474 076B                  l14490 05F6                  l14482 05D9  
                l14538 03F4                  l14562 052D                  l14570 0546                  l14554 0516  
                l14546 0501                  l14618 04B1                  l14626 04E9                  l14468 0778  
                l14476 076D                  l14492 05FA                  l14484 05E4                  l14580 041E  
                l14572 055A                  l14564 0536                  l14556 0519                  l14548 0505  
                l14494 060F                  l14486 05E6                  l14478 05D1                  l14590 0439  
                l14582 0423                  l14574 0415                  l14566 053C                  l14558 0520  
                l14496 0615                  l14488 05F4                  l14592 0445                  l14584 042A  
                l14576 0417                  l14568 0545                  l14498 0628                  l14594 044A  
                l14586 042F                  l14578 041A                  l14596 0450                  l14588 0432  
                l14598 0459       I2CEEworker@token 0042                  ?_isEE 0070                  ?_main 0070  
                ?_init 0070                  _EEADR 0191                  STR_10 02AC                  _CARRY 0018  
                _RCREG 0199                  _RCSTA 019D                  _PORTA 000C                  _PORTB 000D  
                _PORTC 000E                  _TRISA 008C                  _TRISB 008D                  _TRISC 008E  
                _TXREG 019A        __end_of_initI2C 075D        __end_of_initSPI 079F       __end_of_UARTread 0700  
                _rhead 0079         EEPROMread@addr 0073                  _rtail 007A                  fpbase 0102  
   __size_of_UARTwrite 000F            ?_UARTworker 0070                  status 0003                  wtemp0 007E  
         __end_of_doEE 0672           __end_of_isEE 079D           __end_of_main 04FC           __end_of_init 05D0  
 __size_of_EEPROMwrite 0017      I2CDACworker@token 0047                 ??_doEE 0078                 ??_isEE 0073  
               ??_main 0049                 ??_init 0075                 _ADCON0 009D                 _ADCON1 009E  
               _ADRESH 009C                 _ADRESL 009B                 _EEADRL 0191                 _EEDATA 0193  
               _EEDATL 0193                 _EECON1 0195                 _EECON2 0196                 _ANSELA 018C  
               _ANSELB 018D                 _ANSELC 018E              I2CWrite@c 0073                 i1l1620 0029  
               i1l1621 0033                 i1l1622 0034                 i1l1623 0035                 i1l1624 0036  
               i1l1625 0036                 i1l1618 0008                 i1l1619 002D                 u250_20 0031  
               u250_21 0030                 _FVRCON 0117                 u248_20 000C                 u248_21 000B  
               u249_20 0014                 u249_21 0013                 _OSCCON 0099                 _SPBRGH 019C  
               _SPBRGL 019B                 _SSP2IF 00A0                 _TRISB5 046D                 _TRISC4 0474  
     __end_of_enableTS 0784                 _nWPUEN 04AF                 _getADC 05D0       __end_of_initUART 06E2  
               _setDAC 0790      __end_of_UARTwrite 0750                 _protos 0031                 clrloop 0785  
            ??_initI2C 0073    __size_of_UARTworker 000B                 fptable 0100              ??_initSPI 0073  
               fptotal 0015       __end_of_teletype 06B0           ??_EEPROMread 0073              ?_I2CWrite 0070  
 I2CEEworker@addressed 0043         __pcstackCOMMON 0070     __end_of_EEPROMread 077D           __pidataBANK0 0731  
            ?_UARTread 0070     __size_of_enableDAC 0004          ??_I2CEEworker 0075             ??_I2CWrite 0073  
           __pbssBANK0 0020             __pmaintext 048A                ?_getADC 0073             __pintentry 0004  
           ??_UARTread 0073                _DACCON0 0118                _DACCON1 0119                ?_setDAC 0070  
              _APFCON0 011D                _APFCON1 011E                i1l14160 000D                i1l14162 0014  
              i1l14170 002D                i1l14172 0031                i1l14164 001C                i1l14166 0029  
              i1l14158 000C                i1l14168 002B        EEPROMwrite@addr 0074        EEPROMwrite@data 0073  
   __size_of_nullfunc1 0001              ?_enableTS 0070                _SSP2ADD 021A                _SSP2BUF 0219  
              _SSP2MSK 021B             __stringtab 0000        fp__I2CADCworker 010B              ?_initUART 0070  
  __end_of_I2CEEworker 0415           ??_UARTworker 0075        fp__I2CDACworker 0109      __end_of_enableDAC 079A  
            ?_teletype 0074        __size_of_getADC 0059        __size_of_setDAC 0006                getADC@i 0076  
              _initI2C 0750                _initSPI 079E           __size_of_isr 0035     __end_of_UARTworker 0768  
        _mode_protocol 0078             ??_enableTS 0073   end_of_initialization 0717             ??_initUART 0073  
              init_ram 078A                initloop 078B          ?_I2CADCworker 0070          ??_EEPROMwrite 0074  
    __end_of_nullfunc1 079E          ?_I2CDACworker 0070             ??_teletype 0076           __pstringtext 0200  
            _UARTwrite 0741            _I2CEEworker 038B      __size_of_I2CWrite 000B            UARTworker@c 0076  
       ??_I2CADCworker 0045         ??_I2CDACworker 0045         __end_of_getADC 0629    __end_of_EEPROMwrite 0731  
       __end_of_setDAC 0796      __size_of_UARTread 001E             ?_UARTwrite 0070    start_initialization 0700  
          __end_of_isr 0039          fp__UARTworker 0103               ??_getADC 0041            __pdataBANK0 0031  
             ??_setDAC 0073            __pbssCOMMON 0078          __pcstackBANK0 0041      __size_of_enableTS 0007  
    __size_of_initUART 0032              __pnvBANK0 004A            _EEPROMwrite 071A              __pfunctab 0100  
            _enableDAC 0796              __ptext730 0672              __ptext731 04FC              __ptext740 0796  
            __ptext732 0415              __ptext741 05D0              __ptext733 038B              __ptext742 077D  
            __ptext734 079D              __ptext743 0768              __ptext735 075D              __ptext744 0773  
            __ptext736 0567              __ptext745 071A              __ptext737 0741              __ptext729 0629  
            __ptext746 06B0              __ptext738 06E2              __ptext747 0750              __ptext739 0790  
            __ptext748 079E              __ptext749 079A      __size_of_teletype 003E              __pstrings 0000  
            getADC@adc 0075               ?_initI2C 0070               ?_initSPI 0070            ??_UARTwrite 0073  
 __end_of_I2CADCworker 0567               _I2CWrite 0768   __end_of_I2CDACworker 048A         fp__I2CEEworker 0107  
    I2CADCworker@token 0047             ?_enableDAC 0070               _SSP2CON1 021D               _SSP2CON3 021F  
             _SSP2STAT 021C              _nullfunc1 079D               _UARTread 06E2             _ADCON0bits 009D  
           UARTwrite@c 0073           ?_I2CEEworker 0070              initUART@i 0074             _EECON1bits 0195  
            setDAC@dac 0073             ?_nullfunc1 0070       __size_of_initI2C 000D       __size_of_initSPI 0001  
           _EEPROMread 0773               _enableTS 077D           _SSP2CON1bits 021D            _mode_device 0030  
             _initUART 06B0          __size_of_doEE 0049          __size_of_isEE 0003          __size_of_main 0072  
        __size_of_init 0069               clear_ram 0784              teletype@i 0076              teletype@s 0074  
     I2CADCworker@temp 0046               _ringbuff 0020               _teletype 0672            ??_enableDAC 0073  
__size_of_I2CADCworker 006B           _SSP2STATbits 021C  __size_of_I2CDACworker 0075               intlevel1 0100  
         _I2CADCworker 04FC           ?_EEPROMwrite 0073        I2CADCworker@adc 0048           _I2CDACworker 0415  
          ??_nullfunc1 0073           UARTread@temp 0074            ?_EEPROMread 0070   __size_of_I2CEEworker 008A  
           _UARTworker 075D  

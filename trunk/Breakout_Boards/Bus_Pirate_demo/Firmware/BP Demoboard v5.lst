

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Aug 16 16:15:03 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1829
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 21 "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 21 "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
    51  8007  EFA4               	dw 0xFFFC&0xFFE7&0xFFFF&0xFFBF&0xFFFF&0xFFFF&0xFFFF&0xFFFF&0xEFFF&0xFFFF ;#
    52                           # 22 "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 22 "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
    55  8008  DEFF               	dw 0xFEFF&0xFFFF&0xDFFF ;#
    56                           DABS 1,1568,48	;_eeBuf
    57                           DABS 1,1440,80	;_eeBuf
    58                           DABS 1,1312,80	;_eeBuf
    59                           DABS 1,1216,48	;_eeBuf
    60                           	FNCALL	_main,_init
    61                           	FNCALL	_main,_EEPROMread
    62                           	FNCALL	_main,_isEE
    63                           	FNCALL	_main,_doEE
    64                           	FNCALL	_main,_I2CADCworker
    65                           	FNCALL	_main,_UARTworker
    66                           	FNCALL	_main,_SPIADCworker
    67                           	FNCALL	_main,_nullfunc1
    68                           	FNCALL	_main,_I2CEEworker
    69                           	FNCALL	_main,_SPIEEworker
    70                           	FNCALL	_main,_I2CDACworker
    71                           	FNCALL	_main,_SPIDACworker
    72                           	FNCALL	_main,_I2CPWMworker
    73                           	FNCALL	_main,_SPIPWMworker
    74                           	FNCALL	_UARTworker,_initUART
    75                           	FNCALL	_UARTworker,_UARTwriteString
    76                           	FNCALL	_UARTworker,_UARTwrite
    77                           	FNCALL	_UARTworker,_UARTread
    78                           	FNCALL	_UARTworker,_enablePWM
    79                           	FNCALL	_UARTworker,_enableDAC
    80                           	FNCALL	_UARTworker,_getADC
    81                           	FNCALL	_UARTworker,_UARTwriteDecimal
    82                           	FNCALL	_UARTworker,_UARTcharFromString
    83                           	FNCALL	_UARTworker,_setPeriod
    84                           	FNCALL	_UARTworker,_setDuty
    85                           	FNCALL	_UARTworker,_disablePWM
    86                           	FNCALL	_UARTworker,_setDAC
    87                           	FNCALL	_UARTworker,_disableDAC
    88                           	FNCALL	_UARTworker,_EEPROMwrite
    89                           	FNCALL	_UARTworker,_EEPROMread
    90                           	FNCALL	_SPIPWMworker,_initSPI
    91                           	FNCALL	_SPIPWMworker,_enablePWM
    92                           	FNCALL	_SPIPWMworker,_setPeriod
    93                           	FNCALL	_SPIPWMworker,_setDuty
    94                           	FNCALL	_I2CPWMworker,_enablePWM
    95                           	FNCALL	_I2CPWMworker,_setPeriod
    96                           	FNCALL	_I2CPWMworker,_setDuty
    97                           	FNCALL	_doEE,_teletype
    98                           	FNCALL	_teletype,_UARTwrite
    99                           	FNCALL	_UARTcharFromString,_UARTread
   100                           	FNCALL	_UARTcharFromString,_UARTwrite
   101                           	FNCALL	_UARTcharFromString,___bmul
   102                           	FNCALL	_UARTwriteDecimal,___lbdiv
   103                           	FNCALL	_UARTwriteDecimal,_UARTwrite
   104                           	FNCALL	_UARTwriteDecimal,___bmul
   105                           	FNCALL	_UARTwriteString,_UARTwrite
   106                           	FNCALL	_SPIADCworker,_initSPI
   107                           	FNCALL	_SPIADCworker,_getADC
   108                           	FNCALL	_SPIDACworker,_initSPI
   109                           	FNCALL	_SPIDACworker,_enableDAC
   110                           	FNCALL	_SPIDACworker,_setDAC
   111                           	FNCALL	_SPIEEworker,_initSPI
   112                           	FNCALL	_SPIEEworker,_EEPROMwrite
   113                           	FNCALL	_setDuty,___wmul
   114                           	FNCALL	_setDuty,___lwdiv
   115                           	FNCALL	_setPeriod,___wmul
   116                           	FNCALL	_setPeriod,___lwdiv
   117                           	FNCALL	_enablePWM,___wmul
   118                           	FNCALL	_enablePWM,___lwdiv
   119                           	FNCALL	_I2CDACworker,_enableDAC
   120                           	FNCALL	_I2CDACworker,_setDAC
   121                           	FNCALL	_I2CDACworker,_I2CWrite
   122                           	FNCALL	_I2CADCworker,_enableTS
   123                           	FNCALL	_I2CADCworker,_I2CWrite
   124                           	FNCALL	_I2CADCworker,_startADC16
   125                           	FNCALL	_I2CEEworker,_EEPROMwrite
   126                           	FNCALL	_init,_initSPI
   127                           	FNCALL	_init,_initI2C
   128                           	FNCALL	_init,_initUART
   129                           	FNROOT	_main
   130                           	FNCALL	intlevel1,_isr
   131                           	global	intlevel1
   132                           	FNROOT	intlevel1
   133                           	global	_protos
   134                           	global	_msgMenu
   135                           psect	idataBANK0,class=CODE,space=0,delta=2
   136                           global __pidataBANK0
   137  00E5                     __pidataBANK0:
   138                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
   139                           	line	36
   140                           
   141                           ;initializer for _protos
   142  00E5  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   143  00E6  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   144  00E7  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   145  00E8  3403               	retlw	(fp__nullfunc1-fpbase)&0ffh
   146  00E9  3411               	retlw	(fp__SPIADCworker-fpbase)&0ffh
   147  00EA  340D               	retlw	(fp__SPIDACworker-fpbase)&0ffh
   148  00EB  3409               	retlw	(fp__SPIEEworker-fpbase)&0ffh
   149  00EC  3405               	retlw	(fp__SPIPWMworker-fpbase)&0ffh
   150  00ED  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   151  00EE  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   152  00EF  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   153  00F0  3401               	retlw	(fp__UARTworker-fpbase)&0ffh
   154  00F1  3413               	retlw	(fp__I2CADCworker-fpbase)&0ffh
   155  00F2  340F               	retlw	(fp__I2CDACworker-fpbase)&0ffh
   156  00F3  340B               	retlw	(fp__I2CEEworker-fpbase)&0ffh
   157  00F4  3407               	retlw	(fp__I2CPWMworker-fpbase)&0ffh
   158                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   159                           	line	49
   160                           
   161                           ;initializer for _msgMenu
   162  00F5  34F6               	retlw	low(_msgMenu0|8000h)
   163  00F6  3482               	retlw	high(_msgMenu0|8000h)
   164                           
   165  00F7  3401               	retlw	low(_msgMenu1|8000h)
   166  00F8  3482               	retlw	high(_msgMenu1|8000h)
   167                           
   168  00F9  3468               	retlw	low(_msgMenu2|8000h)
   169  00FA  3483               	retlw	high(_msgMenu2|8000h)
   170                           
   171  00FB  34C5               	retlw	low(_msgMenu3|8000h)
   172  00FC  3483               	retlw	high(_msgMenu3|8000h)
   173                           
   174  00FD  347C               	retlw	low(_msgMenu4|8000h)
   175  00FE  3482               	retlw	high(_msgMenu4|8000h)
   176                           
   177                           	global	_msgMenu1
   178                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   179                           global __pstringtext
   180  0200                     __pstringtext:
   181                           	global    __stringtab
   182  0200                     __stringtab:
   183  0200  3400               	retlw	0
   184                           psect	stringtext
   185                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   186                           	line	39
   187  0201                     _msgMenu1:
   188  0201  340A               	retlw	0Ah
   189  0202  340A               	retlw	0Ah
   190  0203  3441               	retlw	041h
   191  0204  3444               	retlw	044h
   192  0205  3443               	retlw	043h
   193  0206  3420               	retlw	020h
   194  0207  344D               	retlw	04Dh
   195  0208  3465               	retlw	065h
   196  0209  346E               	retlw	06Eh
   197  020A  3475               	retlw	075h
   198  020B  340A               	retlw	0Ah
   199  020C  342D               	retlw	02Dh
   200  020D  342D               	retlw	02Dh
   201  020E  342D               	retlw	02Dh
   202  020F  342D               	retlw	02Dh
   203  0210  342D               	retlw	02Dh
   204  0211  342D               	retlw	02Dh
   205  0212  342D               	retlw	02Dh
   206  0213  342D               	retlw	02Dh
   207  0214  342D               	retlw	02Dh
   208  0215  342D               	retlw	02Dh
   209  0216  342D               	retlw	02Dh
   210  0217  340A               	retlw	0Ah
   211  0218  340A               	retlw	0Ah
   212  0219  3472               	retlw	072h
   213  021A  3429               	retlw	029h
   214  021B  3452               	retlw	052h
   215  021C  3465               	retlw	065h
   216  021D  3461               	retlw	061h
   217  021E  3464               	retlw	064h
   218  021F  3420               	retlw	020h
   219  0220  3441               	retlw	041h
   220  0221  3444               	retlw	044h
   221  0222  3443               	retlw	043h
   222  0223  340A               	retlw	0Ah
   223  0224  3431               	retlw	031h
   224  0225  3429               	retlw	029h
   225  0226  3443               	retlw	043h
   226  0227  3468               	retlw	068h
   227  0228  3461               	retlw	061h
   228  0229  346E               	retlw	06Eh
   229  022A  346E               	retlw	06Eh
   230  022B  3465               	retlw	065h
   231  022C  346C               	retlw	06Ch
   232  022D  3420               	retlw	020h
   233  022E  346C               	retlw	06Ch
   234  022F  340A               	retlw	0Ah
   235  0230  3432               	retlw	032h
   236  0231  3429               	retlw	029h
   237  0232  3443               	retlw	043h
   238  0233  3468               	retlw	068h
   239  0234  3461               	retlw	061h
   240  0235  346E               	retlw	06Eh
   241  0236  346E               	retlw	06Eh
   242  0237  3465               	retlw	065h
   243  0238  346C               	retlw	06Ch
   244  0239  3420               	retlw	020h
   245  023A  3432               	retlw	032h
   246  023B  340A               	retlw	0Ah
   247  023C  3433               	retlw	033h
   248  023D  3429               	retlw	029h
   249  023E  3443               	retlw	043h
   250  023F  3468               	retlw	068h
   251  0240  3461               	retlw	061h
   252  0241  346E               	retlw	06Eh
   253  0242  346E               	retlw	06Eh
   254  0243  3465               	retlw	065h
   255  0244  346C               	retlw	06Ch
   256  0245  3420               	retlw	020h
   257  0246  3433               	retlw	033h
   258  0247  340A               	retlw	0Ah
   259  0248  3474               	retlw	074h
   260  0249  3429               	retlw	029h
   261  024A  3454               	retlw	054h
   262  024B  3465               	retlw	065h
   263  024C  346D               	retlw	06Dh
   264  024D  3470               	retlw	070h
   265  024E  3465               	retlw	065h
   266  024F  3472               	retlw	072h
   267  0250  3461               	retlw	061h
   268  0251  3474               	retlw	074h
   269  0252  3475               	retlw	075h
   270  0253  3472               	retlw	072h
   271  0254  3465               	retlw	065h
   272  0255  3420               	retlw	020h
   273  0256  3473               	retlw	073h
   274  0257  3465               	retlw	065h
   275  0258  346E               	retlw	06Eh
   276  0259  3473               	retlw	073h
   277  025A  346F               	retlw	06Fh
   278  025B  3472               	retlw	072h
   279  025C  340A               	retlw	0Ah
   280  025D  346D               	retlw	06Dh
   281  025E  3429               	retlw	029h
   282  025F  3442               	retlw	042h
   283  0260  3461               	retlw	061h
   284  0261  3463               	retlw	063h
   285  0262  346B               	retlw	06Bh
   286  0263  3420               	retlw	020h
   287  0264  3474               	retlw	074h
   288  0265  346F               	retlw	06Fh
   289  0266  3420               	retlw	020h
   290  0267  346D               	retlw	06Dh
   291  0268  3461               	retlw	061h
   292  0269  3469               	retlw	069h
   293  026A  346E               	retlw	06Eh
   294  026B  3420               	retlw	020h
   295  026C  346D               	retlw	06Dh
   296  026D  3465               	retlw	065h
   297  026E  346E               	retlw	06Eh
   298  026F  3475               	retlw	075h
   299  0270  340A               	retlw	0Ah
   300  0271  340A               	retlw	0Ah
   301  0272  3443               	retlw	043h
   302  0273  3468               	retlw	068h
   303  0274  346F               	retlw	06Fh
   304  0275  346F               	retlw	06Fh
   305  0276  3473               	retlw	073h
   306  0277  3465               	retlw	065h
   307  0278  343A               	retlw	03Ah
   308  0279  3420               	retlw	020h
   309  027A  3400               	retlw	0
   310  027B  3400               	retlw	0
   311                           	global	_msgMenu4
   312                           psect	stringtext
   313                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   314                           	line	42
   315  027C                     _msgMenu4:
   316  027C  340A               	retlw	0Ah
   317  027D  340A               	retlw	0Ah
   318  027E  3445               	retlw	045h
   319  027F  3445               	retlw	045h
   320  0280  3450               	retlw	050h
   321  0281  3452               	retlw	052h
   322  0282  344F               	retlw	04Fh
   323  0283  344D               	retlw	04Dh
   324  0284  3420               	retlw	020h
   325  0285  344D               	retlw	04Dh
   326  0286  3465               	retlw	065h
   327  0287  346E               	retlw	06Eh
   328  0288  3475               	retlw	075h
   329  0289  340A               	retlw	0Ah
   330  028A  342D               	retlw	02Dh
   331  028B  342D               	retlw	02Dh
   332  028C  342D               	retlw	02Dh
   333  028D  342D               	retlw	02Dh
   334  028E  342D               	retlw	02Dh
   335  028F  342D               	retlw	02Dh
   336  0290  342D               	retlw	02Dh
   337  0291  342D               	retlw	02Dh
   338  0292  342D               	retlw	02Dh
   339  0293  342D               	retlw	02Dh
   340  0294  342D               	retlw	02Dh
   341  0295  342D               	retlw	02Dh
   342  0296  342D               	retlw	02Dh
   343  0297  342D               	retlw	02Dh
   344  0298  340A               	retlw	0Ah
   345  0299  340A               	retlw	0Ah
   346  029A  3477               	retlw	077h
   347  029B  3429               	retlw	029h
   348  029C  3457               	retlw	057h
   349  029D  3472               	retlw	072h
   350  029E  3469               	retlw	069h
   351  029F  3474               	retlw	074h
   352  02A0  3465               	retlw	065h
   353  02A1  3420               	retlw	020h
   354  02A2  3461               	retlw	061h
   355  02A3  3420               	retlw	020h
   356  02A4  3463               	retlw	063h
   357  02A5  3468               	retlw	068h
   358  02A6  3461               	retlw	061h
   359  02A7  3472               	retlw	072h
   360  02A8  3461               	retlw	061h
   361  02A9  3463               	retlw	063h
   362  02AA  3474               	retlw	074h
   363  02AB  3465               	retlw	065h
   364  02AC  3472               	retlw	072h
   365  02AD  3420               	retlw	020h
   366  02AE  3474               	retlw	074h
   367  02AF  346F               	retlw	06Fh
   368  02B0  3420               	retlw	020h
   369  02B1  3445               	retlw	045h
   370  02B2  3445               	retlw	045h
   371  02B3  3450               	retlw	050h
   372  02B4  3452               	retlw	052h
   373  02B5  344F               	retlw	04Fh
   374  02B6  344D               	retlw	04Dh
   375  02B7  340A               	retlw	0Ah
   376  02B8  3472               	retlw	072h
   377  02B9  3429               	retlw	029h
   378  02BA  3452               	retlw	052h
   379  02BB  3465               	retlw	065h
   380  02BC  3461               	retlw	061h
   381  02BD  3464               	retlw	064h
   382  02BE  3420               	retlw	020h
   383  02BF  3461               	retlw	061h
   384  02C0  3420               	retlw	020h
   385  02C1  3463               	retlw	063h
   386  02C2  3468               	retlw	068h
   387  02C3  3461               	retlw	061h
   388  02C4  3472               	retlw	072h
   389  02C5  3461               	retlw	061h
   390  02C6  3463               	retlw	063h
   391  02C7  3474               	retlw	074h
   392  02C8  3465               	retlw	065h
   393  02C9  3472               	retlw	072h
   394  02CA  3420               	retlw	020h
   395  02CB  3466               	retlw	066h
   396  02CC  3472               	retlw	072h
   397  02CD  346F               	retlw	06Fh
   398  02CE  346D               	retlw	06Dh
   399  02CF  3420               	retlw	020h
   400  02D0  3445               	retlw	045h
   401  02D1  3445               	retlw	045h
   402  02D2  3450               	retlw	050h
   403  02D3  3452               	retlw	052h
   404  02D4  344F               	retlw	04Fh
   405  02D5  344D               	retlw	04Dh
   406  02D6  340A               	retlw	0Ah
   407  02D7  346D               	retlw	06Dh
   408  02D8  3429               	retlw	029h
   409  02D9  3442               	retlw	042h
   410  02DA  3461               	retlw	061h
   411  02DB  3463               	retlw	063h
   412  02DC  346B               	retlw	06Bh
   413  02DD  3420               	retlw	020h
   414  02DE  3474               	retlw	074h
   415  02DF  346F               	retlw	06Fh
   416  02E0  3420               	retlw	020h
   417  02E1  346D               	retlw	06Dh
   418  02E2  3461               	retlw	061h
   419  02E3  3469               	retlw	069h
   420  02E4  346E               	retlw	06Eh
   421  02E5  3420               	retlw	020h
   422  02E6  346D               	retlw	06Dh
   423  02E7  3465               	retlw	065h
   424  02E8  346E               	retlw	06Eh
   425  02E9  3475               	retlw	075h
   426  02EA  340A               	retlw	0Ah
   427  02EB  340A               	retlw	0Ah
   428  02EC  3443               	retlw	043h
   429  02ED  3468               	retlw	068h
   430  02EE  346F               	retlw	06Fh
   431  02EF  346F               	retlw	06Fh
   432  02F0  3473               	retlw	073h
   433  02F1  3465               	retlw	065h
   434  02F2  343A               	retlw	03Ah
   435  02F3  3420               	retlw	020h
   436  02F4  3400               	retlw	0
   437  02F5  3400               	retlw	0
   438                           	global	_msgMenu0
   439                           psect	stringtext
   440                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   441                           	line	38
   442  02F6                     _msgMenu0:
   443  02F6  340A               	retlw	0Ah
   444  02F7  340A               	retlw	0Ah
   445  02F8  3442               	retlw	042h
   446  02F9  3475               	retlw	075h
   447  02FA  3473               	retlw	073h
   448  02FB  3420               	retlw	020h
   449  02FC  3450               	retlw	050h
   450  02FD  3469               	retlw	069h
   451  02FE  3472               	retlw	072h
   452  02FF  3461               	retlw	061h
   453  0300  3474               	retlw	074h
   454  0301  3465               	retlw	065h
   455  0302  3420               	retlw	020h
   456  0303  3444               	retlw	044h
   457  0304  3465               	retlw	065h
   458  0305  346D               	retlw	06Dh
   459  0306  346F               	retlw	06Fh
   460  0307  3420               	retlw	020h
   461  0308  3442               	retlw	042h
   462  0309  346F               	retlw	06Fh
   463  030A  3461               	retlw	061h
   464  030B  3472               	retlw	072h
   465  030C  3464               	retlw	064h
   466  030D  3420               	retlw	020h
   467  030E  3476               	retlw	076h
   468  030F  3435               	retlw	035h
   469  0310  340A               	retlw	0Ah
   470  0311  3446               	retlw	046h
   471  0312  3457               	retlw	057h
   472  0313  3420               	retlw	020h
   473  0314  3476               	retlw	076h
   474  0315  3465               	retlw	065h
   475  0316  3472               	retlw	072h
   476  0317  3469               	retlw	069h
   477  0318  3473               	retlw	073h
   478  0319  346F               	retlw	06Fh
   479  031A  346E               	retlw	06Eh
   480  031B  3420               	retlw	020h
   481  031C  3476               	retlw	076h
   482  031D  3430               	retlw	030h
   483  031E  342E               	retlw	02Eh
   484  031F  3439               	retlw	039h
   485  0320  3435               	retlw	035h
   486  0321  340A               	retlw	0Ah
   487  0322  340A               	retlw	0Ah
   488  0323  3420               	retlw	020h
   489  0324  3420               	retlw	020h
   490  0325  344D               	retlw	04Dh
   491  0326  3461               	retlw	061h
   492  0327  3469               	retlw	069h
   493  0328  346E               	retlw	06Eh
   494  0329  3420               	retlw	020h
   495  032A  344D               	retlw	04Dh
   496  032B  3465               	retlw	065h
   497  032C  346E               	retlw	06Eh
   498  032D  3475               	retlw	075h
   499  032E  340A               	retlw	0Ah
   500  032F  342D               	retlw	02Dh
   501  0330  342D               	retlw	02Dh
   502  0331  342D               	retlw	02Dh
   503  0332  342D               	retlw	02Dh
   504  0333  342D               	retlw	02Dh
   505  0334  342D               	retlw	02Dh
   506  0335  342D               	retlw	02Dh
   507  0336  342D               	retlw	02Dh
   508  0337  342D               	retlw	02Dh
   509  0338  342D               	retlw	02Dh
   510  0339  342D               	retlw	02Dh
   511  033A  342D               	retlw	02Dh
   512  033B  342D               	retlw	02Dh
   513  033C  340A               	retlw	0Ah
   514  033D  340A               	retlw	0Ah
   515  033E  3431               	retlw	031h
   516  033F  3429               	retlw	029h
   517  0340  3441               	retlw	041h
   518  0341  3444               	retlw	044h
   519  0342  3443               	retlw	043h
   520  0343  340A               	retlw	0Ah
   521  0344  3432               	retlw	032h
   522  0345  3429               	retlw	029h
   523  0346  3450               	retlw	050h
   524  0347  3457               	retlw	057h
   525  0348  344D               	retlw	04Dh
   526  0349  340A               	retlw	0Ah
   527  034A  3433               	retlw	033h
   528  034B  3429               	retlw	029h
   529  034C  3444               	retlw	044h
   530  034D  3441               	retlw	041h
   531  034E  3443               	retlw	043h
   532  034F  340A               	retlw	0Ah
   533  0350  3434               	retlw	034h
   534  0351  3429               	retlw	029h
   535  0352  3445               	retlw	045h
   536  0353  3445               	retlw	045h
   537  0354  3450               	retlw	050h
   538  0355  3452               	retlw	052h
   539  0356  344F               	retlw	04Fh
   540  0357  344D               	retlw	04Dh
   541  0358  340A               	retlw	0Ah
   542  0359  340A               	retlw	0Ah
   543  035A  3443               	retlw	043h
   544  035B  3468               	retlw	068h
   545  035C  346F               	retlw	06Fh
   546  035D  346F               	retlw	06Fh
   547  035E  3473               	retlw	073h
   548  035F  3465               	retlw	065h
   549  0360  3428               	retlw	028h
   550  0361  3431               	retlw	031h
   551  0362  342D               	retlw	02Dh
   552  0363  3434               	retlw	034h
   553  0364  3429               	retlw	029h
   554  0365  343A               	retlw	03Ah
   555  0366  3400               	retlw	0
   556  0367  3400               	retlw	0
   557                           	global	_msgMenu2
   558                           psect	stringtext
   559                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   560                           	line	40
   561  0368                     _msgMenu2:
   562  0368  340A               	retlw	0Ah
   563  0369  340A               	retlw	0Ah
   564  036A  3450               	retlw	050h
   565  036B  3457               	retlw	057h
   566  036C  344D               	retlw	04Dh
   567  036D  3420               	retlw	020h
   568  036E  344D               	retlw	04Dh
   569  036F  3465               	retlw	065h
   570  0370  346E               	retlw	06Eh
   571  0371  3475               	retlw	075h
   572  0372  340A               	retlw	0Ah
   573  0373  342D               	retlw	02Dh
   574  0374  342D               	retlw	02Dh
   575  0375  342D               	retlw	02Dh
   576  0376  342D               	retlw	02Dh
   577  0377  342D               	retlw	02Dh
   578  0378  342D               	retlw	02Dh
   579  0379  342D               	retlw	02Dh
   580  037A  342D               	retlw	02Dh
   581  037B  342D               	retlw	02Dh
   582  037C  342D               	retlw	02Dh
   583  037D  342D               	retlw	02Dh
   584  037E  340A               	retlw	0Ah
   585  037F  340A               	retlw	0Ah
   586  0380  3470               	retlw	070h
   587  0381  3429               	retlw	029h
   588  0382  3453               	retlw	053h
   589  0383  3465               	retlw	065h
   590  0384  3474               	retlw	074h
   591  0385  3420               	retlw	020h
   592  0386  3450               	retlw	050h
   593  0387  3457               	retlw	057h
   594  0388  344D               	retlw	04Dh
   595  0389  3420               	retlw	020h
   596  038A  3450               	retlw	050h
   597  038B  3465               	retlw	065h
   598  038C  3472               	retlw	072h
   599  038D  3469               	retlw	069h
   600  038E  346F               	retlw	06Fh
   601  038F  3464               	retlw	064h
   602  0390  340A               	retlw	0Ah
   603  0391  3464               	retlw	064h
   604  0392  3429               	retlw	029h
   605  0393  3453               	retlw	053h
   606  0394  3465               	retlw	065h
   607  0395  3474               	retlw	074h
   608  0396  3420               	retlw	020h
   609  0397  3450               	retlw	050h
   610  0398  3457               	retlw	057h
   611  0399  344D               	retlw	04Dh
   612  039A  3420               	retlw	020h
   613  039B  3444               	retlw	044h
   614  039C  3475               	retlw	075h
   615  039D  3474               	retlw	074h
   616  039E  3479               	retlw	079h
   617  039F  3420               	retlw	020h
   618  03A0  3443               	retlw	043h
   619  03A1  3479               	retlw	079h
   620  03A2  3463               	retlw	063h
   621  03A3  346C               	retlw	06Ch
   622  03A4  3465               	retlw	065h
   623  03A5  340A               	retlw	0Ah
   624  03A6  346D               	retlw	06Dh
   625  03A7  3429               	retlw	029h
   626  03A8  3442               	retlw	042h
   627  03A9  3461               	retlw	061h
   628  03AA  3463               	retlw	063h
   629  03AB  346B               	retlw	06Bh
   630  03AC  3420               	retlw	020h
   631  03AD  3474               	retlw	074h
   632  03AE  346F               	retlw	06Fh
   633  03AF  3420               	retlw	020h
   634  03B0  346D               	retlw	06Dh
   635  03B1  3461               	retlw	061h
   636  03B2  3469               	retlw	069h
   637  03B3  346E               	retlw	06Eh
   638  03B4  3420               	retlw	020h
   639  03B5  346D               	retlw	06Dh
   640  03B6  3465               	retlw	065h
   641  03B7  346E               	retlw	06Eh
   642  03B8  3475               	retlw	075h
   643  03B9  340A               	retlw	0Ah
   644  03BA  340A               	retlw	0Ah
   645  03BB  3443               	retlw	043h
   646  03BC  3468               	retlw	068h
   647  03BD  346F               	retlw	06Fh
   648  03BE  346F               	retlw	06Fh
   649  03BF  3473               	retlw	073h
   650  03C0  3465               	retlw	065h
   651  03C1  343A               	retlw	03Ah
   652  03C2  3420               	retlw	020h
   653  03C3  3400               	retlw	0
   654  03C4  3400               	retlw	0
   655                           	global	_msgMenu3
   656                           psect	stringtext
   657                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   658                           	line	41
   659  03C5                     _msgMenu3:
   660  03C5  340A               	retlw	0Ah
   661  03C6  340A               	retlw	0Ah
   662  03C7  3444               	retlw	044h
   663  03C8  3441               	retlw	041h
   664  03C9  3443               	retlw	043h
   665  03CA  3420               	retlw	020h
   666  03CB  344D               	retlw	04Dh
   667  03CC  3465               	retlw	065h
   668  03CD  346E               	retlw	06Eh
   669  03CE  3475               	retlw	075h
   670  03CF  340A               	retlw	0Ah
   671  03D0  342D               	retlw	02Dh
   672  03D1  342D               	retlw	02Dh
   673  03D2  342D               	retlw	02Dh
   674  03D3  342D               	retlw	02Dh
   675  03D4  342D               	retlw	02Dh
   676  03D5  342D               	retlw	02Dh
   677  03D6  342D               	retlw	02Dh
   678  03D7  342D               	retlw	02Dh
   679  03D8  342D               	retlw	02Dh
   680  03D9  342D               	retlw	02Dh
   681  03DA  342D               	retlw	02Dh
   682  03DB  340A               	retlw	0Ah
   683  03DC  340A               	retlw	0Ah
   684  03DD  3476               	retlw	076h
   685  03DE  3429               	retlw	029h
   686  03DF  3453               	retlw	053h
   687  03E0  3465               	retlw	065h
   688  03E1  3474               	retlw	074h
   689  03E2  3420               	retlw	020h
   690  03E3  3444               	retlw	044h
   691  03E4  3441               	retlw	041h
   692  03E5  3443               	retlw	043h
   693  03E6  3420               	retlw	020h
   694  03E7  346C               	retlw	06Ch
   695  03E8  3465               	retlw	065h
   696  03E9  3476               	retlw	076h
   697  03EA  3465               	retlw	065h
   698  03EB  346C               	retlw	06Ch
   699  03EC  3420               	retlw	020h
   700  03ED  3430               	retlw	030h
   701  03EE  342D               	retlw	02Dh
   702  03EF  3433               	retlw	033h
   703  03F0  3431               	retlw	031h
   704  03F1  340A               	retlw	0Ah
   705  03F2  346D               	retlw	06Dh
   706  03F3  3429               	retlw	029h
   707  03F4  3442               	retlw	042h
   708  03F5  3461               	retlw	061h
   709  03F6  3463               	retlw	063h
   710  03F7  346B               	retlw	06Bh
   711  03F8  3420               	retlw	020h
   712  03F9  3474               	retlw	074h
   713  03FA  346F               	retlw	06Fh
   714  03FB  3420               	retlw	020h
   715  03FC  346D               	retlw	06Dh
   716  03FD  3461               	retlw	061h
   717  03FE  3469               	retlw	069h
   718  03FF  346E               	retlw	06Eh
   719  0400  3420               	retlw	020h
   720  0401  346D               	retlw	06Dh
   721  0402  3465               	retlw	065h
   722  0403  346E               	retlw	06Eh
   723  0404  3475               	retlw	075h
   724  0405  340A               	retlw	0Ah
   725  0406  340A               	retlw	0Ah
   726  0407  3443               	retlw	043h
   727  0408  3468               	retlw	068h
   728  0409  346F               	retlw	06Fh
   729  040A  346F               	retlw	06Fh
   730  040B  3473               	retlw	073h
   731  040C  3465               	retlw	065h
   732  040D  343A               	retlw	03Ah
   733  040E  3420               	retlw	020h
   734  040F  3400               	retlw	0
   735  0410  3400               	retlw	0
   736                           	global	_msgEEw
   737                           psect	stringtext
   738                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   739                           	line	46
   740  0411                     _msgEEw:
   741  0411  340A               	retlw	0Ah
   742  0412  340A               	retlw	0Ah
   743  0413  3445               	retlw	045h
   744  0414  346E               	retlw	06Eh
   745  0415  3474               	retlw	074h
   746  0416  3465               	retlw	065h
   747  0417  3472               	retlw	072h
   748  0418  3420               	retlw	020h
   749  0419  3474               	retlw	074h
   750  041A  3468               	retlw	068h
   751  041B  3465               	retlw	065h
   752  041C  3420               	retlw	020h
   753  041D  3476               	retlw	076h
   754  041E  3461               	retlw	061h
   755  041F  3472               	retlw	072h
   756  0420  3469               	retlw	069h
   757  0421  3461               	retlw	061h
   758  0422  3462               	retlw	062h
   759  0423  346C               	retlw	06Ch
   760  0424  3465               	retlw	065h
   761  0425  3420               	retlw	020h
   762  0426  3428               	retlw	028h
   763  0427  3430               	retlw	030h
   764  0428  342D               	retlw	02Dh
   765  0429  3432               	retlw	032h
   766  042A  3435               	retlw	035h
   767  042B  3435               	retlw	035h
   768  042C  3429               	retlw	029h
   769  042D  3420               	retlw	020h
   770  042E  3474               	retlw	074h
   771  042F  346F               	retlw	06Fh
   772  0430  3420               	retlw	020h
   773  0431  3462               	retlw	062h
   774  0432  3465               	retlw	065h
   775  0433  3420               	retlw	020h
   776  0434  3465               	retlw	065h
   777  0435  346E               	retlw	06Eh
   778  0436  3474               	retlw	074h
   779  0437  3465               	retlw	065h
   780  0438  3472               	retlw	072h
   781  0439  3465               	retlw	065h
   782  043A  3464               	retlw	064h
   783  043B  3420               	retlw	020h
   784  043C  3469               	retlw	069h
   785  043D  346E               	retlw	06Eh
   786  043E  3474               	retlw	074h
   787  043F  346F               	retlw	06Fh
   788  0440  3420               	retlw	020h
   789  0441  3445               	retlw	045h
   790  0442  3445               	retlw	045h
   791  0443  3450               	retlw	050h
   792  0444  3452               	retlw	052h
   793  0445  344F               	retlw	04Fh
   794  0446  344D               	retlw	04Dh
   795  0447  343A               	retlw	03Ah
   796  0448  3420               	retlw	020h
   797  0449  3400               	retlw	0
   798                           	global	_msgDACsetV
   799                           psect	stringtext
   800                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   801                           	line	44
   802  044A                     _msgDACsetV:
   803  044A  340A               	retlw	0Ah
   804  044B  340A               	retlw	0Ah
   805  044C  3445               	retlw	045h
   806  044D  346E               	retlw	06Eh
   807  044E  3474               	retlw	074h
   808  044F  3465               	retlw	065h
   809  0450  3472               	retlw	072h
   810  0451  3420               	retlw	020h
   811  0452  3464               	retlw	064h
   812  0453  3465               	retlw	065h
   813  0454  3473               	retlw	073h
   814  0455  3469               	retlw	069h
   815  0456  3472               	retlw	072h
   816  0457  3465               	retlw	065h
   817  0458  3464               	retlw	064h
   818  0459  3420               	retlw	020h
   819  045A  3444               	retlw	044h
   820  045B  3441               	retlw	041h
   821  045C  3443               	retlw	043h
   822  045D  3420               	retlw	020h
   823  045E  346C               	retlw	06Ch
   824  045F  3465               	retlw	065h
   825  0460  3476               	retlw	076h
   826  0461  3465               	retlw	065h
   827  0462  346C               	retlw	06Ch
   828  0463  3420               	retlw	020h
   829  0464  3466               	retlw	066h
   830  0465  3472               	retlw	072h
   831  0466  346F               	retlw	06Fh
   832  0467  346D               	retlw	06Dh
   833  0468  3420               	retlw	020h
   834  0469  3430               	retlw	030h
   835  046A  3420               	retlw	020h
   836  046B  3474               	retlw	074h
   837  046C  346F               	retlw	06Fh
   838  046D  3420               	retlw	020h
   839  046E  3433               	retlw	033h
   840  046F  3431               	retlw	031h
   841  0470  343A               	retlw	03Ah
   842  0471  3420               	retlw	020h
   843  0472  3400               	retlw	0
   844                           	global	_msgEEaddr
   845                           psect	stringtext
   846                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
   847                           	line	47
   848  0473                     _msgEEaddr:
   849  0473  340A               	retlw	0Ah
   850  0474  340A               	retlw	0Ah
   851  0475  3445               	retlw	045h
   852  0476  346E               	retlw	06Eh
   853  0477  3474               	retlw	074h
   854  0478  3465               	retlw	065h
   855  0479  3472               	retlw	072h
   856  047A  3420               	retlw	020h
   857  047B  3474               	retlw	074h
   858  047C  3468               	retlw	068h
   859  047D  3465               	retlw	065h
   860  047E  3420               	retlw	020h
   861  047F  3461               	retlw	061h
   862  0480  3464               	retlw	064h
   863  0481  3464               	retlw	064h
   864  0482  3472               	retlw	072h
   865  0483  3465               	retlw	065h
   866  0484  3473               	retlw	073h
   867  0485  3473               	retlw	073h
   868  0486  3420               	retlw	020h
   869  0487  3430               	retlw	030h
   870  0488  342D               	retlw	02Dh
   871  0489  3432               	retlw	032h
   872  048A  3435               	retlw	035h
   873  048B  3435               	retlw	035h
   874  048C  343A               	retlw	03Ah
   875  048D  3420               	retlw	020h
   876  048E  3400               	retlw	0
   877                           	global	_msgMenu1
   878                           	global	_msgMenu4
   879                           	global	_msgMenu0
   880                           	global	_msgMenu2
   881                           	global	_msgMenu3
   882                           	global	_msgEEw
   883                           	global	_msgDACsetV
   884                           	global	_msgEEaddr
   885                           	global	_ringbuff
   886                           	global	_PWMduty
   887                           	global	_PWMperiod
   888                           	global	_mode_device
   889                           	global	_mode_protocol
   890                           	global	_rhead
   891                           	global	_eeBuf
   892                           	global	_rtail
   893                           	global	_mode
   894                           psect	nvBANK0,class=BANK0,space=1
   895                           global __pnvBANK0
   896  0068                     __pnvBANK0:
   897  0068                     _mode:
   898  0068                            ds      1
   899                           
   900                           	global	_PORTA
   901  000C                     _PORTA	set	12
   902                           	global	_PORTB
   903  000D                     _PORTB	set	13
   904                           	global	_PORTC
   905  000E                     _PORTC	set	14
   906                           	global	_PORTCbits
   907  000E                     _PORTCbits	set	14
   908                           	global	_PR2
   909  001B                     _PR2	set	27
   910                           	global	_T2CON
   911  001C                     _T2CON	set	28
   912                           	global	_T2CONbits
   913  001C                     _T2CONbits	set	28
   914                           	global	_CARRY
   915  0018                     _CARRY	set	24
   916                           	global	_GIE
   917  005F                     _GIE	set	95
   918                           	global	_RA2
   919  0062                     _RA2	set	98
   920                           	global	_RB4
   921  006C                     _RB4	set	108
   922                           	global	_RB6
   923  006E                     _RB6	set	110
   924                           	global	_RC2
   925  0072                     _RC2	set	114
   926                           	global	_RC3
   927  0073                     _RC3	set	115
   928                           	global	_RC5
   929  0075                     _RC5	set	117
   930                           	global	_RCIF
   931  008D                     _RCIF	set	141
   932                           	global	_SSP2IF
   933  00A0                     _SSP2IF	set	160
   934                           	global	_TMR2IF
   935  0089                     _TMR2IF	set	137
   936                           	global	_TXIF
   937  008C                     _TXIF	set	140
   938                           	global	_ADCON0
   939  009D                     _ADCON0	set	157
   940                           	global	_ADCON0bits
   941  009D                     _ADCON0bits	set	157
   942                           	global	_ADCON1
   943  009E                     _ADCON1	set	158
   944                           	global	_ADRESH
   945  009C                     _ADRESH	set	156
   946                           	global	_ADRESL
   947  009B                     _ADRESL	set	155
   948                           	global	_OSCCONbits
   949  0099                     _OSCCONbits	set	153
   950                           	global	_TRISA
   951  008C                     _TRISA	set	140
   952                           	global	_TRISAbits
   953  008C                     _TRISAbits	set	140
   954                           	global	_TRISB
   955  008D                     _TRISB	set	141
   956                           	global	_TRISC
   957  008E                     _TRISC	set	142
   958                           	global	_TRISCbits
   959  008E                     _TRISCbits	set	142
   960                           	global	_TRISB5
   961  046D                     _TRISB5	set	1133
   962                           	global	_TRISC4
   963  0474                     _TRISC4	set	1140
   964                           	global	_nWPUEN
   965  04AF                     _nWPUEN	set	1199
   966                           	global	_APFCON0
   967  011D                     _APFCON0	set	285
   968                           	global	_APFCON1
   969  011E                     _APFCON1	set	286
   970                           	global	_APFCON1bits
   971  011E                     _APFCON1bits	set	286
   972                           	global	_DACCON0
   973  0118                     _DACCON0	set	280
   974                           	global	_DACCON1
   975  0119                     _DACCON1	set	281
   976                           	global	_FVRCON
   977  0117                     _FVRCON	set	279
   978                           	global	_LATA
   979  010C                     _LATA	set	268
   980                           	global	_LATB
   981  010D                     _LATB	set	269
   982                           	global	_LATC
   983  010E                     _LATC	set	270
   984                           	global	_DACOE
   985  08C5                     _DACOE	set	2245
   986                           	global	_EEADR
   987  0191                     _EEADR	set	401
   988                           	global	_ANSELA
   989  018C                     _ANSELA	set	396
   990                           	global	_ANSELB
   991  018D                     _ANSELB	set	397
   992                           	global	_ANSELC
   993  018E                     _ANSELC	set	398
   994                           	global	_EEADRL
   995  0191                     _EEADRL	set	401
   996                           	global	_EECON1
   997  0195                     _EECON1	set	405
   998                           	global	_EECON1bits
   999  0195                     _EECON1bits	set	405
  1000                           	global	_EECON2
  1001  0196                     _EECON2	set	406
  1002                           	global	_EEDATA
  1003  0193                     _EEDATA	set	403
  1004                           	global	_EEDATL
  1005  0193                     _EEDATL	set	403
  1006                           	global	_RCREG
  1007  0199                     _RCREG	set	409
  1008                           	global	_RCSTA
  1009  019D                     _RCSTA	set	413
  1010                           	global	_SPBRGH
  1011  019C                     _SPBRGH	set	412
  1012                           	global	_SPBRGL
  1013  019B                     _SPBRGL	set	411
  1014                           	global	_TXREG
  1015  019A                     _TXREG	set	410
  1016                           	global	_BRGH
  1017  0CF2                     _BRGH	set	3314
  1018                           	global	_CREN
  1019  0CEC                     _CREN	set	3308
  1020                           	global	_RD
  1021  0CA8                     _RD	set	3240
  1022                           	global	_SPEN
  1023  0CEF                     _SPEN	set	3311
  1024                           	global	_SYNC
  1025  0CF4                     _SYNC	set	3316
  1026                           	global	_TRMT
  1027  0CF1                     _TRMT	set	3313
  1028                           	global	_TXEN
  1029  0CF5                     _TXEN	set	3317
  1030                           	global	_WR
  1031  0CA9                     _WR	set	3241
  1032                           	global	_WREN
  1033  0CAA                     _WREN	set	3242
  1034                           	global	_SSP2ADD
  1035  021A                     _SSP2ADD	set	538
  1036                           	global	_SSP2BUF
  1037  0219                     _SSP2BUF	set	537
  1038                           	global	_SSP2CON1
  1039  021D                     _SSP2CON1	set	541
  1040                           	global	_SSP2CON1bits
  1041  021D                     _SSP2CON1bits	set	541
  1042                           	global	_SSP2CON2bits
  1043  021E                     _SSP2CON2bits	set	542
  1044                           	global	_SSP2CON3
  1045  021F                     _SSP2CON3	set	543
  1046                           	global	_SSP2MSK
  1047  021B                     _SSP2MSK	set	539
  1048                           	global	_SSP2STAT
  1049  021C                     _SSP2STAT	set	540
  1050                           	global	_SSP2STATbits
  1051  021C                     _SSP2STATbits	set	540
  1052                           	global	_WPUA
  1053  020C                     _WPUA	set	524
  1054                           	global	_WPUB
  1055  020D                     _WPUB	set	525
  1056                           	global	_WPUC
  1057  020E                     _WPUC	set	526
  1058                           	global	_CCP2CON
  1059  029A                     _CCP2CON	set	666
  1060                           	global	_CCPR2L
  1061  0298                     _CCPR2L	set	664
  1062                           	global	_CCPTMRS
  1063  029E                     _CCPTMRS	set	670
  1064                           psect	stringtext
  1065                           	
  1066  048F                     STR_17:	
  1067  048F  346D               	retlw	109	;'m'
  1068  0490  3461               	retlw	97	;'a'
  1069  0491  3464               	retlw	100	;'d'
  1070  0492  3465               	retlw	101	;'e'
  1071  0493  3420               	retlw	32	;' '
  1072  0494  346D               	retlw	109	;'m'
  1073  0495  3465               	retlw	101	;'e'
  1074  0496  3420               	retlw	32	;' '
  1075  0497  3464               	retlw	100	;'d'
  1076  0498  346F               	retlw	111	;'o'
  1077  0499  3420               	retlw	32	;' '
  1078  049A  3477               	retlw	119	;'w'
  1079  049B  3465               	retlw	101	;'e'
  1080  049C  3469               	retlw	105	;'i'
  1081  049D  3472               	retlw	114	;'r'
  1082  049E  3464               	retlw	100	;'d'
  1083  049F  3420               	retlw	32	;' '
  1084  04A0  3473               	retlw	115	;'s'
  1085  04A1  3468               	retlw	104	;'h'
  1086  04A2  3469               	retlw	105	;'i'
  1087  04A3  3474               	retlw	116	;'t'
  1088  04A4  3420               	retlw	32	;' '
  1089  04A5  346C               	retlw	108	;'l'
  1090  04A6  3469               	retlw	105	;'i'
  1091  04A7  346B               	retlw	107	;'k'
  1092  04A8  3465               	retlw	101	;'e'
  1093  04A9  3420               	retlw	32	;' '
  1094  04AA  3450               	retlw	80	;'P'
  1095  04AB  3457               	retlw	87	;'W'
  1096  04AC  344D               	retlw	77	;'M'
  1097  04AD  342C               	retlw	44	;','
  1098  04AE  3420               	retlw	32	;' '
  1099  04AF  346D               	retlw	109	;'m'
  1100  04B0  3465               	retlw	101	;'e'
  1101  04B1  346D               	retlw	109	;'m'
  1102  04B2  346F               	retlw	111	;'o'
  1103  04B3  3472               	retlw	114	;'r'
  1104  04B4  3479               	retlw	121	;'y'
  1105  04B5  3465               	retlw	101	;'e'
  1106  04B6  346D               	retlw	109	;'m'
  1107  04B7  3475               	retlw	117	;'u'
  1108  04B8  346C               	retlw	108	;'l'
  1109  04B9  3461               	retlw	97	;'a'
  1110  04BA  3474               	retlw	116	;'t'
  1111  04BB  3469               	retlw	105	;'i'
  1112  04BC  346F               	retlw	111	;'o'
  1113  04BD  346E               	retlw	110	;'n'
  1114  04BE  342C               	retlw	44	;','
  1115  04BF  3420               	retlw	32	;' '
  1116  04C0  3463               	retlw	99	;'c'
  1117  04C1  346F               	retlw	111	;'o'
  1118  04C2  346E               	retlw	110	;'n'
  1119  04C3  3476               	retlw	118	;'v'
  1120  04C4  3465               	retlw	101	;'e'
  1121  04C5  3472               	retlw	114	;'r'
  1122  04C6  3474               	retlw	116	;'t'
  1123  04C7  3420               	retlw	32	;' '
  1124  04C8  3468               	retlw	104	;'h'
  1125  04C9  3469               	retlw	105	;'i'
  1126  04CA  3467               	retlw	103	;'g'
  1127  04CB  3468               	retlw	104	;'h'
  1128  04CC  3420               	retlw	32	;' '
  1129  04CD  3476               	retlw	118	;'v'
  1130  04CE  346F               	retlw	111	;'o'
  1131  04CF  346C               	retlw	108	;'l'
  1132  04D0  3474               	retlw	116	;'t'
  1133  04D1  3461               	retlw	97	;'a'
  1134  04D2  3467               	retlw	103	;'g'
  1135  04D3  3465               	retlw	101	;'e'
  1136  04D4  3473               	retlw	115	;'s'
  1137  04D5  342E               	retlw	46	;'.'
  1138  04D6  342E               	retlw	46	;'.'
  1139  04D7  340D               	retlw	13
  1140  04D8  340A               	retlw	10
  1141  04D9  3400               	retlw	0
  1142                           psect	stringtext
  1143                           	
  1144  04DA                     STR_11:	
  1145  04DA  3454               	retlw	84	;'T'
  1146  04DB  3468               	retlw	104	;'h'
  1147  04DC  3465               	retlw	101	;'e'
  1148  04DD  3479               	retlw	121	;'y'
  1149  04DE  3420               	retlw	32	;' '
  1150  04DF  3470               	retlw	112	;'p'
  1151  04E0  3475               	retlw	117	;'u'
  1152  04E1  3474               	retlw	116	;'t'
  1153  04E2  3420               	retlw	32	;' '
  1154  04E3  346D               	retlw	109	;'m'
  1155  04E4  3465               	retlw	101	;'e'
  1156  04E5  3420               	retlw	32	;' '
  1157  04E6  3474               	retlw	116	;'t'
  1158  04E7  3468               	retlw	104	;'h'
  1159  04E8  3472               	retlw	114	;'r'
  1160  04E9  346F               	retlw	111	;'o'
  1161  04EA  3475               	retlw	117	;'u'
  1162  04EB  3467               	retlw	103	;'g'
  1163  04EC  3468               	retlw	104	;'h'
  1164  04ED  3420               	retlw	32	;' '
  1165  04EE  3465               	retlw	101	;'e'
  1166  04EF  346E               	retlw	110	;'n'
  1167  04F0  3464               	retlw	100	;'d'
  1168  04F1  346C               	retlw	108	;'l'
  1169  04F2  3465               	retlw	101	;'e'
  1170  04F3  3473               	retlw	115	;'s'
  1171  04F4  3473               	retlw	115	;'s'
  1172  04F5  3420               	retlw	32	;' '
  1173  04F6  3468               	retlw	104	;'h'
  1174  04F7  346F               	retlw	111	;'o'
  1175  04F8  3475               	retlw	117	;'u'
  1176  04F9  3472               	retlw	114	;'r'
  1177  04FA  3473               	retlw	115	;'s'
  1178  04FB  3420               	retlw	32	;' '
  1179  04FC  346F               	retlw	111	;'o'
  1180  04FD  3466               	retlw	102	;'f'
  1181  04FE  3420               	retlw	32	;' '
  1182  04FF  3472               	retlw	114	;'r'
  1183  0500  3465               	retlw	101	;'e'
  1184  0501  3467               	retlw	103	;'g'
  1185  0502  3472               	retlw	114	;'r'
  1186  0503  3465               	retlw	101	;'e'
  1187  0504  3473               	retlw	115	;'s'
  1188  0505  3473               	retlw	115	;'s'
  1189  0506  3469               	retlw	105	;'i'
  1190  0507  346F               	retlw	111	;'o'
  1191  0508  346E               	retlw	110	;'n'
  1192  0509  3420               	retlw	32	;' '
  1193  050A  3474               	retlw	116	;'t'
  1194  050B  3465               	retlw	101	;'e'
  1195  050C  3473               	retlw	115	;'s'
  1196  050D  3474               	retlw	116	;'t'
  1197  050E  342E               	retlw	46	;'.'
  1198  050F  342E               	retlw	46	;'.'
  1199  0510  340D               	retlw	13
  1200  0511  340A               	retlw	10
  1201  0512  3400               	retlw	0
  1202                           psect	stringtext
  1203                           	
  1204  0513                     STR_13:	
  1205  0513  342E               	retlw	46	;'.'
  1206  0514  3463               	retlw	99	;'c'
  1207  0515  346F               	retlw	111	;'o'
  1208  0516  346E               	retlw	110	;'n'
  1209  0517  346E               	retlw	110	;'n'
  1210  0518  3465               	retlw	101	;'e'
  1211  0519  3463               	retlw	99	;'c'
  1212  051A  3474               	retlw	116	;'t'
  1213  051B  3465               	retlw	101	;'e'
  1214  051C  3464               	retlw	100	;'d'
  1215  051D  3420               	retlw	32	;' '
  1216  051E  346D               	retlw	109	;'m'
  1217  051F  3465               	retlw	101	;'e'
  1218  0520  3420               	retlw	32	;' '
  1219  0521  3474               	retlw	116	;'t'
  1220  0522  346F               	retlw	111	;'o'
  1221  0523  3420               	retlw	32	;' '
  1222  0524  3477               	retlw	119	;'w'
  1223  0525  3465               	retlw	101	;'e'
  1224  0526  3469               	retlw	105	;'i'
  1225  0527  3472               	retlw	114	;'r'
  1226  0528  3464               	retlw	100	;'d'
  1227  0529  3420               	retlw	32	;' '
  1228  052A  3470               	retlw	112	;'p'
  1229  052B  3472               	retlw	114	;'r'
  1230  052C  346F               	retlw	111	;'o'
  1231  052D  3474               	retlw	116	;'t'
  1232  052E  346F               	retlw	111	;'o'
  1233  052F  3474               	retlw	116	;'t'
  1234  0530  3479               	retlw	121	;'y'
  1235  0531  3470               	retlw	112	;'p'
  1236  0532  3465               	retlw	101	;'e'
  1237  0533  3473               	retlw	115	;'s'
  1238  0534  342E               	retlw	46	;'.'
  1239  0535  342E               	retlw	46	;'.'
  1240  0536  342E               	retlw	46	;'.'
  1241  0537  340D               	retlw	13
  1242  0538  340A               	retlw	10
  1243  0539  3400               	retlw	0
  1244                           psect	stringtext
  1245                           	
  1246  053A                     STR_18:	
  1247  053A  3443               	retlw	67	;'C'
  1248  053B  344F               	retlw	79	;'O'
  1249  053C  3455               	retlw	85	;'U'
  1250  053D  344C               	retlw	76	;'L'
  1251  053E  3444               	retlw	68	;'D'
  1252  053F  3420               	retlw	32	;' '
  1253  0540  3459               	retlw	89	;'Y'
  1254  0541  344F               	retlw	79	;'O'
  1255  0542  3455               	retlw	85	;'U'
  1256  0543  3420               	retlw	32	;' '
  1257  0544  3450               	retlw	80	;'P'
  1258  0545  344C               	retlw	76	;'L'
  1259  0546  3445               	retlw	69	;'E'
  1260  0547  3441               	retlw	65	;'A'
  1261  0548  3453               	retlw	83	;'S'
  1262  0549  3445               	retlw	69	;'E'
  1263  054A  3420               	retlw	32	;' '
  1264  054B  344C               	retlw	76	;'L'
  1265  054C  3445               	retlw	69	;'E'
  1266  054D  3441               	retlw	65	;'A'
  1267  054E  3456               	retlw	86	;'V'
  1268  054F  3445               	retlw	69	;'E'
  1269  0550  3420               	retlw	32	;' '
  1270  0551  344D               	retlw	77	;'M'
  1271  0552  3445               	retlw	69	;'E'
  1272  0553  3420               	retlw	32	;' '
  1273  0554  3441               	retlw	65	;'A'
  1274  0555  344C               	retlw	76	;'L'
  1275  0556  344F               	retlw	79	;'O'
  1276  0557  344E               	retlw	78	;'N'
  1277  0558  3445               	retlw	69	;'E'
  1278  0559  343F               	retlw	63	;'?'
  1279  055A  3421               	retlw	33	;'!'
  1280  055B  343F               	retlw	63	;'?'
  1281  055C  3421               	retlw	33	;'!'
  1282  055D  343F               	retlw	63	;'?'
  1283  055E  3421               	retlw	33	;'!'
  1284  055F  3400               	retlw	0
  1285                           psect	stringtext
  1286                           	
  1287  0560                     STR_12:	
  1288  0560  342E               	retlw	46	;'.'
  1289  0561  342E               	retlw	46	;'.'
  1290  0562  3420               	retlw	32	;' '
  1291  0563  3463               	retlw	99	;'c'
  1292  0564  346F               	retlw	111	;'o'
  1293  0565  346E               	retlw	110	;'n'
  1294  0566  3464               	retlw	100	;'d'
  1295  0567  3475               	retlw	117	;'u'
  1296  0568  3463               	retlw	99	;'c'
  1297  0569  3474               	retlw	116	;'t'
  1298  056A  3465               	retlw	101	;'e'
  1299  056B  3464               	retlw	100	;'d'
  1300  056C  3420               	retlw	32	;' '
  1301  056D  3473               	retlw	115	;'s'
  1302  056E  3465               	retlw	101	;'e'
  1303  056F  3476               	retlw	118	;'v'
  1304  0570  3465               	retlw	101	;'e'
  1305  0571  3472               	retlw	114	;'r'
  1306  0572  3461               	retlw	97	;'a'
  1307  0573  346C               	retlw	108	;'l'
  1308  0574  3420               	retlw	32	;' '
  1309  0575  3474               	retlw	116	;'t'
  1310  0576  3465               	retlw	101	;'e'
  1311  0577  3473               	retlw	115	;'s'
  1312  0578  3474               	retlw	116	;'t'
  1313  0579  3473               	retlw	115	;'s'
  1314  057A  3420               	retlw	32	;' '
  1315  057B  346F               	retlw	111	;'o'
  1316  057C  346E               	retlw	110	;'n'
  1317  057D  3420               	retlw	32	;' '
  1318  057E  346D               	retlw	109	;'m'
  1319  057F  3465               	retlw	101	;'e'
  1320  0580  342E               	retlw	46	;'.'
  1321  0581  342E               	retlw	46	;'.'
  1322  0582  340D               	retlw	13
  1323  0583  340A               	retlw	10
  1324  0584  3400               	retlw	0
  1325                           psect	stringtext
  1326                           	
  1327  0585                     STR_8:	
  1328  0585  340A               	retlw	10
  1329  0586  340A               	retlw	10
  1330  0587  3448               	retlw	72	;'H'
  1331  0588  3469               	retlw	105	;'i'
  1332  0589  3474               	retlw	116	;'t'
  1333  058A  3420               	retlw	32	;' '
  1334  058B  3461               	retlw	97	;'a'
  1335  058C  346E               	retlw	110	;'n'
  1336  058D  3479               	retlw	121	;'y'
  1337  058E  3420               	retlw	32	;' '
  1338  058F  346B               	retlw	107	;'k'
  1339  0590  3465               	retlw	101	;'e'
  1340  0591  3479               	retlw	121	;'y'
  1341  0592  3420               	retlw	32	;' '
  1342  0593  3474               	retlw	116	;'t'
  1343  0594  346F               	retlw	111	;'o'
  1344  0595  3420               	retlw	32	;' '
  1345  0596  3472               	retlw	114	;'r'
  1346  0597  3465               	retlw	101	;'e'
  1347  0598  3461               	retlw	97	;'a'
  1348  0599  3464               	retlw	100	;'d'
  1349  059A  3420               	retlw	32	;' '
  1350  059B  3466               	retlw	102	;'f'
  1351  059C  3472               	retlw	114	;'r'
  1352  059D  346F               	retlw	111	;'o'
  1353  059E  346D               	retlw	109	;'m'
  1354  059F  3420               	retlw	32	;' '
  1355  05A0  3445               	retlw	69	;'E'
  1356  05A1  3445               	retlw	69	;'E'
  1357  05A2  3450               	retlw	80	;'P'
  1358  05A3  3452               	retlw	82	;'R'
  1359  05A4  344F               	retlw	79	;'O'
  1360  05A5  344D               	retlw	77	;'M'
  1361  05A6  342E               	retlw	46	;'.'
  1362  05A7  340A               	retlw	10
  1363  05A8  340A               	retlw	10
  1364  05A9  3400               	retlw	0
  1365                           psect	stringtext
  1366                           	
  1367  05AA                     STR_16:	
  1368  05AA  346C               	retlw	108	;'l'
  1369  05AB  3465               	retlw	101	;'e'
  1370  05AC  3474               	retlw	116	;'t'
  1371  05AD  3420               	retlw	32	;' '
  1372  05AE  346D               	retlw	109	;'m'
  1373  05AF  3465               	retlw	101	;'e'
  1374  05B0  3420               	retlw	32	;' '
  1375  05B1  3474               	retlw	116	;'t'
  1376  05B2  3461               	retlw	97	;'a'
  1377  05B3  346C               	retlw	108	;'l'
  1378  05B4  346B               	retlw	107	;'k'
  1379  05B5  3420               	retlw	32	;' '
  1380  05B6  3449               	retlw	73	;'I'
  1381  05B7  3432               	retlw	50	;'2'
  1382  05B8  3443               	retlw	67	;'C'
  1383  05B9  342C               	retlw	44	;','
  1384  05BA  3420               	retlw	32	;' '
  1385  05BB  3453               	retlw	83	;'S'
  1386  05BC  3450               	retlw	80	;'P'
  1387  05BD  3449               	retlw	73	;'I'
  1388  05BE  342C               	retlw	44	;','
  1389  05BF  3420               	retlw	32	;' '
  1390  05C0  3455               	retlw	85	;'U'
  1391  05C1  3441               	retlw	65	;'A'
  1392  05C2  3452               	retlw	82	;'R'
  1393  05C3  3454               	retlw	84	;'T'
  1394  05C4  342E               	retlw	46	;'.'
  1395  05C5  342E               	retlw	46	;'.'
  1396  05C6  342E               	retlw	46	;'.'
  1397  05C7  342E               	retlw	46	;'.'
  1398  05C8  342E               	retlw	46	;'.'
  1399  05C9  342E               	retlw	46	;'.'
  1400  05CA  340D               	retlw	13
  1401  05CB  340A               	retlw	10
  1402  05CC  3400               	retlw	0
  1403                           psect	stringtext
  1404                           	
  1405  05CD                     STR_10:	
  1406  05CD  3449               	retlw	73	;'I'
  1407  05CE  3427               	retlw	39	;'''
  1408  05CF  346D               	retlw	109	;'m'
  1409  05D0  3420               	retlw	32	;' '
  1410  05D1  3468               	retlw	104	;'h'
  1411  05D2  3461               	retlw	97	;'a'
  1412  05D3  3470               	retlw	112	;'p'
  1413  05D4  3470               	retlw	112	;'p'
  1414  05D5  3479               	retlw	121	;'y'
  1415  05D6  3420               	retlw	32	;' '
  1416  05D7  3474               	retlw	116	;'t'
  1417  05D8  346F               	retlw	111	;'o'
  1418  05D9  3420               	retlw	32	;' '
  1419  05DA  3474               	retlw	116	;'t'
  1420  05DB  3465               	retlw	101	;'e'
  1421  05DC  346C               	retlw	108	;'l'
  1422  05DD  346C               	retlw	108	;'l'
  1423  05DE  3420               	retlw	32	;' '
  1424  05DF  3479               	retlw	121	;'y'
  1425  05E0  346F               	retlw	111	;'o'
  1426  05E1  3475               	retlw	117	;'u'
  1427  05E2  3420               	retlw	32	;' '
  1428  05E3  346D               	retlw	109	;'m'
  1429  05E4  3479               	retlw	121	;'y'
  1430  05E5  3420               	retlw	32	;' '
  1431  05E6  3473               	retlw	115	;'s'
  1432  05E7  3474               	retlw	116	;'t'
  1433  05E8  346F               	retlw	111	;'o'
  1434  05E9  3472               	retlw	114	;'r'
  1435  05EA  3479               	retlw	121	;'y'
  1436  05EB  340D               	retlw	13
  1437  05EC  340A               	retlw	10
  1438  05ED  3400               	retlw	0
  1439                           psect	stringtext
  1440                           	
  1441  05EE                     STR_9:	
  1442  05EE  3448               	retlw	72	;'H'
  1443  05EF  3465               	retlw	101	;'e'
  1444  05F0  346C               	retlw	108	;'l'
  1445  05F1  346C               	retlw	108	;'l'
  1446  05F2  346F               	retlw	111	;'o'
  1447  05F3  342C               	retlw	44	;','
  1448  05F4  3420               	retlw	32	;' '
  1449  05F5  346E               	retlw	110	;'n'
  1450  05F6  3469               	retlw	105	;'i'
  1451  05F7  3463               	retlw	99	;'c'
  1452  05F8  3465               	retlw	101	;'e'
  1453  05F9  3420               	retlw	32	;' '
  1454  05FA  346F               	retlw	111	;'o'
  1455  05FB  3466               	retlw	102	;'f'
  1456  05FC  3420               	retlw	32	;' '
  1457  05FD  3479               	retlw	121	;'y'
  1458  05FE  346F               	retlw	111	;'o'
  1459  05FF  3475               	retlw	117	;'u'
  1460  0600  3420               	retlw	32	;' '
  1461  0601  3474               	retlw	116	;'t'
  1462  0602  346F               	retlw	111	;'o'
  1463  0603  3420               	retlw	32	;' '
  1464  0604  3464               	retlw	100	;'d'
  1465  0605  3472               	retlw	114	;'r'
  1466  0606  346F               	retlw	111	;'o'
  1467  0607  3470               	retlw	112	;'p'
  1468  0608  3420               	retlw	32	;' '
  1469  0609  3462               	retlw	98	;'b'
  1470  060A  3479               	retlw	121	;'y'
  1471  060B  340D               	retlw	13
  1472  060C  340A               	retlw	10
  1473  060D  3400               	retlw	0
  1474                           psect	stringtext
  1475                           	
  1476  060E                     STR_7:	
  1477  060E  340A               	retlw	10
  1478  060F  340A               	retlw	10
  1479  0610  3445               	retlw	69	;'E'
  1480  0611  346E               	retlw	110	;'n'
  1481  0612  3474               	retlw	116	;'t'
  1482  0613  3465               	retlw	101	;'e'
  1483  0614  3472               	retlw	114	;'r'
  1484  0615  3420               	retlw	32	;' '
  1485  0616  3474               	retlw	116	;'t'
  1486  0617  3468               	retlw	104	;'h'
  1487  0618  3465               	retlw	101	;'e'
  1488  0619  3420               	retlw	32	;' '
  1489  061A  3450               	retlw	80	;'P'
  1490  061B  3457               	retlw	87	;'W'
  1491  061C  344D               	retlw	77	;'M'
  1492  061D  3420               	retlw	32	;' '
  1493  061E  3444               	retlw	68	;'D'
  1494  061F  3475               	retlw	117	;'u'
  1495  0620  3474               	retlw	116	;'t'
  1496  0621  3479               	retlw	121	;'y'
  1497  0622  3420               	retlw	32	;' '
  1498  0623  3443               	retlw	67	;'C'
  1499  0624  3479               	retlw	121	;'y'
  1500  0625  3463               	retlw	99	;'c'
  1501  0626  346C               	retlw	108	;'l'
  1502  0627  3465               	retlw	101	;'e'
  1503  0628  343A               	retlw	58	;':'
  1504  0629  3420               	retlw	32	;' '
  1505  062A  3400               	retlw	0
  1506                           psect	stringtext
  1507                           	
  1508  062B                     STR_6:	
  1509  062B  340A               	retlw	10
  1510  062C  340A               	retlw	10
  1511  062D  3445               	retlw	69	;'E'
  1512  062E  346E               	retlw	110	;'n'
  1513  062F  3474               	retlw	116	;'t'
  1514  0630  3465               	retlw	101	;'e'
  1515  0631  3472               	retlw	114	;'r'
  1516  0632  3420               	retlw	32	;' '
  1517  0633  3474               	retlw	116	;'t'
  1518  0634  3468               	retlw	104	;'h'
  1519  0635  3465               	retlw	101	;'e'
  1520  0636  3420               	retlw	32	;' '
  1521  0637  3450               	retlw	80	;'P'
  1522  0638  3457               	retlw	87	;'W'
  1523  0639  344D               	retlw	77	;'M'
  1524  063A  3420               	retlw	32	;' '
  1525  063B  3450               	retlw	80	;'P'
  1526  063C  3465               	retlw	101	;'e'
  1527  063D  3472               	retlw	114	;'r'
  1528  063E  3469               	retlw	105	;'i'
  1529  063F  346F               	retlw	111	;'o'
  1530  0640  3464               	retlw	100	;'d'
  1531  0641  343A               	retlw	58	;':'
  1532  0642  3420               	retlw	32	;' '
  1533  0643  3400               	retlw	0
  1534                           psect	stringtext
  1535                           	
  1536  0644                     STR_15:	
  1537  0644  3475               	retlw	117	;'u'
  1538  0645  3473               	retlw	115	;'s'
  1539  0646  3465               	retlw	101	;'e'
  1540  0647  3464               	retlw	100	;'d'
  1541  0648  3420               	retlw	32	;' '
  1542  0649  3448               	retlw	72	;'H'
  1543  064A  3469               	retlw	105	;'i'
  1544  064B  345A               	retlw	90	;'Z'
  1545  064C  3420               	retlw	32	;' '
  1546  064D  346F               	retlw	111	;'o'
  1547  064E  346E               	retlw	110	;'n'
  1548  064F  3420               	retlw	32	;' '
  1549  0650  346D               	retlw	109	;'m'
  1550  0651  3465               	retlw	101	;'e'
  1551  0652  342E               	retlw	46	;'.'
  1552  0653  342E               	retlw	46	;'.'
  1553  0654  342E               	retlw	46	;'.'
  1554  0655  342E               	retlw	46	;'.'
  1555  0656  342E               	retlw	46	;'.'
  1556  0657  342E               	retlw	46	;'.'
  1557  0658  342E               	retlw	46	;'.'
  1558  0659  340D               	retlw	13
  1559  065A  340A               	retlw	10
  1560  065B  3400               	retlw	0
  1561                           psect	stringtext
  1562                           	
  1563  065C                     STR_14:	
  1564  065C  3461               	retlw	97	;'a'
  1565  065D  3462               	retlw	98	;'b'
  1566  065E  3475               	retlw	117	;'u'
  1567  065F  3473               	retlw	115	;'s'
  1568  0660  3465               	retlw	101	;'e'
  1569  0661  3464               	retlw	100	;'d'
  1570  0662  3420               	retlw	32	;' '
  1571  0663  346D               	retlw	109	;'m'
  1572  0664  3465               	retlw	101	;'e'
  1573  0665  3420               	retlw	32	;' '
  1574  0666  3477               	retlw	119	;'w'
  1575  0667  3469               	retlw	105	;'i'
  1576  0668  3474               	retlw	116	;'t'
  1577  0669  3468               	retlw	104	;'h'
  1578  066A  3420               	retlw	32	;' '
  1579  066B  3435               	retlw	53	;'5'
  1580  066C  3456               	retlw	86	;'V'
  1581  066D  342E               	retlw	46	;'.'
  1582  066E  342E               	retlw	46	;'.'
  1583  066F  342E               	retlw	46	;'.'
  1584  0670  342E               	retlw	46	;'.'
  1585  0671  340D               	retlw	13
  1586  0672  340A               	retlw	10
  1587  0673  3400               	retlw	0
  1588                           psect	stringtext
  1589                           	
  1590  0674                     STR_5:	
  1591  0674  340A               	retlw	10
  1592  0675  340A               	retlw	10
  1593  0676  3454               	retlw	84	;'T'
  1594  0677  3465               	retlw	101	;'e'
  1595  0678  346D               	retlw	109	;'m'
  1596  0679  3470               	retlw	112	;'p'
  1597  067A  3420               	retlw	32	;' '
  1598  067B  3473               	retlw	115	;'s'
  1599  067C  3465               	retlw	101	;'e'
  1600  067D  346E               	retlw	110	;'n'
  1601  067E  3473               	retlw	115	;'s'
  1602  067F  346F               	retlw	111	;'o'
  1603  0680  3472               	retlw	114	;'r'
  1604  0681  3420               	retlw	32	;' '
  1605  0682  3473               	retlw	115	;'s'
  1606  0683  3465               	retlw	101	;'e'
  1607  0684  346C               	retlw	108	;'l'
  1608  0685  3465               	retlw	101	;'e'
  1609  0686  3463               	retlw	99	;'c'
  1610  0687  3474               	retlw	116	;'t'
  1611  0688  3465               	retlw	101	;'e'
  1612  0689  3464               	retlw	100	;'d'
  1613  068A  3400               	retlw	0
  1614                           psect	stringtext
  1615                           	
  1616  068B                     STR_2:	
  1617  068B  340A               	retlw	10
  1618  068C  340A               	retlw	10
  1619  068D  3463               	retlw	99	;'c'
  1620  068E  3468               	retlw	104	;'h'
  1621  068F  3461               	retlw	97	;'a'
  1622  0690  346E               	retlw	110	;'n'
  1623  0691  346E               	retlw	110	;'n'
  1624  0692  3465               	retlw	101	;'e'
  1625  0693  346C               	retlw	108	;'l'
  1626  0694  3420               	retlw	32	;' '
  1627  0695  3431               	retlw	49	;'1'
  1628  0696  3420               	retlw	32	;' '
  1629  0697  3473               	retlw	115	;'s'
  1630  0698  3465               	retlw	101	;'e'
  1631  0699  346C               	retlw	108	;'l'
  1632  069A  3465               	retlw	101	;'e'
  1633  069B  3463               	retlw	99	;'c'
  1634  069C  3474               	retlw	116	;'t'
  1635  069D  3465               	retlw	101	;'e'
  1636  069E  3464               	retlw	100	;'d'
  1637  069F  3400               	retlw	0
  1638                           psect	stringtext
  1639                           	
  1640  06A0                     STR_3:	
  1641  06A0  340A               	retlw	10
  1642  06A1  340A               	retlw	10
  1643  06A2  3463               	retlw	99	;'c'
  1644  06A3  3468               	retlw	104	;'h'
  1645  06A4  3461               	retlw	97	;'a'
  1646  06A5  346E               	retlw	110	;'n'
  1647  06A6  346E               	retlw	110	;'n'
  1648  06A7  3465               	retlw	101	;'e'
  1649  06A8  346C               	retlw	108	;'l'
  1650  06A9  3420               	retlw	32	;' '
  1651  06AA  3432               	retlw	50	;'2'
  1652  06AB  3420               	retlw	32	;' '
  1653  06AC  3473               	retlw	115	;'s'
  1654  06AD  3465               	retlw	101	;'e'
  1655  06AE  346C               	retlw	108	;'l'
  1656  06AF  3465               	retlw	101	;'e'
  1657  06B0  3463               	retlw	99	;'c'
  1658  06B1  3474               	retlw	116	;'t'
  1659  06B2  3465               	retlw	101	;'e'
  1660  06B3  3464               	retlw	100	;'d'
  1661  06B4  3400               	retlw	0
  1662                           psect	stringtext
  1663                           	
  1664  06B5                     STR_4:	
  1665  06B5  340A               	retlw	10
  1666  06B6  340A               	retlw	10
  1667  06B7  3463               	retlw	99	;'c'
  1668  06B8  3468               	retlw	104	;'h'
  1669  06B9  3461               	retlw	97	;'a'
  1670  06BA  346E               	retlw	110	;'n'
  1671  06BB  346E               	retlw	110	;'n'
  1672  06BC  3465               	retlw	101	;'e'
  1673  06BD  346C               	retlw	108	;'l'
  1674  06BE  3420               	retlw	32	;' '
  1675  06BF  3433               	retlw	51	;'3'
  1676  06C0  3420               	retlw	32	;' '
  1677  06C1  3473               	retlw	115	;'s'
  1678  06C2  3465               	retlw	101	;'e'
  1679  06C3  346C               	retlw	108	;'l'
  1680  06C4  3465               	retlw	101	;'e'
  1681  06C5  3463               	retlw	99	;'c'
  1682  06C6  3474               	retlw	116	;'t'
  1683  06C7  3465               	retlw	101	;'e'
  1684  06C8  3464               	retlw	100	;'d'
  1685  06C9  3400               	retlw	0
  1686                           psect	stringtext
  1687                           	
  1688  06CA                     STR_1:	
  1689  06CA  340A               	retlw	10
  1690  06CB  340A               	retlw	10
  1691  06CC  3441               	retlw	65	;'A'
  1692  06CD  3444               	retlw	68	;'D'
  1693  06CE  3443               	retlw	67	;'C'
  1694  06CF  3420               	retlw	32	;' '
  1695  06D0  3476               	retlw	118	;'v'
  1696  06D1  3461               	retlw	97	;'a'
  1697  06D2  346C               	retlw	108	;'l'
  1698  06D3  3475               	retlw	117	;'u'
  1699  06D4  3465               	retlw	101	;'e'
  1700  06D5  343A               	retlw	58	;':'
  1701  06D6  3420               	retlw	32	;' '
  1702  06D7  3400               	retlw	0
  1703                           psect	stringtext
  1704                           	file	"BP Demoboard v5.as"
  1705                           	line	#
  1706                           psect cinit,class=CODE,delta=2
  1707                           global start_initialization
  1708  15A7                     start_initialization:
  1709                           
  1710  22F0                     _eeBuf  equ     8944	;BIGRAM
  1711                           psect	bssCOMMON,class=COMMON,space=1
  1712                           global __pbssCOMMON
  1713  007A                     __pbssCOMMON:
  1714  007A                     _rtail:
  1715  007A                            ds      1
  1716                           
  1717                           psect	bssBANK0,class=BANK0,space=1
  1718                           global __pbssBANK0
  1719  0053                     __pbssBANK0:
  1720  0053                     _ringbuff:
  1721  0053                            ds      16
  1722                           
  1723  0063                     _PWMduty:
  1724  0063                            ds      1
  1725                           
  1726  0064                     _PWMperiod:
  1727  0064                            ds      1
  1728                           
  1729  0065                     _mode_device:
  1730  0065                            ds      1
  1731                           
  1732  0066                     _mode_protocol:
  1733  0066                            ds      1
  1734                           
  1735  0067                     _rhead:
  1736  0067                            ds      1
  1737                           
  1738                           psect	dataBANK0,class=BANK0,space=1
  1739                           global __pdataBANK0
  1740  0020                     __pdataBANK0:
  1741                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  1742                           	line	36
  1743  0020                     _protos:
  1744  0020                            ds      16
  1745                           
  1746                           psect	dataBANK0
  1747                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\./uart.h"
  1748                           	line	49
  1749  0030                     _msgMenu:
  1750  0030                            ds      10
  1751                           
  1752                           psect clrtext,class=CODE,delta=2
  1753                           global clear_ram
  1754                           ;	Called with FSR0 containing the base address, and
  1755                           ;	btemp/btemp+1 has the size to clear
  1756  1506                     clear_ram:
  1757  1506  0064               	clrwdt			;clear the watchdog before getting into this loop
  1758  1507                     clrloop:
  1759  1507  0180               	clrf	indf0		;clear RAM location pointed to by FSR
  1760  1508  3101               	addfsr	0,1
  1761  1509  3001               	movlw	1
  1762  150A  02FE               	subwf	btemp,f
  1763  150B  3000               	movlw	0
  1764  150C  3BFF               	subwfb btemp+1,f
  1765  150D  087F               	movf btemp+1,w
  1766  150E  047E               	iorwf btemp,w
  1767  150F  1D03               	skipz
  1768  1510  2D07               	goto clrloop	;have we reached the end yet?
  1769  1511  3400               	retlw	0		;all done for this memory range, return
  1770                           ; Clear objects allocated to BIGRAM
  1771                           psect cinit,class=CODE,delta=2
  1772                           	global __pbssBIGRAM
  1773  15A7  30F0               	movlw	low(__pbssBIGRAM)
  1774  15A8  0084               	movwf	fsr0l
  1775  15A9  3022               	movlw	high(__pbssBIGRAM)
  1776  15AA  0085               	movwf	fsr0h
  1777  15AB  3000               	movlw	low(0100h)
  1778  15AC  00FE               	movwf	btemp
  1779  15AD  3001               	movlw	high(0100h)
  1780  15AE  00FF               	movwf	btemp+1
  1781  15AF  3195  2506  3195   	fcall	clear_ram
  1782                           ; Clear objects allocated to COMMON
  1783                           psect cinit,class=CODE,delta=2
  1784                           	global __pbssCOMMON
  1785  15B2  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
  1786                           ; Clear objects allocated to BANK0
  1787                           psect cinit,class=CODE,delta=2
  1788                           	global __pbssBANK0
  1789  15B3  3053               	movlw	low(__pbssBANK0)
  1790  15B4  0084               	movwf	fsr0l
  1791  15B5  3000               	movlw	high(__pbssBANK0)
  1792  15B6  0085               	movwf	fsr0h
  1793  15B7  3015               	movlw	low(015h)
  1794  15B8  00FE               	movwf	btemp
  1795  15B9  3000               	movlw	high(015h)
  1796  15BA  00FF               	movwf	btemp+1
  1797  15BB  3195  2506  3195   	fcall	clear_ram
  1798                           psect inittext,class=CODE,delta=2
  1799                           global init_ram,btemp
  1800  14FA                     init_ram:
  1801  14FA  00FE               	movwf btemp,f
  1802  14FB                     initloop:
  1803  14FB  0012               	moviw fsr0++
  1804  14FC  001E               	movwi fsr1++
  1805  14FD  3001               	movlw 1
  1806  14FE  02FE               subwf btemp,f
  1807  14FF  3000               movlw 0
  1808  1500  3BFF               subwfb btemp+1,f
  1809  1501  087F               	movf btemp+1,w
  1810  1502  047E               	iorwf btemp,w
  1811  1503  1D03               	skipz
  1812  1504  2CFB               	goto initloop
  1813  1505  3400               	retlw 0
  1814                           ; Initialize objects allocated to BANK0
  1815                           	global __pidataBANK0,__pdataBANK0
  1816                           psect cinit,class=CODE,delta=2
  1817  15BE  30E5               	movlw low(__pidataBANK0)
  1818  15BF  0084               	movwf fsr0l
  1819  15C0  3080               	movlw high(__pidataBANK0)|80h
  1820  15C1  0085               	movwf fsr0h
  1821  15C2  3020               	movlw low(__pdataBANK0)
  1822  15C3  0086               	movwf fsr1l
  1823  15C4  3000               	movlw high(__pdataBANK0)
  1824  15C5  0087               	movwf fsr1h
  1825  15C6  3000               	movlw high(01Ah)
  1826  15C7  00FF               	movwf btemp+1
  1827  15C8  301A               	movlw low(01Ah)
  1828  15C9  3194  24FA  3195   	fcall init_ram
  1829                           psect cinit,class=CODE,delta=2
  1830                           global end_of_initialization
  1831                           
  1832                           ;End of C runtime variable initialization code
  1833                           
  1834  15CC                     end_of_initialization:
  1835  15CC  0020               movlb 0
  1836  15CD  3181  2917         ljmp _main	;jump to C main() function
  1837                           psect	cstackCOMMON,class=COMMON,space=1
  1838                           global __pcstackCOMMON
  1839  0070                     __pcstackCOMMON:
  1840                           	global	?_nullfunc1
  1841  0070                     ?_nullfunc1:	; 0 bytes @ 0x0
  1842                           	global	?_SPIADCworker
  1843  0070                     ?_SPIADCworker:	; 0 bytes @ 0x0
  1844                           	global	?_SPIDACworker
  1845  0070                     ?_SPIDACworker:	; 0 bytes @ 0x0
  1846                           	global	?_SPIEEworker
  1847  0070                     ?_SPIEEworker:	; 0 bytes @ 0x0
  1848                           	global	?_SPIPWMworker
  1849  0070                     ?_SPIPWMworker:	; 0 bytes @ 0x0
  1850                           	global	?_UARTworker
  1851  0070                     ?_UARTworker:	; 0 bytes @ 0x0
  1852                           	global	?_I2CADCworker
  1853  0070                     ?_I2CADCworker:	; 0 bytes @ 0x0
  1854                           	global	?_I2CDACworker
  1855  0070                     ?_I2CDACworker:	; 0 bytes @ 0x0
  1856                           	global	?_I2CEEworker
  1857  0070                     ?_I2CEEworker:	; 0 bytes @ 0x0
  1858                           	global	?_I2CPWMworker
  1859  0070                     ?_I2CPWMworker:	; 0 bytes @ 0x0
  1860                           	global	?_init
  1861  0070                     ?_init:	; 0 bytes @ 0x0
  1862                           	global	?_doEE
  1863  0070                     ?_doEE:	; 0 bytes @ 0x0
  1864                           	global	?_initSPI
  1865  0070                     ?_initSPI:	; 0 bytes @ 0x0
  1866                           	global	?_initI2C
  1867  0070                     ?_initI2C:	; 0 bytes @ 0x0
  1868                           	global	?_initUART
  1869  0070                     ?_initUART:	; 0 bytes @ 0x0
  1870                           	global	?_enableTS
  1871  0070                     ?_enableTS:	; 0 bytes @ 0x0
  1872                           	global	?_I2CWrite
  1873  0070                     ?_I2CWrite:	; 0 bytes @ 0x0
  1874                           	global	?_enableDAC
  1875  0070                     ?_enableDAC:	; 0 bytes @ 0x0
  1876                           	global	?_setDAC
  1877  0070                     ?_setDAC:	; 0 bytes @ 0x0
  1878                           	global	?_enablePWM
  1879  0070                     ?_enablePWM:	; 0 bytes @ 0x0
  1880                           	global	?_setPeriod
  1881  0070                     ?_setPeriod:	; 0 bytes @ 0x0
  1882                           	global	?_setDuty
  1883  0070                     ?_setDuty:	; 0 bytes @ 0x0
  1884                           	global	?_UARTwrite
  1885  0070                     ?_UARTwrite:	; 0 bytes @ 0x0
  1886                           	global	?_UARTwriteDecimal
  1887  0070                     ?_UARTwriteDecimal:	; 0 bytes @ 0x0
  1888                           	global	?_disablePWM
  1889  0070                     ?_disablePWM:	; 0 bytes @ 0x0
  1890                           	global	?_disableDAC
  1891  0070                     ?_disableDAC:	; 0 bytes @ 0x0
  1892                           	global	?_isr
  1893  0070                     ?_isr:	; 0 bytes @ 0x0
  1894                           	global	??_isr
  1895  0070                     ??_isr:	; 0 bytes @ 0x0
  1896                           	global	?_EEPROMread
  1897  0070                     ?_EEPROMread:	; 1 bytes @ 0x0
  1898                           	global	?_isEE
  1899  0070                     ?_isEE:	; 1 bytes @ 0x0
  1900                           	global	?_UARTread
  1901  0070                     ?_UARTread:	; 1 bytes @ 0x0
  1902                           	global	?_UARTcharFromString
  1903  0070                     ?_UARTcharFromString:	; 1 bytes @ 0x0
  1904                           	global	?_startADC16
  1905  0070                     ?_startADC16:	; 2 bytes @ 0x0
  1906                           	global	?_main
  1907  0070                     ?_main:	; 2 bytes @ 0x0
  1908  0070                     	ds	3
  1909                           	global	??_nullfunc1
  1910  0073                     ??_nullfunc1:	; 0 bytes @ 0x3
  1911                           	global	??_EEPROMread
  1912  0073                     ??_EEPROMread:	; 0 bytes @ 0x3
  1913                           	global	??_isEE
  1914  0073                     ??_isEE:	; 0 bytes @ 0x3
  1915                           	global	??_initSPI
  1916  0073                     ??_initSPI:	; 0 bytes @ 0x3
  1917                           	global	??_initI2C
  1918  0073                     ??_initI2C:	; 0 bytes @ 0x3
  1919                           	global	??_initUART
  1920  0073                     ??_initUART:	; 0 bytes @ 0x3
  1921                           	global	??_enableTS
  1922  0073                     ??_enableTS:	; 0 bytes @ 0x3
  1923                           	global	??_I2CWrite
  1924  0073                     ??_I2CWrite:	; 0 bytes @ 0x3
  1925                           	global	??_startADC16
  1926  0073                     ??_startADC16:	; 0 bytes @ 0x3
  1927                           	global	??_enableDAC
  1928  0073                     ??_enableDAC:	; 0 bytes @ 0x3
  1929                           	global	??_setDAC
  1930  0073                     ??_setDAC:	; 0 bytes @ 0x3
  1931                           	global	??_UARTwrite
  1932  0073                     ??_UARTwrite:	; 0 bytes @ 0x3
  1933                           	global	??_UARTread
  1934  0073                     ??_UARTread:	; 0 bytes @ 0x3
  1935                           	global	??_disablePWM
  1936  0073                     ??_disablePWM:	; 0 bytes @ 0x3
  1937                           	global	??_disableDAC
  1938  0073                     ??_disableDAC:	; 0 bytes @ 0x3
  1939                           	global	?___bmul
  1940  0073                     ?___bmul:	; 1 bytes @ 0x3
  1941                           	global	?___lbdiv
  1942  0073                     ?___lbdiv:	; 1 bytes @ 0x3
  1943                           	global	?_getADC
  1944  0073                     ?_getADC:	; 2 bytes @ 0x3
  1945                           	global	?___wmul
  1946  0073                     ?___wmul:	; 2 bytes @ 0x3
  1947                           	global	?___lwdiv
  1948  0073                     ?___lwdiv:	; 2 bytes @ 0x3
  1949                           	global	I2CWrite@c
  1950  0073                     I2CWrite@c:	; 1 bytes @ 0x3
  1951                           	global	UARTwrite@c
  1952  0073                     UARTwrite@c:	; 1 bytes @ 0x3
  1953                           	global	EEPROMread@addr
  1954  0073                     EEPROMread@addr:	; 1 bytes @ 0x3
  1955                           	global	setDAC@dac
  1956  0073                     setDAC@dac:	; 1 bytes @ 0x3
  1957                           	global	___bmul@multiplicand
  1958  0073                     ___bmul@multiplicand:	; 1 bytes @ 0x3
  1959                           	global	___lbdiv@divisor
  1960  0073                     ___lbdiv@divisor:	; 1 bytes @ 0x3
  1961                           	global	___wmul@multiplier
  1962  0073                     ___wmul@multiplier:	; 2 bytes @ 0x3
  1963                           	global	___lwdiv@divisor
  1964  0073                     ___lwdiv@divisor:	; 2 bytes @ 0x3
  1965  0073                     	ds	1
  1966                           	global	??_SPIDACworker
  1967  0074                     ??_SPIDACworker:	; 0 bytes @ 0x4
  1968                           	global	??_I2CDACworker
  1969  0074                     ??_I2CDACworker:	; 0 bytes @ 0x4
  1970                           	global	??_init
  1971  0074                     ??_init:	; 0 bytes @ 0x4
  1972                           	global	?_UARTwriteString
  1973  0074                     ?_UARTwriteString:	; 0 bytes @ 0x4
  1974                           	global	?_teletype
  1975  0074                     ?_teletype:	; 0 bytes @ 0x4
  1976                           	global	??___bmul
  1977  0074                     ??___bmul:	; 0 bytes @ 0x4
  1978                           	global	??___lbdiv
  1979  0074                     ??___lbdiv:	; 0 bytes @ 0x4
  1980                           	global	SPIDACworker@fInst
  1981  0074                     SPIDACworker@fInst:	; 1 bytes @ 0x4
  1982                           	global	UARTread@temp
  1983  0074                     UARTread@temp:	; 1 bytes @ 0x4
  1984                           	global	UARTwriteString@str
  1985  0074                     UARTwriteString@str:	; 2 bytes @ 0x4
  1986                           	global	teletype@s
  1987  0074                     teletype@s:	; 2 bytes @ 0x4
  1988                           	global	startADC16@i
  1989  0074                     startADC16@i:	; 2 bytes @ 0x4
  1990  0074                     	ds	1
  1991                           	global	??_getADC
  1992  0075                     ??_getADC:	; 0 bytes @ 0x5
  1993                           	global	I2CDACworker@temp
  1994  0075                     I2CDACworker@temp:	; 1 bytes @ 0x5
  1995                           	global	SPIDACworker@fb
  1996  0075                     SPIDACworker@fb:	; 1 bytes @ 0x5
  1997                           	global	___bmul@product
  1998  0075                     ___bmul@product:	; 1 bytes @ 0x5
  1999                           	global	___lbdiv@dividend
  2000  0075                     ___lbdiv@dividend:	; 1 bytes @ 0x5
  2001                           	global	___wmul@multiplicand
  2002  0075                     ___wmul@multiplicand:	; 2 bytes @ 0x5
  2003                           	global	___lwdiv@dividend
  2004  0075                     ___lwdiv@dividend:	; 2 bytes @ 0x5
  2005  0075                     	ds	1
  2006                           	global	??_UARTwriteString
  2007  0076                     ??_UARTwriteString:	; 0 bytes @ 0x6
  2008                           	global	??_teletype
  2009  0076                     ??_teletype:	; 0 bytes @ 0x6
  2010                           	global	I2CDACworker@fb
  2011  0076                     I2CDACworker@fb:	; 1 bytes @ 0x6
  2012                           	global	SPIDACworker@bf
  2013  0076                     SPIDACworker@bf:	; 1 bytes @ 0x6
  2014                           	global	startADC16@adc
  2015  0076                     startADC16@adc:	; 1 bytes @ 0x6
  2016                           	global	___bmul@multiplier
  2017  0076                     ___bmul@multiplier:	; 1 bytes @ 0x6
  2018                           	global	___lbdiv@counter
  2019  0076                     ___lbdiv@counter:	; 1 bytes @ 0x6
  2020                           	global	teletype@i
  2021  0076                     teletype@i:	; 2 bytes @ 0x6
  2022  0076                     	ds	1
  2023                           	global	??_I2CADCworker
  2024  0077                     ??_I2CADCworker:	; 0 bytes @ 0x7
  2025                           	global	?_EEPROMwrite
  2026  0077                     ?_EEPROMwrite:	; 0 bytes @ 0x7
  2027                           	global	??___wmul
  2028  0077                     ??___wmul:	; 0 bytes @ 0x7
  2029                           	global	??___lwdiv
  2030  0077                     ??___lwdiv:	; 0 bytes @ 0x7
  2031                           	global	I2CDACworker@token
  2032  0077                     I2CDACworker@token:	; 1 bytes @ 0x7
  2033                           	global	EEPROMwrite@data
  2034  0077                     EEPROMwrite@data:	; 1 bytes @ 0x7
  2035                           	global	___lbdiv@quotient
  2036  0077                     ___lbdiv@quotient:	; 1 bytes @ 0x7
  2037                           	global	___wmul@product
  2038  0077                     ___wmul@product:	; 2 bytes @ 0x7
  2039  0077                     	ds	1
  2040                           	global	??_SPIADCworker
  2041  0078                     ??_SPIADCworker:	; 0 bytes @ 0x8
  2042                           	global	??_doEE
  2043  0078                     ??_doEE:	; 0 bytes @ 0x8
  2044                           	global	??_EEPROMwrite
  2045  0078                     ??_EEPROMwrite:	; 0 bytes @ 0x8
  2046                           	global	??_UARTwriteDecimal
  2047  0078                     ??_UARTwriteDecimal:	; 0 bytes @ 0x8
  2048                           	global	I2CDACworker@command
  2049  0078                     I2CDACworker@command:	; 1 bytes @ 0x8
  2050                           	global	UARTwriteString@i
  2051  0078                     UARTwriteString@i:	; 1 bytes @ 0x8
  2052                           	global	EEPROMwrite@addr
  2053  0078                     EEPROMwrite@addr:	; 1 bytes @ 0x8
  2054  0078                     	ds	1
  2055                           	global	??_SPIPWMworker
  2056  0079                     ??_SPIPWMworker:	; 0 bytes @ 0x9
  2057                           	global	??_I2CPWMworker
  2058  0079                     ??_I2CPWMworker:	; 0 bytes @ 0x9
  2059                           	global	I2CDACworker@dac
  2060  0079                     I2CDACworker@dac:	; 1 bytes @ 0x9
  2061  0079                     	ds	1
  2062                           psect	cstackBANK0,class=BANK0,space=1
  2063                           global __pcstackBANK0
  2064  003A                     __pcstackBANK0:
  2065                           	global	??_SPIEEworker
  2066  003A                     ??_SPIEEworker:	; 0 bytes @ 0x0
  2067                           	global	??_I2CEEworker
  2068  003A                     ??_I2CEEworker:	; 0 bytes @ 0x0
  2069                           	global	??_UARTcharFromString
  2070  003A                     ??_UARTcharFromString:	; 0 bytes @ 0x0
  2071                           	global	I2CADCworker@adcON
  2072  003A                     I2CADCworker@adcON:	; 1 bytes @ 0x0
  2073                           	global	UARTwriteDecimal@c
  2074  003A                     UARTwriteDecimal@c:	; 1 bytes @ 0x0
  2075                           	global	getADC@temp
  2076  003A                     getADC@temp:	; 1 bytes @ 0x0
  2077                           	global	___lwdiv@counter
  2078  003A                     ___lwdiv@counter:	; 1 bytes @ 0x0
  2079  003A                     	ds	1
  2080                           	global	I2CADCworker@temp
  2081  003B                     I2CADCworker@temp:	; 1 bytes @ 0x1
  2082                           	global	UARTwriteDecimal@hC
  2083  003B                     UARTwriteDecimal@hC:	; 1 bytes @ 0x1
  2084                           	global	getADC@i
  2085  003B                     getADC@i:	; 2 bytes @ 0x1
  2086                           	global	___lwdiv@quotient
  2087  003B                     ___lwdiv@quotient:	; 2 bytes @ 0x1
  2088  003B                     	ds	1
  2089                           	global	I2CADCworker@token
  2090  003C                     I2CADCworker@token:	; 1 bytes @ 0x2
  2091                           	global	UARTcharFromString@c
  2092  003C                     UARTcharFromString@c:	; 1 bytes @ 0x2
  2093                           	global	UARTwriteDecimal@d
  2094  003C                     UARTwriteDecimal@d:	; 1 bytes @ 0x2
  2095  003C                     	ds	1
  2096                           	global	??_enablePWM
  2097  003D                     ??_enablePWM:	; 0 bytes @ 0x3
  2098                           	global	??_setPeriod
  2099  003D                     ??_setPeriod:	; 0 bytes @ 0x3
  2100                           	global	??_setDuty
  2101  003D                     ??_setDuty:	; 0 bytes @ 0x3
  2102                           	global	I2CEEworker@temp
  2103  003D                     I2CEEworker@temp:	; 1 bytes @ 0x3
  2104                           	global	I2CADCworker@adc
  2105  003D                     I2CADCworker@adc:	; 1 bytes @ 0x3
  2106                           	global	SPIEEworker@fb2
  2107  003D                     SPIEEworker@fb2:	; 1 bytes @ 0x3
  2108                           	global	UARTcharFromString@outF
  2109  003D                     UARTcharFromString@outF:	; 1 bytes @ 0x3
  2110                           	global	getADC@adc
  2111  003D                     getADC@adc:	; 1 bytes @ 0x3
  2112  003D                     	ds	1
  2113                           	global	I2CEEworker@token
  2114  003E                     I2CEEworker@token:	; 1 bytes @ 0x4
  2115                           	global	I2CADCworker@fb
  2116  003E                     I2CADCworker@fb:	; 1 bytes @ 0x4
  2117                           	global	SPIEEworker@pageIndex
  2118  003E                     SPIEEworker@pageIndex:	; 1 bytes @ 0x4
  2119                           	global	SPIADCworker@fInst
  2120  003E                     SPIADCworker@fInst:	; 1 bytes @ 0x4
  2121                           	global	UARTcharFromString@c1
  2122  003E                     UARTcharFromString@c1:	; 1 bytes @ 0x4
  2123  003E                     	ds	1
  2124                           	global	I2CEEworker@addressed
  2125  003F                     I2CEEworker@addressed:	; 1 bytes @ 0x5
  2126                           	global	I2CADCworker@config
  2127  003F                     I2CADCworker@config:	; 1 bytes @ 0x5
  2128                           	global	SPIEEworker@WIP
  2129  003F                     SPIEEworker@WIP:	; 1 bytes @ 0x5
  2130                           	global	SPIADCworker@bf
  2131  003F                     SPIADCworker@bf:	; 1 bytes @ 0x5
  2132                           	global	UARTcharFromString@rC
  2133  003F                     UARTcharFromString@rC:	; 1 bytes @ 0x5
  2134  003F                     	ds	1
  2135                           	global	I2CEEworker@w
  2136  0040                     I2CEEworker@w:	; 1 bytes @ 0x6
  2137                           	global	SPIEEworker@instruction
  2138  0040                     SPIEEworker@instruction:	; 1 bytes @ 0x6
  2139                           	global	SPIADCworker@chanel
  2140  0040                     SPIADCworker@chanel:	; 1 bytes @ 0x6
  2141                           	global	enablePWM@tempP
  2142  0040                     enablePWM@tempP:	; 2 bytes @ 0x6
  2143  0040                     	ds	1
  2144                           	global	I2CEEworker@i
  2145  0041                     I2CEEworker@i:	; 1 bytes @ 0x7
  2146                           	global	SPIEEworker@fb
  2147  0041                     SPIEEworker@fb:	; 1 bytes @ 0x7
  2148                           	global	SPIADCworker@fb
  2149  0041                     SPIADCworker@fb:	; 1 bytes @ 0x7
  2150                           	global	setDuty@D
  2151  0041                     setDuty@D:	; 1 bytes @ 0x7
  2152                           	global	setPeriod@temp
  2153  0041                     setPeriod@temp:	; 2 bytes @ 0x7
  2154  0041                     	ds	1
  2155                           	global	I2CEEworker@addr
  2156  0042                     I2CEEworker@addr:	; 1 bytes @ 0x8
  2157                           	global	SPIEEworker@bf
  2158  0042                     SPIEEworker@bf:	; 1 bytes @ 0x8
  2159                           	global	setDuty@temp
  2160  0042                     setDuty@temp:	; 2 bytes @ 0x8
  2161  0042                     	ds	1
  2162                           	global	SPIEEworker@WREN
  2163  0043                     SPIEEworker@WREN:	; 1 bytes @ 0x9
  2164                           	global	setPeriod@P
  2165  0043                     setPeriod@P:	; 1 bytes @ 0x9
  2166  0043                     	ds	1
  2167                           	global	??_UARTworker
  2168  0044                     ??_UARTworker:	; 0 bytes @ 0xA
  2169                           	global	I2CPWMworker@temp
  2170  0044                     I2CPWMworker@temp:	; 1 bytes @ 0xA
  2171                           	global	SPIEEworker@token
  2172  0044                     SPIEEworker@token:	; 1 bytes @ 0xA
  2173                           	global	SPIPWMworker@token
  2174  0044                     SPIPWMworker@token:	; 1 bytes @ 0xA
  2175  0044                     	ds	1
  2176                           	global	I2CPWMworker@token
  2177  0045                     I2CPWMworker@token:	; 1 bytes @ 0xB
  2178                           	global	SPIEEworker@addressed
  2179  0045                     SPIEEworker@addressed:	; 1 bytes @ 0xB
  2180                           	global	SPIPWMworker@instruction
  2181  0045                     SPIPWMworker@instruction:	; 1 bytes @ 0xB
  2182  0045                     	ds	1
  2183                           	global	I2CPWMworker@tempP
  2184  0046                     I2CPWMworker@tempP:	; 1 bytes @ 0xC
  2185                           	global	SPIEEworker@w
  2186  0046                     SPIEEworker@w:	; 1 bytes @ 0xC
  2187                           	global	SPIPWMworker@fb
  2188  0046                     SPIPWMworker@fb:	; 1 bytes @ 0xC
  2189                           	global	UARTworker@addr
  2190  0046                     UARTworker@addr:	; 1 bytes @ 0xC
  2191  0046                     	ds	1
  2192                           	global	I2CPWMworker@tempD
  2193  0047                     I2CPWMworker@tempD:	; 1 bytes @ 0xD
  2194                           	global	SPIEEworker@i
  2195  0047                     SPIEEworker@i:	; 1 bytes @ 0xD
  2196                           	global	SPIPWMworker@bf
  2197  0047                     SPIPWMworker@bf:	; 1 bytes @ 0xD
  2198                           	global	UARTworker@helpC
  2199  0047                     UARTworker@helpC:	; 1 bytes @ 0xD
  2200  0047                     	ds	1
  2201                           	global	I2CPWMworker@fD
  2202  0048                     I2CPWMworker@fD:	; 1 bytes @ 0xE
  2203                           	global	SPIEEworker@fInst
  2204  0048                     SPIEEworker@fInst:	; 1 bytes @ 0xE
  2205                           	global	SPIPWMworker@fInst
  2206  0048                     SPIPWMworker@fInst:	; 1 bytes @ 0xE
  2207                           	global	UARTworker@EEaddrF
  2208  0048                     UARTworker@EEaddrF:	; 1 bytes @ 0xE
  2209  0048                     	ds	1
  2210                           	global	I2CPWMworker@fP
  2211  0049                     I2CPWMworker@fP:	; 1 bytes @ 0xF
  2212                           	global	SPIEEworker@STATUS
  2213  0049                     SPIEEworker@STATUS:	; 1 bytes @ 0xF
  2214                           	global	UARTworker@adcc
  2215  0049                     UARTworker@adcc:	; 1 bytes @ 0xF
  2216  0049                     	ds	1
  2217                           	global	I2CPWMworker@addressed
  2218  004A                     I2CPWMworker@addressed:	; 1 bytes @ 0x10
  2219                           	global	SPIEEworker@addr
  2220  004A                     SPIEEworker@addr:	; 1 bytes @ 0x10
  2221                           	global	UARTworker@EEaddr
  2222  004A                     UARTworker@EEaddr:	; 1 bytes @ 0x10
  2223  004A                     	ds	1
  2224                           	global	I2CPWMworker@addr
  2225  004B                     I2CPWMworker@addr:	; 1 bytes @ 0x11
  2226                           	global	UARTworker@mode
  2227  004B                     UARTworker@mode:	; 1 bytes @ 0x11
  2228  004B                     	ds	1
  2229                           	global	UARTworker@c
  2230  004C                     UARTworker@c:	; 1 bytes @ 0x12
  2231  004C                     	ds	1
  2232                           	global	UARTworker@instruction
  2233  004D                     UARTworker@instruction:	; 1 bytes @ 0x13
  2234  004D                     	ds	1
  2235                           	global	??_main
  2236  004E                     ??_main:	; 0 bytes @ 0x14
  2237  004E                     	ds	3
  2238                           	global	main@i
  2239  0051                     main@i:	; 2 bytes @ 0x17
  2240  0051                     	ds	2
  2241 ;;Data sizes: Strings 585, constant 654, data 26, bss 22, persistent 1 stack 0
  2242 ;;Auto spaces:   Size  Autos    Used
  2243 ;; COMMON          14     10      11
  2244 ;; BANK0           80     25      73
  2245 ;; BANK1           80      0       0
  2246 ;; BANK2           80      0       0
  2247 ;; BANK3           80      0       0
  2248 ;; BANK4           80      0       0
  2249 ;; BANK5           80      0       0
  2250 ;; BANK6           80      0       0
  2251 ;; BANK7           80      0       0
  2252 ;; BANK8           80      0       0
  2253 ;; BANK9           32      0       0
  2254 ;; BANK10           0      0       0
  2255 ;; BANK11           0      0       0
  2256 ;; BANK12           0      0       0
  2257                           
  2258 ;;
  2259 ;; Pointer list with targets:
  2260                           
  2261 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  2262 ;;
  2263 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  2264 ;;
  2265 ;; ?_getADC	unsigned int  size(1) Largest target is 0
  2266 ;;
  2267 ;; teletype@s	PTR const unsigned char  size(2) Largest target is 75
  2268 ;;		 -> STR_18(CODE[38]), STR_17(CODE[75]), STR_16(CODE[35]), STR_15(CODE[24]), 
  2269 ;;		 -> STR_14(CODE[24]), STR_13(CODE[39]), STR_12(CODE[37]), STR_11(CODE[57]), 
  2270 ;;		 -> STR_10(CODE[33]), STR_9(CODE[32]), 
  2271 ;;
  2272 ;; UARTwriteString@str	PTR unsigned char  size(2) Largest target is 123
  2273 ;;		 -> msgEEaddr(CODE[28]), STR_8(CODE[37]), msgEEw(CODE[57]), msgDACsetV(CODE[41]), 
  2274 ;;		 -> STR_7(CODE[29]), STR_6(CODE[25]), STR_5(CODE[23]), STR_4(CODE[21]), 
  2275 ;;		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[14]), msgMenu4(CODE[122]), 
  2276 ;;		 -> msgMenu3(CODE[76]), msgMenu2(CODE[93]), msgMenu1(CODE[123]), msgMenu0(CODE[114]), 
  2277 ;;
  2278 ;; S2893_proto$PWMworker	PTR FTN()void  size(1) Largest target is 0
  2279 ;;		 -> I2CPWMworker(), UARTworker(), SPIPWMworker(), nullfunc1(), 
  2280 ;;
  2281 ;; protos.PWMworker	PTR FTN()void  size(1) Largest target is 0
  2282 ;;		 -> I2CPWMworker(), UARTworker(), SPIPWMworker(), nullfunc1(), 
  2283 ;;
  2284 ;; S2893_proto$EEPROMworker	PTR FTN()void  size(1) Largest target is 0
  2285 ;;		 -> I2CEEworker(), UARTworker(), SPIEEworker(), nullfunc1(), 
  2286 ;;
  2287 ;; protos.EEPROMworker	PTR FTN()void  size(1) Largest target is 0
  2288 ;;		 -> I2CEEworker(), UARTworker(), SPIEEworker(), nullfunc1(), 
  2289 ;;
  2290 ;; S2893_proto$DACworker	PTR FTN()void  size(1) Largest target is 0
  2291 ;;		 -> I2CDACworker(), UARTworker(), SPIDACworker(), nullfunc1(), 
  2292 ;;
  2293 ;; protos.DACworker	PTR FTN()void  size(1) Largest target is 0
  2294 ;;		 -> I2CDACworker(), UARTworker(), SPIDACworker(), nullfunc1(), 
  2295 ;;
  2296 ;; S2893_proto$ADCworker	PTR FTN()void  size(1) Largest target is 0
  2297 ;;		 -> I2CADCworker(), UARTworker(), SPIADCworker(), nullfunc1(), 
  2298 ;;
  2299 ;; protos.ADCworker	PTR FTN()void  size(1) Largest target is 0
  2300 ;;		 -> I2CADCworker(), UARTworker(), SPIADCworker(), nullfunc1(), 
  2301 ;;
  2302 ;; msgMenu	PTR const unsigned char [5] size(2) Largest target is 123
  2303 ;;		 -> msgMenu4(CODE[122]), msgMenu3(CODE[76]), msgMenu2(CODE[93]), msgMenu1(CODE[123]), 
  2304 ;;		 -> msgMenu0(CODE[114]), 
  2305 ;;
  2306                           
  2307                           
  2308 ;;
  2309 ;; Critical Paths under _main in COMMON
  2310 ;;
  2311 ;;   _main->_SPIADCworker
  2312 ;;   _main->_I2CDACworker
  2313 ;;   _main->_I2CPWMworker
  2314 ;;   _main->_SPIPWMworker
  2315 ;;   _UARTworker->_UARTwriteDecimal
  2316 ;;   _doEE->_teletype
  2317 ;;   _teletype->_UARTwrite
  2318 ;;   _UARTcharFromString->_EEPROMwrite
  2319 ;;   _UARTwriteDecimal->___lbdiv
  2320 ;;   _UARTwriteString->_UARTwrite
  2321 ;;   _SPIADCworker->_getADC
  2322 ;;   _SPIDACworker->_setDAC
  2323 ;;   _SPIEEworker->_EEPROMwrite
  2324 ;;   _setDuty->___wmul
  2325 ;;   _setPeriod->___wmul
  2326 ;;   _enablePWM->___wmul
  2327 ;;   _I2CDACworker->_setDAC
  2328 ;;   _I2CDACworker->_I2CWrite
  2329 ;;   _I2CADCworker->_startADC16
  2330 ;;   _I2CEEworker->_EEPROMwrite
  2331 ;;   _init->_initI2C
  2332 ;;   _EEPROMwrite->___bmul
  2333 ;;
  2334 ;; Critical Paths under _isr in COMMON
  2335 ;;
  2336 ;;   None.
  2337 ;;
  2338 ;; Critical Paths under _main in BANK0
  2339 ;;
  2340 ;;   _main->_UARTworker
  2341 ;;   _UARTworker->_setPeriod
  2342 ;;   _UARTworker->_setDuty
  2343 ;;   _SPIPWMworker->_setPeriod
  2344 ;;   _SPIPWMworker->_setDuty
  2345 ;;   _I2CPWMworker->_setPeriod
  2346 ;;   _I2CPWMworker->_setDuty
  2347 ;;   _SPIADCworker->_getADC
  2348 ;;   _setDuty->___lwdiv
  2349 ;;   _setPeriod->___lwdiv
  2350 ;;   _enablePWM->___lwdiv
  2351 ;;
  2352 ;; Critical Paths under _isr in BANK0
  2353 ;;
  2354 ;;   None.
  2355 ;;
  2356 ;; Critical Paths under _main in BANK1
  2357 ;;
  2358 ;;   None.
  2359 ;;
  2360 ;; Critical Paths under _isr in BANK1
  2361 ;;
  2362 ;;   None.
  2363 ;;
  2364 ;; Critical Paths under _main in BANK2
  2365 ;;
  2366 ;;   None.
  2367 ;;
  2368 ;; Critical Paths under _isr in BANK2
  2369 ;;
  2370 ;;   None.
  2371 ;;
  2372 ;; Critical Paths under _main in BANK3
  2373 ;;
  2374 ;;   None.
  2375 ;;
  2376 ;; Critical Paths under _isr in BANK3
  2377 ;;
  2378 ;;   None.
  2379 ;;
  2380 ;; Critical Paths under _main in BANK4
  2381 ;;
  2382 ;;   None.
  2383 ;;
  2384 ;; Critical Paths under _isr in BANK4
  2385 ;;
  2386 ;;   None.
  2387 ;;
  2388 ;; Critical Paths under _main in BANK5
  2389 ;;
  2390 ;;   None.
  2391 ;;
  2392 ;; Critical Paths under _isr in BANK5
  2393 ;;
  2394 ;;   None.
  2395 ;;
  2396 ;; Critical Paths under _main in BANK6
  2397 ;;
  2398 ;;   None.
  2399 ;;
  2400 ;; Critical Paths under _isr in BANK6
  2401 ;;
  2402 ;;   None.
  2403 ;;
  2404 ;; Critical Paths under _main in BANK7
  2405 ;;
  2406 ;;   None.
  2407 ;;
  2408 ;; Critical Paths under _isr in BANK7
  2409 ;;
  2410 ;;   None.
  2411 ;;
  2412 ;; Critical Paths under _main in BANK8
  2413 ;;
  2414 ;;   None.
  2415 ;;
  2416 ;; Critical Paths under _isr in BANK8
  2417 ;;
  2418 ;;   None.
  2419 ;;
  2420 ;; Critical Paths under _main in BANK9
  2421 ;;
  2422 ;;   None.
  2423 ;;
  2424 ;; Critical Paths under _isr in BANK9
  2425 ;;
  2426 ;;   None.
  2427 ;;
  2428 ;; Critical Paths under _main in BANK10
  2429 ;;
  2430 ;;   None.
  2431 ;;
  2432 ;; Critical Paths under _isr in BANK10
  2433 ;;
  2434 ;;   None.
  2435 ;;
  2436 ;; Critical Paths under _main in BANK11
  2437 ;;
  2438 ;;   None.
  2439 ;;
  2440 ;; Critical Paths under _isr in BANK11
  2441 ;;
  2442 ;;   None.
  2443 ;;
  2444 ;; Critical Paths under _main in BANK12
  2445 ;;
  2446 ;;   None.
  2447 ;;
  2448 ;; Critical Paths under _isr in BANK12
  2449 ;;
  2450 ;;   None.
  2451                           
  2452 ;;
  2453 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2454 ;;
  2455                           
  2456 ;;
  2457 ;;Call Graph Tables:
  2458 ;;
  2459 ;; ---------------------------------------------------------------------------------
  2460 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2461 ;; ---------------------------------------------------------------------------------
  2462 ;; (0) _main                                                 5     5      0    9427
  2463 ;;                                             20 BANK0      5     5      0
  2464 ;;                               _init
  2465 ;;                         _EEPROMread
  2466 ;;                               _isEE
  2467 ;;                               _doEE
  2468 ;;                       _I2CADCworker
  2469 ;;                         _UARTworker
  2470 ;;                       _SPIADCworker
  2471 ;;                          _nullfunc1
  2472 ;;                        _I2CEEworker
  2473 ;;                        _SPIEEworker
  2474 ;;                       _I2CDACworker
  2475 ;;                       _SPIDACworker
  2476 ;;                       _I2CPWMworker
  2477 ;;                       _SPIPWMworker
  2478 ;; ---------------------------------------------------------------------------------
  2479 ;; (1) _UARTworker                                          10    10      0    3869
  2480 ;;                                             10 BANK0     10    10      0
  2481 ;;                           _initUART
  2482 ;;                    _UARTwriteString
  2483 ;;                          _UARTwrite
  2484 ;;                           _UARTread
  2485 ;;                          _enablePWM
  2486 ;;                          _enableDAC
  2487 ;;                             _getADC
  2488 ;;                   _UARTwriteDecimal
  2489 ;;                 _UARTcharFromString
  2490 ;;                          _setPeriod
  2491 ;;                            _setDuty
  2492 ;;                         _disablePWM
  2493 ;;                             _setDAC
  2494 ;;                         _disableDAC
  2495 ;;                        _EEPROMwrite
  2496 ;;                         _EEPROMread
  2497 ;; ---------------------------------------------------------------------------------
  2498 ;; (1) _SPIPWMworker                                         6     6      0    1713
  2499 ;;                                              9 COMMON     1     1      0
  2500 ;;                                             10 BANK0      5     5      0
  2501 ;;                            _initSPI
  2502 ;;                          _enablePWM
  2503 ;;                          _setPeriod
  2504 ;;                            _setDuty
  2505 ;; ---------------------------------------------------------------------------------
  2506 ;; (1) _I2CPWMworker                                        11    11      0    1697
  2507 ;;                                              9 COMMON     1     1      0
  2508 ;;                                             10 BANK0      8     8      0
  2509 ;;                          _enablePWM
  2510 ;;                          _setPeriod
  2511 ;;                            _setDuty
  2512 ;; ---------------------------------------------------------------------------------
  2513 ;; (1) _doEE                                                 0     0      0     113
  2514 ;;                           _teletype
  2515 ;; ---------------------------------------------------------------------------------
  2516 ;; (2) _teletype                                             5     3      2     113
  2517 ;;                                              4 COMMON     4     2      2
  2518 ;;                          _UARTwrite
  2519 ;; ---------------------------------------------------------------------------------
  2520 ;; (2) _UARTcharFromString                                   6     6      0     372
  2521 ;;                                              0 BANK0      6     6      0
  2522 ;;                           _UARTread
  2523 ;;                          _UARTwrite
  2524 ;;                             ___bmul
  2525 ;;                        _EEPROMwrite (ARG)
  2526 ;; ---------------------------------------------------------------------------------
  2527 ;; (2) _UARTwriteDecimal                                     5     5      0     434
  2528 ;;                                              8 COMMON     2     2      0
  2529 ;;                                              0 BANK0      3     3      0
  2530 ;;                            ___lbdiv
  2531 ;;                          _UARTwrite
  2532 ;;                             ___bmul
  2533 ;; ---------------------------------------------------------------------------------
  2534 ;; (2) _UARTwriteString                                      5     3      2     112
  2535 ;;                                              4 COMMON     5     3      2
  2536 ;;                          _UARTwrite
  2537 ;; ---------------------------------------------------------------------------------
  2538 ;; (1) _SPIADCworker                                         8     8      0     237
  2539 ;;                                              8 COMMON     2     2      0
  2540 ;;                                              4 BANK0      4     4      0
  2541 ;;                            _initSPI
  2542 ;;                             _getADC
  2543 ;; ---------------------------------------------------------------------------------
  2544 ;; (1) _SPIDACworker                                         5     5      0      73
  2545 ;;                                              4 COMMON     3     3      0
  2546 ;;                            _initSPI
  2547 ;;                          _enableDAC
  2548 ;;                             _setDAC
  2549 ;; ---------------------------------------------------------------------------------
  2550 ;; (1) _SPIEEworker                                         17    17      0     795
  2551 ;;                                              0 BANK0     17    17      0
  2552 ;;                            _initSPI
  2553 ;;                        _EEPROMwrite
  2554 ;; ---------------------------------------------------------------------------------
  2555 ;; (2) _setDuty                                              7     7      0     531
  2556 ;;                                              3 BANK0      7     7      0
  2557 ;;                             ___wmul
  2558 ;;                            ___lwdiv
  2559 ;; ---------------------------------------------------------------------------------
  2560 ;; (2) _setPeriod                                            7     7      0     525
  2561 ;;                                              3 BANK0      7     7      0
  2562 ;;                             ___wmul
  2563 ;;                            ___lwdiv
  2564 ;; ---------------------------------------------------------------------------------
  2565 ;; (2) _enablePWM                                            5     5      0     367
  2566 ;;                                              3 BANK0      5     5      0
  2567 ;;                             ___wmul
  2568 ;;                            ___lwdiv
  2569 ;; ---------------------------------------------------------------------------------
  2570 ;; (1) _I2CDACworker                                         6     6      0     212
  2571 ;;                                              4 COMMON     6     6      0
  2572 ;;                          _enableDAC
  2573 ;;                             _setDAC
  2574 ;;                           _I2CWrite
  2575 ;; ---------------------------------------------------------------------------------
  2576 ;; (1) _I2CADCworker                                         7     7      0     240
  2577 ;;                                              7 COMMON     1     1      0
  2578 ;;                                              0 BANK0      6     6      0
  2579 ;;                           _enableTS
  2580 ;;                           _I2CWrite
  2581 ;;                         _startADC16
  2582 ;; ---------------------------------------------------------------------------------
  2583 ;; (1) _I2CEEworker                                          9     9      0     326
  2584 ;;                                              0 BANK0      9     9      0
  2585 ;;                        _EEPROMwrite
  2586 ;; ---------------------------------------------------------------------------------
  2587 ;; (1) _init                                                 1     1      0       0
  2588 ;;                                              4 COMMON     1     1      0
  2589 ;;                            _initSPI
  2590 ;;                            _initI2C
  2591 ;;                           _initUART
  2592 ;; ---------------------------------------------------------------------------------
  2593 ;; (3) ___lbdiv                                              5     4      1     162
  2594 ;;                                              3 COMMON     5     4      1
  2595 ;; ---------------------------------------------------------------------------------
  2596 ;; (3) ___lwdiv                                              8     4      4     241
  2597 ;;                                              3 COMMON     5     1      4
  2598 ;;                                              0 BANK0      3     3      0
  2599 ;; ---------------------------------------------------------------------------------
  2600 ;; (3) ___wmul                                               6     2      4      92
  2601 ;;                                              3 COMMON     6     2      4
  2602 ;; ---------------------------------------------------------------------------------
  2603 ;; (3) ___bmul                                               4     3      1      92
  2604 ;;                                              3 COMMON     4     3      1
  2605 ;; ---------------------------------------------------------------------------------
  2606 ;; (2) _disableDAC                                           0     0      0       0
  2607 ;; ---------------------------------------------------------------------------------
  2608 ;; (2) _disablePWM                                           0     0      0       0
  2609 ;; ---------------------------------------------------------------------------------
  2610 ;; (3) _UARTread                                             2     2      0      23
  2611 ;;                                              3 COMMON     2     2      0
  2612 ;; ---------------------------------------------------------------------------------
  2613 ;; (3) _UARTwrite                                            1     1      0      22
  2614 ;;                                              3 COMMON     1     1      0
  2615 ;; ---------------------------------------------------------------------------------
  2616 ;; (2) _getADC                                               9     7      2     118
  2617 ;;                                              3 COMMON     5     3      2
  2618 ;;                                              0 BANK0      4     4      0
  2619 ;; ---------------------------------------------------------------------------------
  2620 ;; (2) _setDAC                                               1     1      0      22
  2621 ;;                                              3 COMMON     1     1      0
  2622 ;; ---------------------------------------------------------------------------------
  2623 ;; (2) _enableDAC                                            0     0      0       0
  2624 ;; ---------------------------------------------------------------------------------
  2625 ;; (2) _startADC16                                           5     5      0      95
  2626 ;;                                              3 COMMON     4     4      0
  2627 ;; ---------------------------------------------------------------------------------
  2628 ;; (2) _I2CWrite                                             1     1      0      22
  2629 ;;                                              3 COMMON     1     1      0
  2630 ;; ---------------------------------------------------------------------------------
  2631 ;; (2) _enableTS                                             1     1      0       0
  2632 ;;                                              3 COMMON     1     1      0
  2633 ;; ---------------------------------------------------------------------------------
  2634 ;; (2) _EEPROMwrite                                          2     1      1      44
  2635 ;;                                              7 COMMON     2     1      1
  2636 ;;                           _UARTread (ARG)
  2637 ;;                          _UARTwrite (ARG)
  2638 ;;                             ___bmul (ARG)
  2639 ;; ---------------------------------------------------------------------------------
  2640 ;; (2) _initUART                                             1     1      0       0
  2641 ;; ---------------------------------------------------------------------------------
  2642 ;; (2) _initI2C                                              1     1      0       0
  2643 ;;                                              3 COMMON     1     1      0
  2644 ;; ---------------------------------------------------------------------------------
  2645 ;; (2) _initSPI                                              0     0      0       0
  2646 ;; ---------------------------------------------------------------------------------
  2647 ;; (1) _isEE                                                 0     0      0       0
  2648 ;; ---------------------------------------------------------------------------------
  2649 ;; (2) _EEPROMread                                           1     1      0      22
  2650 ;;                                              3 COMMON     1     1      0
  2651 ;; ---------------------------------------------------------------------------------
  2652 ;; (1) _nullfunc1                                            0     0      0       0
  2653 ;; ---------------------------------------------------------------------------------
  2654 ;; Estimated maximum stack depth 3
  2655 ;; ---------------------------------------------------------------------------------
  2656 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2657 ;; ---------------------------------------------------------------------------------
  2658 ;; (4) _isr                                                  3     3      0       0
  2659 ;;                                              0 COMMON     3     3      0
  2660 ;; ---------------------------------------------------------------------------------
  2661 ;; Estimated maximum stack depth 4
  2662 ;; ---------------------------------------------------------------------------------
  2663                           
  2664 ;; Call Graph Graphs:
  2665                           
  2666 ;; _main (ROOT)
  2667 ;;   _init
  2668 ;;     _initSPI
  2669 ;;     _initI2C
  2670 ;;     _initUART
  2671 ;;   _EEPROMread
  2672 ;;   _isEE
  2673 ;;   _doEE
  2674 ;;     _teletype
  2675 ;;       _UARTwrite
  2676 ;;   _I2CADCworker
  2677 ;;     _enableTS
  2678 ;;     _I2CWrite
  2679 ;;     _startADC16
  2680 ;;   _UARTworker
  2681 ;;     _initUART
  2682 ;;     _UARTwriteString
  2683 ;;       _UARTwrite
  2684 ;;     _UARTwrite
  2685 ;;     _UARTread
  2686 ;;     _enablePWM
  2687 ;;       ___wmul
  2688 ;;       ___lwdiv
  2689 ;;     _enableDAC
  2690 ;;     _getADC
  2691 ;;     _UARTwriteDecimal
  2692 ;;       ___lbdiv
  2693 ;;       _UARTwrite
  2694 ;;       ___bmul
  2695 ;;     _UARTcharFromString
  2696 ;;       _UARTread
  2697 ;;       _UARTwrite
  2698 ;;       ___bmul
  2699 ;;       _EEPROMwrite (ARG)
  2700 ;;         _UARTread (ARG)
  2701 ;;         _UARTwrite (ARG)
  2702 ;;         ___bmul (ARG)
  2703 ;;     _setPeriod
  2704 ;;       ___wmul
  2705 ;;       ___lwdiv
  2706 ;;     _setDuty
  2707 ;;       ___wmul
  2708 ;;       ___lwdiv
  2709 ;;     _disablePWM
  2710 ;;     _setDAC
  2711 ;;     _disableDAC
  2712 ;;     _EEPROMwrite
  2713 ;;       _UARTread (ARG)
  2714 ;;       _UARTwrite (ARG)
  2715 ;;       ___bmul (ARG)
  2716 ;;     _EEPROMread
  2717 ;;   _SPIADCworker
  2718 ;;     _initSPI
  2719 ;;     _getADC
  2720 ;;   _nullfunc1
  2721 ;;   _I2CEEworker
  2722 ;;     _EEPROMwrite
  2723 ;;       _UARTread (ARG)
  2724 ;;       _UARTwrite (ARG)
  2725 ;;       ___bmul (ARG)
  2726 ;;   _SPIEEworker
  2727 ;;     _initSPI
  2728 ;;     _EEPROMwrite
  2729 ;;       _UARTread (ARG)
  2730 ;;       _UARTwrite (ARG)
  2731 ;;       ___bmul (ARG)
  2732 ;;   _I2CDACworker
  2733 ;;     _enableDAC
  2734 ;;     _setDAC
  2735 ;;     _I2CWrite
  2736 ;;   _SPIDACworker
  2737 ;;     _initSPI
  2738 ;;     _enableDAC
  2739 ;;     _setDAC
  2740 ;;   _I2CPWMworker
  2741 ;;     _enablePWM
  2742 ;;       ___wmul
  2743 ;;       ___lwdiv
  2744 ;;     _setPeriod
  2745 ;;       ___wmul
  2746 ;;       ___lwdiv
  2747 ;;     _setDuty
  2748 ;;       ___wmul
  2749 ;;       ___lwdiv
  2750 ;;   _SPIPWMworker
  2751 ;;     _initSPI
  2752 ;;     _enablePWM
  2753 ;;       ___wmul
  2754 ;;       ___lwdiv
  2755 ;;     _setPeriod
  2756 ;;       ___wmul
  2757 ;;       ___lwdiv
  2758 ;;     _setDuty
  2759 ;;       ___wmul
  2760 ;;       ___lwdiv
  2761 ;;
  2762 ;; _isr (ROOT)
  2763 ;;
  2764                           
  2765 ;; Address spaces:
  2766                           
  2767 ;;Name               Size   Autos  Total    Cost      Usage
  2768 ;;BIGRAM             3F0      0       0       0        0.0%
  2769 ;;EEDATA             100      0       0       0        0.0%
  2770 ;;NULL                 0      0       0       0        0.0%
  2771 ;;CODE                 0      0       0       0        0.0%
  2772 ;;BITCOMMON            E      0       0       1        0.0%
  2773 ;;BITSFR0              0      0       0       1        0.0%
  2774 ;;SFR0                 0      0       0       1        0.0%
  2775 ;;COMMON               E      A       B       2       78.6%
  2776 ;;BITSFR1              0      0       0       2        0.0%
  2777 ;;SFR1                 0      0       0       2        0.0%
  2778 ;;BITSFR2              0      0       0       3        0.0%
  2779 ;;SFR2                 0      0       0       3        0.0%
  2780 ;;STACK                0      0       3       3        0.0%
  2781 ;;BITBANK0            50      0       0       4        0.0%
  2782 ;;BITSFR3              0      0       0       4        0.0%
  2783 ;;SFR3                 0      0       0       4        0.0%
  2784 ;;BANK0               50     19      49       5       91.3%
  2785 ;;BITSFR4              0      0       0       5        0.0%
  2786 ;;SFR4                 0      0       0       5        0.0%
  2787 ;;BITBANK1            50      0       0       6        0.0%
  2788 ;;BITSFR5              0      0       0       6        0.0%
  2789 ;;SFR5                 0      0       0       6        0.0%
  2790 ;;BANK1               50      0       0       7        0.0%
  2791 ;;BITSFR6              0      0       0       7        0.0%
  2792 ;;SFR6                 0      0       0       7        0.0%
  2793 ;;BITBANK2            50      0       0       8        0.0%
  2794 ;;BITSFR7              0      0       0       8        0.0%
  2795 ;;SFR7                 0      0       0       8        0.0%
  2796 ;;BANK2               50      0       0       9        0.0%
  2797 ;;BITSFR8              0      0       0       9        0.0%
  2798 ;;SFR8                 0      0       0       9        0.0%
  2799 ;;BITBANK3            50      0       0      10        0.0%
  2800 ;;BITSFR9              0      0       0      10        0.0%
  2801 ;;SFR9                 0      0       0      10        0.0%
  2802 ;;BANK3               50      0       0      11        0.0%
  2803 ;;BITSFR10             0      0       0      11        0.0%
  2804 ;;SFR10                0      0       0      11        0.0%
  2805 ;;BITBANK4            50      0       0      12        0.0%
  2806 ;;BITSFR11             0      0       0      12        0.0%
  2807 ;;SFR11                0      0       0      12        0.0%
  2808 ;;BANK4               50      0       0      13        0.0%
  2809 ;;BITSFR12             0      0       0      13        0.0%
  2810 ;;SFR12                0      0       0      13        0.0%
  2811 ;;BITBANK5            50      0       0      14        0.0%
  2812 ;;BITSFR13             0      0       0      14        0.0%
  2813 ;;SFR13                0      0       0      14        0.0%
  2814 ;;BANK5               50      0       0      15        0.0%
  2815 ;;BITSFR14             0      0       0      15        0.0%
  2816 ;;SFR14                0      0       0      15        0.0%
  2817 ;;BITBANK6            50      0       0      16        0.0%
  2818 ;;BITSFR15             0      0       0      16        0.0%
  2819 ;;SFR15                0      0       0      16        0.0%
  2820 ;;BANK6               50      0       0      17        0.0%
  2821 ;;BITSFR16             0      0       0      17        0.0%
  2822 ;;SFR16                0      0       0      17        0.0%
  2823 ;;BITBANK7            50      0       0      18        0.0%
  2824 ;;BITSFR17             0      0       0      18        0.0%
  2825 ;;SFR17                0      0       0      18        0.0%
  2826 ;;BANK7               50      0       0      19        0.0%
  2827 ;;BITSFR18             0      0       0      19        0.0%
  2828 ;;SFR18                0      0       0      19        0.0%
  2829 ;;BITSFR19             0      0       0      20        0.0%
  2830 ;;SFR19                0      0       0      20        0.0%
  2831 ;;ABS                  0      0      54      20        0.0%
  2832 ;;BITBANK8            50      0       0      21        0.0%
  2833 ;;BITSFR20             0      0       0      21        0.0%
  2834 ;;SFR20                0      0       0      21        0.0%
  2835 ;;BANK8               50      0       0      22        0.0%
  2836 ;;BITSFR21             0      0       0      22        0.0%
  2837 ;;SFR21                0      0       0      22        0.0%
  2838 ;;BITBANK9            50      0       0      23        0.0%
  2839 ;;BITSFR22             0      0       0      23        0.0%
  2840 ;;SFR22                0      0       0      23        0.0%
  2841 ;;BANK9               20      0       0      24        0.0%
  2842 ;;BITSFR23             0      0       0      24        0.0%
  2843 ;;SFR23                0      0       0      24        0.0%
  2844 ;;BITBANK10           50      0       0      25        0.0%
  2845 ;;BITSFR24             0      0       0      25        0.0%
  2846 ;;SFR24                0      0       0      25        0.0%
  2847 ;;BITSFR25             0      0       0      26        0.0%
  2848 ;;SFR25                0      0       0      26        0.0%
  2849 ;;BANK10               0      0       0      26        0.0%
  2850 ;;BITBANK11           50      0       0      27        0.0%
  2851 ;;BITSFR26             0      0       0      27        0.0%
  2852 ;;SFR26                0      0       0      27        0.0%
  2853 ;;BITSFR27             0      0       0      28        0.0%
  2854 ;;SFR27                0      0       0      28        0.0%
  2855 ;;BANK11               0      0       0      28        0.0%
  2856 ;;BITBANK12           30      0       0      29        0.0%
  2857 ;;BITSFR28             0      0       0      29        0.0%
  2858 ;;SFR28                0      0       0      29        0.0%
  2859 ;;BITSFR29             0      0       0      30        0.0%
  2860 ;;SFR29                0      0       0      30        0.0%
  2861 ;;BANK12               0      0       0      30        0.0%
  2862 ;;BITSFR30             0      0       0      31        0.0%
  2863 ;;SFR30                0      0       0      31        0.0%
  2864 ;;DATA                 0      0      57      31        0.0%
  2865 ;;BITSFR31             0      0       0      32        0.0%
  2866 ;;SFR31                0      0       0      32        0.0%
  2867                           
  2868                           	global	_main
  2869                           psect	maintext,global,class=CODE,delta=2
  2870                           global __pmaintext
  2871  0117                     __pmaintext:
  2872                           
  2873 ;; *************** function _main *****************
  2874 ;; Defined at:
  2875 ;;		line 75 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  i               2   23[BANK0 ] int 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2  1625[COMMON] int 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 17F/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2891 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  2893 ;;Total ram usage:        5 bytes
  2894 ;; Hardware stack levels required when called:    4
  2895 ;; This function calls:
  2896 ;;		_init
  2897 ;;		_EEPROMread
  2898 ;;		_isEE
  2899 ;;		_doEE
  2900 ;;		_I2CADCworker
  2901 ;;		_UARTworker
  2902 ;;		_SPIADCworker
  2903 ;;		_nullfunc1
  2904 ;;		_I2CEEworker
  2905 ;;		_SPIEEworker
  2906 ;;		_I2CDACworker
  2907 ;;		_SPIDACworker
  2908 ;;		_I2CPWMworker
  2909 ;;		_SPIPWMworker
  2910 ;; This function is called by:
  2911 ;;		Startup code after reset
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           psect	maintext
  2915                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  2916                           	line	75
  2917                           	global	__size_of_main
  2918  00AA                     	__size_of_main	equ	__end_of_main-_main
  2919                           	
  2920  0117                     _main:	
  2921                           	opt	stack 12
  2922                           ; Regs used in _main: [allreg]
  2923                           	line	76
  2924                           	
  2925  0117                     l20084:	
  2926                           ;main.c: 76: mode=0x03;
  2927  0117  3003               	movlw	(03h)
  2928  0118  0020               	movlb 0	; select bank0
  2929  0119  00CE               	movwf	(??_main+0)+0
  2930  011A  084E               	movf	(??_main+0)+0,w
  2931  011B  00E8               	movwf	(_mode)
  2932                           	line	78
  2933                           	
  2934  011C                     l20086:	
  2935                           ;main.c: 78: init();
  2936  011C  3188  209C  3181   	fcall	_init
  2937                           	line	81
  2938                           	
  2939  011F                     l20088:	
  2940                           ;main.c: 80: int i;
  2941                           ;main.c: 81: for (i=0;i<256;i++)
  2942  011F  0020               	movlb 0	; select bank0
  2943  0120  01D1               	clrf	(main@i)
  2944  0121  01D2               	clrf	(main@i+1)
  2945                           	
  2946  0122                     l20090:	
  2947  0122  0852               	movf	(main@i+1),w
  2948  0123  3A80               	xorlw	80h
  2949  0124  00FF               	movwf	btemp+1
  2950  0125  3081               	movlw	(high(0100h))^80h
  2951  0126  027F               	subwf	btemp+1,w
  2952  0127  1D03               	skipz
  2953  0128  292B               	goto	u5175
  2954  0129  3000               	movlw	low(0100h)
  2955  012A  0251               	subwf	(main@i),w
  2956  012B                     u5175:
  2957                           
  2958  012B  1C03               	skipc
  2959  012C  292E               	goto	u5171
  2960  012D  292F               	goto	u5170
  2961  012E                     u5171:
  2962  012E  2931               	goto	l20094
  2963  012F                     u5170:
  2964  012F  2958               	goto	l20100
  2965                           	
  2966  0130                     l20092:	
  2967  0130  2958               	goto	l20100
  2968                           	line	82
  2969                           	
  2970  0131                     l1626:	
  2971                           	line	83
  2972                           	
  2973  0131                     l20094:	
  2974                           ;main.c: 82: {
  2975                           ;main.c: 83: eeBuf[i]= EEPROMread(i);
  2976  0131  0020               	movlb 0	; select bank0
  2977  0132  0851               	movf	(main@i),w
  2978  0133  3194  24DA  3181   	fcall	_EEPROMread
  2979  0136  0020               	movlb 0	; select bank0
  2980  0137  00CE               	movwf	(??_main+0)+0
  2981  0138  0851               	movf	(main@i),w
  2982  0139  3EF0               	addlw	low 8944
  2983  013A  00CF               	movwf	(??_main+1)+0
  2984  013B  3022               	movlw	high 8944
  2985  013C  1803               	skipnc
  2986  013D  3023               	movlw	high (8944)+1
  2987  013E  00D0               	movwf	((??_main+1)+0)+1
  2988  013F  084F               	movf	0+(??_main+1)+0,w
  2989  0140  0086               	movwf	fsr1l
  2990  0141  0850               	movf	1+(??_main+1)+0,w
  2991  0142  0087               	movwf	fsr1h
  2992                           
  2993  0143  084E               	movf	(??_main+0)+0,w
  2994  0144  0081               	movwf	indf1
  2995                           	line	81
  2996                           	
  2997  0145                     l20096:	
  2998  0145  3001               	movlw	low(01h)
  2999  0146  07D1               	addwf	(main@i),f
  3000  0147  3000               	movlw	high(01h)
  3001  0148  3DD2               	addwfc	(main@i+1),f
  3002                           	
  3003  0149                     l20098:	
  3004  0149  0852               	movf	(main@i+1),w
  3005  014A  3A80               	xorlw	80h
  3006  014B  00FF               	movwf	btemp+1
  3007  014C  3081               	movlw	(high(0100h))^80h
  3008  014D  027F               	subwf	btemp+1,w
  3009  014E  1D03               	skipz
  3010  014F  2952               	goto	u5185
  3011  0150  3000               	movlw	low(0100h)
  3012  0151  0251               	subwf	(main@i),w
  3013  0152                     u5185:
  3014                           
  3015  0152  1C03               	skipc
  3016  0153  2955               	goto	u5181
  3017  0154  2956               	goto	u5180
  3018  0155                     u5181:
  3019  0155  2931               	goto	l20094
  3020  0156                     u5180:
  3021  0156  2958               	goto	l20100
  3022                           	
  3023  0157                     l1627:	
  3024  0157  2958               	goto	l20100
  3025                           	line	87
  3026                           ;main.c: 84: }
  3027                           ;main.c: 87: while(1){
  3028                           	
  3029  0158                     l1628:	
  3030                           	line	89
  3031                           	
  3032  0158                     l20100:	
  3033                           ;main.c: 89: if(isEE()) doEE();
  3034  0158  3194  24C1  3181   	fcall	_isEE
  3035  015B  3A00               	xorlw	0&0ffh
  3036  015C  1903               	skipnz
  3037  015D  295F               	goto	u5191
  3038  015E  2960               	goto	u5190
  3039  015F                     u5191:
  3040  015F  29AE               	goto	l20114
  3041  0160                     u5190:
  3042                           	
  3043  0160                     l20102:	
  3044  0160  3196  26B4  3181   	fcall	_doEE
  3045  0163  29AE               	goto	l20114
  3046                           	
  3047  0164                     l1629:	
  3048                           	line	92
  3049                           ;main.c: 92: switch(mode_device)
  3050  0164  29AE               	goto	l20114
  3051                           	line	94
  3052                           ;main.c: 93: {
  3053                           ;main.c: 94: case 0x03: protos[mode_protocol].ADCworker();
  3054                           	
  3055  0165                     l1631:	
  3056                           	
  3057  0165                     l20104:	
  3058  0165  0020               	movlb 0	; select bank0
  3059  0166  0866               	movf	(_mode_protocol),w
  3060  0167  00CE               	movwf	(??_main+0)+0
  3061  0168  3001               	movlw	(02h)-1
  3062  0169                     u5205:
  3063  0169  35CE               	lslf	(??_main+0)+0,f
  3064  016A  3EFF               	addlw	-1
  3065  016B  1D03               	skipz
  3066  016C  2969               	goto	u5205
  3067  016D  354E               	lslf	(??_main+0)+0,w
  3068  016E  3E20               	addlw	_protos&0ffh
  3069  016F  0086               	movwf	fsr1l
  3070  0170  0187               	clrf fsr1h	
  3071                           	
  3072  0171  0801               	movf	indf1,w
  3073  0172  3181  2100  3181   	fcall	fptable
  3074                           	line	95
  3075                           ;main.c: 95: break;
  3076  0175  2958               	goto	l20100
  3077                           	line	96
  3078                           ;main.c: 96: case 0x02: protos[mode_protocol].EEPROMworker();
  3079                           	
  3080  0176                     l1633:	
  3081                           	
  3082  0176                     l20106:	
  3083  0176  0020               	movlb 0	; select bank0
  3084  0177  0866               	movf	(_mode_protocol),w
  3085  0178  00CE               	movwf	(??_main+0)+0
  3086  0179  3001               	movlw	(02h)-1
  3087  017A                     u5215:
  3088  017A  35CE               	lslf	(??_main+0)+0,f
  3089  017B  3EFF               	addlw	-1
  3090  017C  1D03               	skipz
  3091  017D  297A               	goto	u5215
  3092  017E  354E               	lslf	(??_main+0)+0,w
  3093  017F  3E02               	addlw	02h
  3094  0180  3E20               	addlw	_protos&0ffh
  3095  0181  0086               	movwf	fsr1l
  3096  0182  0187               	clrf fsr1h	
  3097                           	
  3098  0183  0801               	movf	indf1,w
  3099  0184  3181  2100  3181   	fcall	fptable
  3100                           	line	97
  3101                           ;main.c: 97: break;
  3102  0187  2958               	goto	l20100
  3103                           	line	98
  3104                           ;main.c: 98: case 0x01: protos[mode_protocol].DACworker();
  3105                           	
  3106  0188                     l1634:	
  3107                           	
  3108  0188                     l20108:	
  3109  0188  0020               	movlb 0	; select bank0
  3110  0189  0866               	movf	(_mode_protocol),w
  3111  018A  00CE               	movwf	(??_main+0)+0
  3112  018B  3001               	movlw	(02h)-1
  3113  018C                     u5225:
  3114  018C  35CE               	lslf	(??_main+0)+0,f
  3115  018D  3EFF               	addlw	-1
  3116  018E  1D03               	skipz
  3117  018F  298C               	goto	u5225
  3118  0190  354E               	lslf	(??_main+0)+0,w
  3119  0191  3E01               	addlw	01h
  3120  0192  3E20               	addlw	_protos&0ffh
  3121  0193  0086               	movwf	fsr1l
  3122  0194  0187               	clrf fsr1h	
  3123                           	
  3124  0195  0801               	movf	indf1,w
  3125  0196  3181  2100  3181   	fcall	fptable
  3126                           	line	99
  3127                           ;main.c: 99: break;
  3128  0199  2958               	goto	l20100
  3129                           	line	100
  3130                           ;main.c: 100: case 0x00: protos[mode_protocol].PWMworker();
  3131                           	
  3132  019A                     l1635:	
  3133                           	
  3134  019A                     l20110:	
  3135  019A  0020               	movlb 0	; select bank0
  3136  019B  0866               	movf	(_mode_protocol),w
  3137  019C  00CE               	movwf	(??_main+0)+0
  3138  019D  3001               	movlw	(02h)-1
  3139  019E                     u5235:
  3140  019E  35CE               	lslf	(??_main+0)+0,f
  3141  019F  3EFF               	addlw	-1
  3142  01A0  1D03               	skipz
  3143  01A1  299E               	goto	u5235
  3144  01A2  354E               	lslf	(??_main+0)+0,w
  3145  01A3  3E03               	addlw	03h
  3146  01A4  3E20               	addlw	_protos&0ffh
  3147  01A5  0086               	movwf	fsr1l
  3148  01A6  0187               	clrf fsr1h	
  3149                           	
  3150  01A7  0801               	movf	indf1,w
  3151  01A8  3181  2100  3181   	fcall	fptable
  3152  01AB  2958               	goto	l20100
  3153                           	line	101
  3154                           ;main.c: 101: default: break;
  3155                           	
  3156  01AC                     l1636:	
  3157  01AC  2958               	goto	l20100
  3158                           	line	102
  3159                           	
  3160  01AD                     l20112:	
  3161                           ;main.c: 102: }
  3162  01AD  2958               	goto	l20100
  3163                           	line	92
  3164                           	
  3165  01AE                     l1630:	
  3166                           	
  3167  01AE                     l20114:	
  3168  01AE  0020               	movlb 0	; select bank0
  3169  01AF  0865               	movf	(_mode_device),w
  3170                           	; Switch size 1, requested type "space"
  3171                           ; Number of cases is 4, Range of values is 0 to 3
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte           13     7 (average)
  3175                           ; direct_byte           14     6 (fixed)
  3176                           ; jumptable            260     6 (fixed)
  3177                           ; rangetable             8     4 (fixed)
  3178                           ; spacedrange           13     6 (fixed)
  3179                           ; locatedrange           4     3 (fixed)
  3180                           ;	Chosen strategy is simple_byte
  3181                           
  3182                           	opt asmopt_off
  3183  01B0  3A00               	xorlw	0^0	; case 0
  3184  01B1  1903               	skipnz
  3185  01B2  299A               	goto	l20110
  3186  01B3  3A01               	xorlw	1^0	; case 1
  3187  01B4  1903               	skipnz
  3188  01B5  2988               	goto	l20108
  3189  01B6  3A03               	xorlw	2^1	; case 2
  3190  01B7  1903               	skipnz
  3191  01B8  2976               	goto	l20106
  3192  01B9  3A01               	xorlw	3^2	; case 3
  3193  01BA  1903               	skipnz
  3194  01BB  2965               	goto	l20104
  3195  01BC  2958               	goto	l20100
  3196                           	opt asmopt_on
  3197                           
  3198                           	line	102
  3199                           	
  3200  01BD                     l1632:	
  3201  01BD  2958               	goto	l20100
  3202                           	line	103
  3203                           	
  3204  01BE                     l1637:	
  3205                           	line	87
  3206  01BE  2958               	goto	l20100
  3207                           	
  3208  01BF                     l1638:	
  3209                           	line	105
  3210                           	
  3211  01BF                     l1639:	
  3212                           	global	start
  3213  01BF  3180  283C         	ljmp	start
  3214                           	opt stack 0
  3215                           GLOBAL	__end_of_main
  3216  01C1                     	__end_of_main:
  3217 ;; =============== function _main ends ============
  3218                           
  3219                           	signat	_main,90
  3220                           	global	_UARTworker
  3221                           	global	_nullfunc1
  3222                           	global	_SPIADCworker
  3223                           	global	_I2CADCworker
  3224                           psect	text1300,local,class=CODE,delta=2
  3225                           global __ptext1300
  3226  0A8D                     __ptext1300:
  3227                           
  3228 ;; *************** function _I2CADCworker *****************
  3229 ;; Defined at:
  3230 ;;		line 98 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  config          1    5[BANK0 ] unsigned char 
  3235 ;;  fb              1    4[BANK0 ] unsigned char 
  3236 ;;  adc             1    3[BANK0 ] unsigned char 
  3237 ;;  token           1    2[BANK0 ] unsigned char 
  3238 ;;  temp            1    1[BANK0 ] unsigned char 
  3239 ;;  adcON           1    0[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;		None               void
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3250 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3252 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3253 ;;Total ram usage:        7 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    2
  3256 ;; This function calls:
  3257 ;;		_enableTS
  3258 ;;		_I2CWrite
  3259 ;;		_startADC16
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           psect	text1300
  3265                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  3266                           	line	98
  3267                           	global	__size_of_I2CADCworker
  3268  0092                     	__size_of_I2CADCworker	equ	__end_of_I2CADCworker-_I2CADCworker
  3269                           	
  3270  0A8D                     _I2CADCworker:	
  3271                           	opt	stack 13
  3272                           ; Regs used in _I2CADCworker: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3273                           	
  3274  0A8D                     l18918:	
  3275  0A8D  0020               	movlb 0	; select bank0
  3276  0A8E  01BF               	clrf	(I2CADCworker@config)
  3277  0A8F  01BA               	clrf	(I2CADCworker@adcON)
  3278  0A90  01BE               	clrf	(I2CADCworker@fb)
  3279                           	line	100
  3280                           ;i2c.c: 100: adc=0x00;
  3281  0A91  01BD               	clrf	(I2CADCworker@adc)
  3282                           	line	101
  3283                           	
  3284  0A92                     l18920:	
  3285                           ;i2c.c: 101: enableTS();
  3286  0A92  3194  24D3  318A   	fcall	_enableTS
  3287                           	line	102
  3288                           	
  3289  0A95                     l18922:	
  3290                           ;i2c.c: 102: SSP2ADD=0x68;
  3291  0A95  3068               	movlw	(068h)
  3292  0A96  0024               	movlb 4	; select bank4
  3293  0A97  009A               	movwf	(538)^0200h	;volatile
  3294  0A98  2A99               	goto	l18924
  3295                           	line	104
  3296                           ;i2c.c: 104: while(1)
  3297                           	
  3298  0A99                     l3266:	
  3299                           	line	107
  3300                           	
  3301  0A99                     l18924:	
  3302                           ;i2c.c: 105: {
  3303                           ;i2c.c: 107: if(SSP2IF)
  3304  0A99  0020               	movlb 0	; select bank0
  3305  0A9A  1C14               	btfss	(160/8),(160)&7
  3306  0A9B  2A9D               	goto	u3731
  3307  0A9C  2A9E               	goto	u3730
  3308  0A9D                     u3731:
  3309  0A9D  2A99               	goto	l18924
  3310  0A9E                     u3730:
  3311                           	line	109
  3312                           	
  3313  0A9E                     l18926:	
  3314                           ;i2c.c: 108: {
  3315                           ;i2c.c: 109: token=SSP2STAT&0x25;
  3316  0A9E  0024               	movlb 4	; select bank4
  3317  0A9F  081C               	movf	(540)^0200h,w
  3318  0AA0  3925               	andlw	025h
  3319  0AA1  00F7               	movwf	(??_I2CADCworker+0)+0
  3320  0AA2  0877               	movf	(??_I2CADCworker+0)+0,w
  3321  0AA3  0020               	movlb 0	; select bank0
  3322  0AA4  00BC               	movwf	(I2CADCworker@token)
  3323                           	line	111
  3324                           	
  3325  0AA5                     l18928:	
  3326                           ;i2c.c: 111: if(SSP2STATbits.S)
  3327  0AA5  0024               	movlb 4	; select bank4
  3328  0AA6  1D9C               	btfss	(540)^0200h,3	;volatile
  3329  0AA7  2AA9               	goto	u3741
  3330  0AA8  2AAA               	goto	u3740
  3331  0AA9                     u3741:
  3332  0AA9  2AFD               	goto	l3268
  3333  0AAA                     u3740:
  3334                           	line	112
  3335                           	
  3336  0AAA                     l18930:	
  3337                           ;i2c.c: 112: { RC5=1;;
  3338  0AAA  0020               	movlb 0	; select bank0
  3339  0AAB  168E               	bsf	(117/8),(117)&7
  3340                           	line	113
  3341                           ;i2c.c: 113: switch(token)
  3342  0AAC  2AED               	goto	l18952
  3343                           	line	115
  3344                           ;i2c.c: 114: {
  3345                           ;i2c.c: 115: case 0x01:
  3346                           	
  3347  0AAD                     l3270:	
  3348                           	line	116
  3349                           	
  3350  0AAD                     l18932:	
  3351                           ;i2c.c: 116: temp=SSP2BUF;
  3352  0AAD  0024               	movlb 4	; select bank4
  3353  0AAE  0819               	movf	(537)^0200h,w	;volatile
  3354  0AAF  00F7               	movwf	(??_I2CADCworker+0)+0
  3355  0AB0  0877               	movf	(??_I2CADCworker+0)+0,w
  3356  0AB1  0020               	movlb 0	; select bank0
  3357  0AB2  00BB               	movwf	(I2CADCworker@temp)
  3358                           	line	117
  3359                           ;i2c.c: 117: break;
  3360  0AB3  2B14               	goto	l18964
  3361                           	line	118
  3362                           ;i2c.c: 118: case 0x21:
  3363                           	
  3364  0AB4                     l3272:	
  3365                           	line	119
  3366                           	
  3367  0AB4                     l18934:	
  3368                           ;i2c.c: 119: config=SSP2BUF;
  3369  0AB4  0024               	movlb 4	; select bank4
  3370  0AB5  0819               	movf	(537)^0200h,w	;volatile
  3371  0AB6  00F7               	movwf	(??_I2CADCworker+0)+0
  3372  0AB7  0877               	movf	(??_I2CADCworker+0)+0,w
  3373  0AB8  0020               	movlb 0	; select bank0
  3374  0AB9  00BF               	movwf	(I2CADCworker@config)
  3375                           	line	120
  3376                           ;i2c.c: 120: break;
  3377  0ABA  2B14               	goto	l18964
  3378                           	line	121
  3379                           ;i2c.c: 121: case 0x05:
  3380                           	
  3381  0ABB                     l3273:	
  3382                           	line	122
  3383                           	
  3384  0ABB                     l18936:	
  3385                           ;i2c.c: 122: temp=SSP2BUF;
  3386  0ABB  0024               	movlb 4	; select bank4
  3387  0ABC  0819               	movf	(537)^0200h,w	;volatile
  3388  0ABD  00F7               	movwf	(??_I2CADCworker+0)+0
  3389  0ABE  0877               	movf	(??_I2CADCworker+0)+0,w
  3390  0ABF  0020               	movlb 0	; select bank0
  3391  0AC0  00BB               	movwf	(I2CADCworker@temp)
  3392                           	line	123
  3393                           	
  3394  0AC1                     l18938:	
  3395                           ;i2c.c: 123: I2CWrite(ADRESH);
  3396  0AC1  0021               	movlb 1	; select bank1
  3397  0AC2  081C               	movf	(156)^080h,w	;volatile
  3398  0AC3  3194  24EF  318A   	fcall	_I2CWrite
  3399                           	line	124
  3400                           ;i2c.c: 124: break;
  3401  0AC6  2B14               	goto	l18964
  3402                           	line	125
  3403                           ;i2c.c: 125: case 0x24:
  3404                           	
  3405  0AC7                     l3274:	
  3406                           	line	126
  3407                           	
  3408  0AC7                     l18940:	
  3409                           ;i2c.c: 126: temp=SSP2BUF;
  3410  0AC7  0024               	movlb 4	; select bank4
  3411  0AC8  0819               	movf	(537)^0200h,w	;volatile
  3412  0AC9  00F7               	movwf	(??_I2CADCworker+0)+0
  3413  0ACA  0877               	movf	(??_I2CADCworker+0)+0,w
  3414  0ACB  0020               	movlb 0	; select bank0
  3415  0ACC  00BB               	movwf	(I2CADCworker@temp)
  3416                           	line	127
  3417                           	
  3418  0ACD                     l18942:	
  3419                           ;i2c.c: 127: if(fb==0)
  3420  0ACD  08BE               	movf	(I2CADCworker@fb),f
  3421  0ACE  1D03               	skipz
  3422  0ACF  2AD1               	goto	u3751
  3423  0AD0  2AD2               	goto	u3750
  3424  0AD1                     u3751:
  3425  0AD1  2ADB               	goto	l18948
  3426  0AD2                     u3750:
  3427                           	line	129
  3428                           	
  3429  0AD2                     l18944:	
  3430                           ;i2c.c: 128: {
  3431                           ;i2c.c: 129: fb=1;
  3432  0AD2  01BE               	clrf	(I2CADCworker@fb)
  3433  0AD3  1403               	bsf	status,0
  3434  0AD4  0DBE               	rlf	(I2CADCworker@fb),f
  3435                           	line	130
  3436                           	
  3437  0AD5                     l18946:	
  3438                           ;i2c.c: 130: I2CWrite(ADRESL);
  3439  0AD5  0021               	movlb 1	; select bank1
  3440  0AD6  081B               	movf	(155)^080h,w	;volatile
  3441  0AD7  3194  24EF  318A   	fcall	_I2CWrite
  3442                           	line	131
  3443                           ;i2c.c: 131: }
  3444  0ADA  2B14               	goto	l18964
  3445                           	line	132
  3446                           	
  3447  0ADB                     l3275:	
  3448                           	line	134
  3449                           	
  3450  0ADB                     l18948:	
  3451                           ;i2c.c: 132: else
  3452                           ;i2c.c: 133: {
  3453                           ;i2c.c: 134: I2CWrite(config&(ADCON0bits.ADGO<<7));
  3454  0ADB  0021               	movlb 1	; select bank1
  3455  0ADC  0C1D               	rrf	(157)^080h,w	;volatile
  3456  0ADD  3901               	andlw	(1<<1)-1
  3457  0ADE  00F7               	movwf	(??_I2CADCworker+0)+0
  3458  0ADF  3006               	movlw	(07h)-1
  3459  0AE0                     u3765:
  3460  0AE0  35F7               	lslf	(??_I2CADCworker+0)+0,f
  3461  0AE1  3EFF               	addlw	-1
  3462  0AE2  1D03               	skipz
  3463  0AE3  2AE0               	goto	u3765
  3464  0AE4  3577               	lslf	(??_I2CADCworker+0)+0,w
  3465  0AE5  0020               	movlb 0	; select bank0
  3466  0AE6  053F               	andwf	(I2CADCworker@config),w
  3467  0AE7  3194  24EF  318A   	fcall	_I2CWrite
  3468  0AEA  2B14               	goto	l18964
  3469                           	line	135
  3470                           	
  3471  0AEB                     l3276:	
  3472                           	line	136
  3473                           ;i2c.c: 135: }
  3474                           ;i2c.c: 136: break;
  3475  0AEB  2B14               	goto	l18964
  3476                           	line	137
  3477                           	
  3478  0AEC                     l18950:	
  3479                           ;i2c.c: 137: }
  3480  0AEC  2B14               	goto	l18964
  3481                           	line	113
  3482                           	
  3483  0AED                     l3269:	
  3484                           	
  3485  0AED                     l18952:	
  3486  0AED  0020               	movlb 0	; select bank0
  3487  0AEE  083C               	movf	(I2CADCworker@token),w
  3488                           	; Switch size 1, requested type "space"
  3489                           ; Number of cases is 4, Range of values is 1 to 36
  3490                           ; switch strategies available:
  3491                           ; Name         Instructions Cycles
  3492                           ; simple_byte           13     7 (average)
  3493                           ; direct_byte           81     9 (fixed)
  3494                           ; jumptable            263     9 (fixed)
  3495                           ;	Chosen strategy is simple_byte
  3496                           
  3497                           	opt asmopt_off
  3498  0AEF  3A01               	xorlw	1^0	; case 1
  3499  0AF0  1903               	skipnz
  3500  0AF1  2AAD               	goto	l18932
  3501  0AF2  3A04               	xorlw	5^1	; case 5
  3502  0AF3  1903               	skipnz
  3503  0AF4  2ABB               	goto	l18936
  3504  0AF5  3A24               	xorlw	33^5	; case 33
  3505  0AF6  1903               	skipnz
  3506  0AF7  2AB4               	goto	l18934
  3507  0AF8  3A05               	xorlw	36^33	; case 36
  3508  0AF9  1903               	skipnz
  3509  0AFA  2AC7               	goto	l18940
  3510  0AFB  2B14               	goto	l18964
  3511                           	opt asmopt_on
  3512                           
  3513                           	line	137
  3514                           	
  3515  0AFC                     l3271:	
  3516                           	line	138
  3517                           ;i2c.c: 138: }
  3518  0AFC  2B14               	goto	l18964
  3519                           	line	139
  3520                           	
  3521  0AFD                     l3268:	
  3522                           ;i2c.c: 139: else if(SSP2STATbits.P)
  3523  0AFD  1E1C               	btfss	(540)^0200h,4	;volatile
  3524  0AFE  2B00               	goto	u3771
  3525  0AFF  2B01               	goto	u3770
  3526  0B00                     u3771:
  3527  0B00  2B14               	goto	l18964
  3528  0B01                     u3770:
  3529                           	line	141
  3530                           	
  3531  0B01                     l18954:	
  3532                           ;i2c.c: 140: {
  3533                           ;i2c.c: 141: fb=0;
  3534  0B01  0020               	movlb 0	; select bank0
  3535  0B02  01BE               	clrf	(I2CADCworker@fb)
  3536                           	line	142
  3537                           ;i2c.c: 142: RC5=0;;
  3538  0B03  128E               	bcf	(117/8),(117)&7
  3539                           	line	143
  3540                           	
  3541  0B04                     l18956:	
  3542                           ;i2c.c: 143: adc=config&0b01100000;
  3543  0B04  083F               	movf	(I2CADCworker@config),w
  3544  0B05  3960               	andlw	060h
  3545  0B06  00F7               	movwf	(??_I2CADCworker+0)+0
  3546  0B07  0877               	movf	(??_I2CADCworker+0)+0,w
  3547  0B08  00BD               	movwf	(I2CADCworker@adc)
  3548                           	line	144
  3549                           	
  3550  0B09                     l18958:	
  3551                           ;i2c.c: 144: adc>>=5;
  3552  0B09  0EBD               	swapf (I2CADCworker@adc),f
  3553  0B0A  0CBD               	rrf	(I2CADCworker@adc),f
  3554  0B0B  3007               	movlw	7
  3555  0B0C  05BD               	andwf	(I2CADCworker@adc),f
  3556                           
  3557                           	line	145
  3558                           	
  3559  0B0D                     l18960:	
  3560                           ;i2c.c: 145: startADC16(adc);
  3561  0B0D  083D               	movf	(I2CADCworker@adc),w
  3562  0B0E  3197  2747  318A   	fcall	_startADC16
  3563                           	line	146
  3564                           	
  3565  0B11                     l18962:	
  3566                           # 146 "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  3567  0B11  0000               NOP ;#
  3568                           psect	text1300
  3569  0B12  2B14               	goto	l18964
  3570                           	line	148
  3571                           	
  3572  0B13                     l3278:	
  3573  0B13  2B14               	goto	l18964
  3574                           	line	150
  3575                           	
  3576  0B14                     l3277:	
  3577                           	
  3578  0B14                     l18964:	
  3579                           ;i2c.c: 148: }
  3580                           ;i2c.c: 150: SSP2IF=0;
  3581  0B14  0020               	movlb 0	; select bank0
  3582  0B15  1014               	bcf	(160/8),(160)&7
  3583                           	line	151
  3584                           	
  3585  0B16                     l18966:	
  3586                           ;i2c.c: 151: ADCON0bits.ADGO=1;
  3587  0B16  0021               	movlb 1	; select bank1
  3588  0B17  149D               	bsf	(157)^080h,1	;volatile
  3589                           	line	152
  3590                           	
  3591  0B18                     l18968:	
  3592                           ;i2c.c: 152: SSP2CON1bits.SSPEN=1;
  3593  0B18  0024               	movlb 4	; select bank4
  3594  0B19  169D               	bsf	(541)^0200h,5	;volatile
  3595                           	line	153
  3596                           	
  3597  0B1A                     l18970:	
  3598                           ;i2c.c: 153: SSP2CON1bits.CKP=1;
  3599  0B1A  161D               	bsf	(541)^0200h,4	;volatile
  3600  0B1B  2A99               	goto	l18924
  3601                           	line	155
  3602                           	
  3603  0B1C                     l3267:	
  3604  0B1C  2A99               	goto	l18924
  3605                           	line	156
  3606                           	
  3607  0B1D                     l3279:	
  3608                           	line	104
  3609  0B1D  2A99               	goto	l18924
  3610                           	
  3611  0B1E                     l3280:	
  3612                           	line	157
  3613                           	
  3614  0B1E                     l3281:	
  3615  0B1E  0008               	return
  3616                           	opt stack 0
  3617                           GLOBAL	__end_of_I2CADCworker
  3618  0B1F                     	__end_of_I2CADCworker:
  3619 ;; =============== function _I2CADCworker ends ============
  3620                           
  3621                           	signat	_I2CADCworker,88
  3622                           psect	text1301,local,class=CODE,delta=2
  3623                           global __ptext1301
  3624  17A3                     __ptext1301:
  3625                           
  3626 ;; *************** function _SPIADCworker *****************
  3627 ;; Defined at:
  3628 ;;		line 261 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  fb              1    7[BANK0 ] unsigned char 
  3633 ;;  chanel          1    6[BANK0 ] unsigned char 
  3634 ;;  bf              1    5[BANK0 ] unsigned char 
  3635 ;;  fInst           1    4[BANK0 ] unsigned char 
  3636 ;;  instruction     1    0        unsigned char 
  3637 ;;  token           1    0        unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3650 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3651 ;;Total ram usage:        6 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		_initSPI
  3656 ;;		_getADC
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           psect	text1301
  3662                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  3663                           	line	261
  3664                           	global	__size_of_SPIADCworker
  3665  005D                     	__size_of_SPIADCworker	equ	__end_of_SPIADCworker-_SPIADCworker
  3666                           	
  3667  17A3                     _SPIADCworker:	
  3668                           	opt	stack 13
  3669                           ; Regs used in _SPIADCworker: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3670                           	line	262
  3671                           	
  3672  17A3                     l19218:	
  3673                           ;spi.c: 262: unsigned char token, instruction, chanel, fInst=0,fb=0,bf=0;
  3674  17A3  0020               	movlb 0	; select bank0
  3675  17A4  01BE               	clrf	(SPIADCworker@fInst)
  3676  17A5  01C1               	clrf	(SPIADCworker@fb)
  3677  17A6  01BF               	clrf	(SPIADCworker@bf)
  3678                           	line	263
  3679                           	
  3680  17A7                     l19220:	
  3681                           ;spi.c: 263: initSPI();
  3682  17A7  3194  24E4  3197   	fcall	_initSPI
  3683                           	line	264
  3684                           	
  3685  17AA                     l19222:	
  3686                           ;spi.c: 264: SSP2BUF = 0xFD;
  3687  17AA  30FD               	movlw	(0FDh)
  3688  17AB  0024               	movlb 4	; select bank4
  3689  17AC  0099               	movwf	(537)^0200h	;volatile
  3690  17AD  2FF0               	goto	l19242
  3691                           	line	266
  3692                           ;spi.c: 266: while (1)
  3693                           	
  3694  17AE                     l5001:	
  3695                           	line	268
  3696                           ;spi.c: 267: {
  3697                           ;spi.c: 268: while(PORTCbits.RC0 ==0)
  3698  17AE  2FF0               	goto	l19242
  3699                           	
  3700  17AF                     l5003:	
  3701                           	line	270
  3702                           ;spi.c: 269: {
  3703                           ;spi.c: 270: if(SSP2STATbits.BF)
  3704  17AF  0024               	movlb 4	; select bank4
  3705  17B0  1C1C               	btfss	(540)^0200h,0	;volatile
  3706  17B1  2FB3               	goto	u4091
  3707  17B2  2FB4               	goto	u4090
  3708  17B3                     u4091:
  3709  17B3  2FF0               	goto	l19242
  3710  17B4                     u4090:
  3711                           	line	272
  3712                           	
  3713  17B4                     l19224:	
  3714                           ;spi.c: 271: {
  3715                           ;spi.c: 272: SSP2STATbits.BF=0;
  3716  17B4  101C               	bcf	(540)^0200h,0	;volatile
  3717                           	line	273
  3718                           	
  3719  17B5                     l19226:	
  3720                           ;spi.c: 273: bf=1;
  3721  17B5  0020               	movlb 0	; select bank0
  3722  17B6  01BF               	clrf	(SPIADCworker@bf)
  3723  17B7  1403               	bsf	status,0
  3724  17B8  0DBF               	rlf	(SPIADCworker@bf),f
  3725                           	line	274
  3726                           ;spi.c: 274: if(fb==0)
  3727  17B9  08C1               	movf	(SPIADCworker@fb),f
  3728  17BA  1D03               	skipz
  3729  17BB  2FBD               	goto	u4101
  3730  17BC  2FBE               	goto	u4100
  3731  17BD                     u4101:
  3732  17BD  2FCD               	goto	l19234
  3733  17BE                     u4100:
  3734                           	line	276
  3735                           	
  3736  17BE                     l19228:	
  3737                           ;spi.c: 275: {
  3738                           ;spi.c: 276: if(SSP2BUF==1)fb=1;
  3739  17BE  0024               	movlb 4	; select bank4
  3740  17BF  0819               	movf	(537)^0200h,w	;volatile
  3741  17C0  3A01               	xorlw	01h&0ffh
  3742  17C1  1D03               	skipz
  3743  17C2  2FC4               	goto	u4111
  3744  17C3  2FC5               	goto	u4110
  3745  17C4                     u4111:
  3746  17C4  2FCA               	goto	l19232
  3747  17C5                     u4110:
  3748                           	
  3749  17C5                     l19230:	
  3750  17C5  0020               	movlb 0	; select bank0
  3751  17C6  01C1               	clrf	(SPIADCworker@fb)
  3752  17C7  1403               	bsf	status,0
  3753  17C8  0DC1               	rlf	(SPIADCworker@fb),f
  3754  17C9  2FCA               	goto	l19232
  3755                           	
  3756  17CA                     l5006:	
  3757                           	line	277
  3758                           	
  3759  17CA                     l19232:	
  3760                           ;spi.c: 277: SSP2BUF=0;
  3761  17CA  0024               	movlb 4	; select bank4
  3762  17CB  0199               	clrf	(537)^0200h	;volatile
  3763                           	line	278
  3764                           ;spi.c: 278: }
  3765  17CC  2FF0               	goto	l19242
  3766                           	line	279
  3767                           	
  3768  17CD                     l5005:	
  3769                           	
  3770  17CD                     l19234:	
  3771                           ;spi.c: 279: else if(fb==1)
  3772  17CD  0020               	movlb 0	; select bank0
  3773  17CE  0841               	movf	(SPIADCworker@fb),w
  3774  17CF  3A01               	xorlw	01h&0ffh
  3775  17D0  1D03               	skipz
  3776  17D1  2FD3               	goto	u4121
  3777  17D2  2FD4               	goto	u4120
  3778  17D3                     u4121:
  3779  17D3  2FF0               	goto	l19242
  3780  17D4                     u4120:
  3781                           	line	281
  3782                           	
  3783  17D4                     l19236:	
  3784                           ;spi.c: 280: {
  3785                           ;spi.c: 281: chanel = SSP2BUF &0b00110000;
  3786  17D4  0024               	movlb 4	; select bank4
  3787  17D5  0819               	movf	(537)^0200h,w
  3788  17D6  3930               	andlw	030h
  3789  17D7  00F8               	movwf	(??_SPIADCworker+0)+0
  3790  17D8  0878               	movf	(??_SPIADCworker+0)+0,w
  3791  17D9  0020               	movlb 0	; select bank0
  3792  17DA  00C0               	movwf	(SPIADCworker@chanel)
  3793                           	line	282
  3794                           	
  3795  17DB                     l19238:	
  3796                           ;spi.c: 282: chanel = chanel>>4;
  3797  17DB  0840               	movf	(SPIADCworker@chanel),w
  3798  17DC  00F8               	movwf	(??_SPIADCworker+0)+0
  3799  17DD  3004               	movlw	04h
  3800  17DE                     u4135:
  3801  17DE  36F8               	lsrf	(??_SPIADCworker+0)+0,f
  3802  17DF  0B89               	decfsz	wreg,f
  3803  17E0  2FDE               	goto	u4135
  3804  17E1  0878               	movf	0+(??_SPIADCworker+0)+0,w
  3805  17E2  00F9               	movwf	(??_SPIADCworker+1)+0
  3806  17E3  0879               	movf	(??_SPIADCworker+1)+0,w
  3807  17E4  00C0               	movwf	(SPIADCworker@chanel)
  3808                           	line	283
  3809                           	
  3810  17E5                     l19240:	
  3811                           ;spi.c: 283: SSP2BUF = getADC(chanel);
  3812  17E5  0840               	movf	(SPIADCworker@chanel),w
  3813  17E6  318A  2203  3197   	fcall	_getADC
  3814  17E9  0873               	movf	(0+(?_getADC)),w
  3815  17EA  0024               	movlb 4	; select bank4
  3816  17EB  0099               	movwf	(537)^0200h	;volatile
  3817  17EC  2FF0               	goto	l19242
  3818                           	line	284
  3819                           	
  3820  17ED                     l5008:	
  3821  17ED  2FF0               	goto	l19242
  3822                           	line	286
  3823                           	
  3824  17EE                     l5007:	
  3825  17EE  2FF0               	goto	l19242
  3826                           	
  3827  17EF                     l5004:	
  3828  17EF  2FF0               	goto	l19242
  3829                           	line	287
  3830                           	
  3831  17F0                     l5002:	
  3832                           	line	268
  3833                           	
  3834  17F0                     l19242:	
  3835  17F0  0020               	movlb 0	; select bank0
  3836  17F1  1C0E               	btfss	(14),0	;volatile
  3837  17F2  2FF4               	goto	u4141
  3838  17F3  2FF5               	goto	u4140
  3839  17F4                     u4141:
  3840  17F4  2FAF               	goto	l5003
  3841  17F5                     u4140:
  3842  17F5  2FF6               	goto	l19244
  3843                           	
  3844  17F6                     l5009:	
  3845                           	line	288
  3846                           	
  3847  17F6                     l19244:	
  3848                           ;spi.c: 284: }
  3849                           ;spi.c: 286: }
  3850                           ;spi.c: 287: }
  3851                           ;spi.c: 288: if(bf)
  3852  17F6  083F               	movf	(SPIADCworker@bf),w
  3853  17F7  1D03               	skipz
  3854  17F8  2FFA               	goto	u4150
  3855  17F9  2FF0               	goto	l19242
  3856  17FA                     u4150:
  3857                           	line	290
  3858                           	
  3859  17FA                     l19246:	
  3860                           ;spi.c: 289: {
  3861                           ;spi.c: 290: fb=0;
  3862  17FA  01C1               	clrf	(SPIADCworker@fb)
  3863                           	line	291
  3864                           ;spi.c: 291: bf=0;
  3865  17FB  01BF               	clrf	(SPIADCworker@bf)
  3866  17FC  2FF0               	goto	l19242
  3867                           	line	292
  3868                           	
  3869  17FD                     l5010:	
  3870  17FD  2FF0               	goto	l19242
  3871                           	line	293
  3872                           	
  3873  17FE                     l5011:	
  3874                           	line	266
  3875  17FE  2FF0               	goto	l19242
  3876                           	
  3877  17FF                     l5012:	
  3878                           	line	294
  3879                           	
  3880  17FF                     l5013:	
  3881  17FF  0008               	return
  3882                           	opt stack 0
  3883                           GLOBAL	__end_of_SPIADCworker
  3884  1800                     	__end_of_SPIADCworker:
  3885 ;; =============== function _SPIADCworker ends ============
  3886                           
  3887                           	signat	_SPIADCworker,88
  3888                           	global	_SPIDACworker
  3889                           	global	_I2CDACworker
  3890                           psect	text1302,local,class=CODE,delta=2
  3891                           global __ptext1302
  3892  0B1F                     __ptext1302:
  3893                           
  3894 ;; *************** function _I2CDACworker *****************
  3895 ;; Defined at:
  3896 ;;		line 164 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  dac             1    9[COMMON] unsigned char 
  3901 ;;  command         1    8[COMMON] unsigned char 
  3902 ;;  token           1    7[COMMON] unsigned char 
  3903 ;;  fb              1    6[COMMON] unsigned char 
  3904 ;;  temp            1    5[COMMON] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3915 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3918 ;;Total ram usage:        6 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    2
  3921 ;; This function calls:
  3922 ;;		_enableDAC
  3923 ;;		_setDAC
  3924 ;;		_I2CWrite
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           psect	text1302
  3930                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  3931                           	line	164
  3932                           	global	__size_of_I2CDACworker
  3933  0094                     	__size_of_I2CDACworker	equ	__end_of_I2CDACworker-_I2CDACworker
  3934                           	
  3935  0B1F                     _I2CDACworker:	
  3936                           	opt	stack 13
  3937                           ; Regs used in _I2CDACworker: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3938                           	
  3939  0B1F                     l18972:	
  3940  0B1F  01F8               	clrf	(I2CDACworker@command)
  3941  0B20  01F6               	clrf	(I2CDACworker@fb)
  3942                           	line	166
  3943                           ;i2c.c: 166: dac=0x00;
  3944  0B21  01F9               	clrf	(I2CDACworker@dac)
  3945                           	line	167
  3946                           	
  3947  0B22                     l18974:	
  3948                           ;i2c.c: 167: enableDAC();
  3949  0B22  3194  24C4  318B   	fcall	_enableDAC
  3950                           	line	170
  3951                           	
  3952  0B25                     l18976:	
  3953                           ;i2c.c: 170: SSP2ADD=0x5C;
  3954  0B25  305C               	movlw	(05Ch)
  3955  0B26  0024               	movlb 4	; select bank4
  3956  0B27  009A               	movwf	(538)^0200h	;volatile
  3957  0B28  2B29               	goto	l18978
  3958                           	line	172
  3959                           ;i2c.c: 172: while(1)
  3960                           	
  3961  0B29                     l3284:	
  3962                           	line	175
  3963                           	
  3964  0B29                     l18978:	
  3965                           ;i2c.c: 173: {
  3966                           ;i2c.c: 175: if(SSP2IF)
  3967  0B29  0020               	movlb 0	; select bank0
  3968  0B2A  1C14               	btfss	(160/8),(160)&7
  3969  0B2B  2B2D               	goto	u3781
  3970  0B2C  2B2E               	goto	u3780
  3971  0B2D                     u3781:
  3972  0B2D  2B29               	goto	l18978
  3973  0B2E                     u3780:
  3974                           	line	177
  3975                           	
  3976  0B2E                     l18980:	
  3977                           ;i2c.c: 176: {
  3978                           ;i2c.c: 177: token=SSP2STAT&0x25;
  3979  0B2E  0024               	movlb 4	; select bank4
  3980  0B2F  081C               	movf	(540)^0200h,w
  3981  0B30  3925               	andlw	025h
  3982  0B31  00F4               	movwf	(??_I2CDACworker+0)+0
  3983  0B32  0874               	movf	(??_I2CDACworker+0)+0,w
  3984  0B33  00F7               	movwf	(I2CDACworker@token)
  3985                           	line	179
  3986                           	
  3987  0B34                     l18982:	
  3988                           ;i2c.c: 179: if(SSP2STATbits.S)
  3989  0B34  1D9C               	btfss	(540)^0200h,3	;volatile
  3990  0B35  2B37               	goto	u3791
  3991  0B36  2B38               	goto	u3790
  3992  0B37                     u3791:
  3993  0B37  2BA1               	goto	l3286
  3994  0B38                     u3790:
  3995                           	line	180
  3996                           	
  3997  0B38                     l18984:	
  3998                           ;i2c.c: 180: { RC5=1;;
  3999  0B38  0020               	movlb 0	; select bank0
  4000  0B39  168E               	bsf	(117/8),(117)&7
  4001                           	line	181
  4002                           ;i2c.c: 181: switch(token)
  4003  0B3A  2B92               	goto	l19018
  4004                           	line	183
  4005                           ;i2c.c: 182: {
  4006                           ;i2c.c: 183: case 0x01:
  4007                           	
  4008  0B3B                     l3288:	
  4009                           	line	184
  4010                           	
  4011  0B3B                     l18986:	
  4012                           ;i2c.c: 184: temp=SSP2BUF;
  4013  0B3B  0024               	movlb 4	; select bank4
  4014  0B3C  0819               	movf	(537)^0200h,w	;volatile
  4015  0B3D  00F4               	movwf	(??_I2CDACworker+0)+0
  4016  0B3E  0874               	movf	(??_I2CDACworker+0)+0,w
  4017  0B3F  00F5               	movwf	(I2CDACworker@temp)
  4018                           	line	185
  4019                           ;i2c.c: 185: break;
  4020  0B40  2BAA               	goto	l3301
  4021                           	line	186
  4022                           ;i2c.c: 186: case 0x21:
  4023                           	
  4024  0B41                     l3290:	
  4025                           	line	187
  4026                           ;i2c.c: 187: if(fb=0)
  4027  0B41  01F6               	clrf	(I2CDACworker@fb)
  4028  0B42  2B4C               	goto	l18992
  4029                           	line	189
  4030                           	
  4031  0B43                     l18988:	
  4032                           ;i2c.c: 188: {
  4033                           ;i2c.c: 189: command = SSP2BUF;
  4034  0B43  0024               	movlb 4	; select bank4
  4035  0B44  0819               	movf	(537)^0200h,w	;volatile
  4036  0B45  00F4               	movwf	(??_I2CDACworker+0)+0
  4037  0B46  0874               	movf	(??_I2CDACworker+0)+0,w
  4038  0B47  00F8               	movwf	(I2CDACworker@command)
  4039                           	line	190
  4040                           	
  4041  0B48                     l18990:	
  4042                           ;i2c.c: 190: fb=1;
  4043  0B48  01F6               	clrf	(I2CDACworker@fb)
  4044  0B49  1403               	bsf	status,0
  4045  0B4A  0DF6               	rlf	(I2CDACworker@fb),f
  4046                           	line	191
  4047                           ;i2c.c: 191: }
  4048  0B4B  2BAA               	goto	l3301
  4049                           	line	192
  4050                           	
  4051  0B4C                     l3291:	
  4052                           	line	194
  4053                           	
  4054  0B4C                     l18992:	
  4055                           ;i2c.c: 192: else
  4056                           ;i2c.c: 193: {
  4057                           ;i2c.c: 194: if(command ==0)
  4058  0B4C  08F8               	movf	(I2CDACworker@command),f
  4059  0B4D  1D03               	skipz
  4060  0B4E  2B50               	goto	u3801
  4061  0B4F  2B51               	goto	u3800
  4062  0B50                     u3801:
  4063  0B50  2B5D               	goto	l18998
  4064  0B51                     u3800:
  4065                           	line	196
  4066                           	
  4067  0B51                     l18994:	
  4068                           ;i2c.c: 195: {
  4069                           ;i2c.c: 196: dac=SSP2BUF;
  4070  0B51  0024               	movlb 4	; select bank4
  4071  0B52  0819               	movf	(537)^0200h,w	;volatile
  4072  0B53  00F4               	movwf	(??_I2CDACworker+0)+0
  4073  0B54  0874               	movf	(??_I2CDACworker+0)+0,w
  4074  0B55  00F9               	movwf	(I2CDACworker@dac)
  4075                           	line	197
  4076                           ;i2c.c: 197: dac>>=1;
  4077  0B56  1003               	clrc
  4078  0B57  0CF9               	rrf	(I2CDACworker@dac),f
  4079                           
  4080                           	line	198
  4081                           	
  4082  0B58                     l18996:	
  4083                           ;i2c.c: 198: setDAC(dac);
  4084  0B58  0879               	movf	(I2CDACworker@dac),w
  4085  0B59  3194  24CD  318B   	fcall	_setDAC
  4086                           	line	199
  4087                           ;i2c.c: 199: }
  4088  0B5C  2BAA               	goto	l3301
  4089                           	line	200
  4090                           	
  4091  0B5D                     l3293:	
  4092                           	
  4093  0B5D                     l18998:	
  4094                           ;i2c.c: 200: else temp=SSP2BUF;
  4095  0B5D  0024               	movlb 4	; select bank4
  4096  0B5E  0819               	movf	(537)^0200h,w	;volatile
  4097  0B5F  00F4               	movwf	(??_I2CDACworker+0)+0
  4098  0B60  0874               	movf	(??_I2CDACworker+0)+0,w
  4099  0B61  00F5               	movwf	(I2CDACworker@temp)
  4100  0B62  2BAA               	goto	l3301
  4101                           	
  4102  0B63                     l3294:	
  4103  0B63  2BAA               	goto	l3301
  4104                           	line	201
  4105                           	
  4106  0B64                     l3292:	
  4107                           	line	202
  4108                           ;i2c.c: 201: }
  4109                           ;i2c.c: 202: break;
  4110  0B64  2BAA               	goto	l3301
  4111                           	line	203
  4112                           ;i2c.c: 203: case 0x05:
  4113                           	
  4114  0B65                     l3295:	
  4115                           	line	204
  4116                           	
  4117  0B65                     l19000:	
  4118                           ;i2c.c: 204: temp=SSP2BUF;
  4119  0B65  0024               	movlb 4	; select bank4
  4120  0B66  0819               	movf	(537)^0200h,w	;volatile
  4121  0B67  00F4               	movwf	(??_I2CDACworker+0)+0
  4122  0B68  0874               	movf	(??_I2CDACworker+0)+0,w
  4123  0B69  00F5               	movwf	(I2CDACworker@temp)
  4124                           	line	205
  4125                           	
  4126  0B6A                     l19002:	
  4127                           ;i2c.c: 205: if(command==0)I2CWrite(dac<<1);
  4128  0B6A  08F8               	movf	(I2CDACworker@command),f
  4129  0B6B  1D03               	skipz
  4130  0B6C  2B6E               	goto	u3811
  4131  0B6D  2B6F               	goto	u3810
  4132  0B6E                     u3811:
  4133  0B6E  2B75               	goto	l19006
  4134  0B6F                     u3810:
  4135                           	
  4136  0B6F                     l19004:	
  4137  0B6F  0879               	movf	(I2CDACworker@dac),w
  4138  0B70  0709               	addwf	wreg,w
  4139  0B71  3194  24EF  318B   	fcall	_I2CWrite
  4140  0B74  2BAA               	goto	l3301
  4141                           	line	206
  4142                           	
  4143  0B75                     l3296:	
  4144                           	
  4145  0B75                     l19006:	
  4146                           ;i2c.c: 206: else I2CWrite(0);
  4147  0B75  3000               	movlw	(0)
  4148  0B76  3194  24EF  318B   	fcall	_I2CWrite
  4149  0B79  2BAA               	goto	l3301
  4150                           	
  4151  0B7A                     l3297:	
  4152                           	line	207
  4153                           ;i2c.c: 207: break;
  4154  0B7A  2BAA               	goto	l3301
  4155                           	line	208
  4156                           ;i2c.c: 208: case 0x24:
  4157                           	
  4158  0B7B                     l3298:	
  4159                           	line	209
  4160                           	
  4161  0B7B                     l19008:	
  4162                           ;i2c.c: 209: temp=SSP2BUF;
  4163  0B7B  0024               	movlb 4	; select bank4
  4164  0B7C  0819               	movf	(537)^0200h,w	;volatile
  4165  0B7D  00F4               	movwf	(??_I2CDACworker+0)+0
  4166  0B7E  0874               	movf	(??_I2CDACworker+0)+0,w
  4167  0B7F  00F5               	movwf	(I2CDACworker@temp)
  4168                           	line	210
  4169                           	
  4170  0B80                     l19010:	
  4171                           ;i2c.c: 210: if(command==0)I2CWrite(dac<<1);
  4172  0B80  08F8               	movf	(I2CDACworker@command),f
  4173  0B81  1D03               	skipz
  4174  0B82  2B84               	goto	u3821
  4175  0B83  2B85               	goto	u3820
  4176  0B84                     u3821:
  4177  0B84  2B8B               	goto	l19014
  4178  0B85                     u3820:
  4179                           	
  4180  0B85                     l19012:	
  4181  0B85  0879               	movf	(I2CDACworker@dac),w
  4182  0B86  0709               	addwf	wreg,w
  4183  0B87  3194  24EF  318B   	fcall	_I2CWrite
  4184  0B8A  2BAA               	goto	l3301
  4185                           	line	211
  4186                           	
  4187  0B8B                     l3299:	
  4188                           	
  4189  0B8B                     l19014:	
  4190                           ;i2c.c: 211: else I2CWrite(0);
  4191  0B8B  3000               	movlw	(0)
  4192  0B8C  3194  24EF  318B   	fcall	_I2CWrite
  4193  0B8F  2BAA               	goto	l3301
  4194                           	
  4195  0B90                     l3300:	
  4196                           	line	212
  4197                           ;i2c.c: 212: break;
  4198  0B90  2BAA               	goto	l3301
  4199                           	line	213
  4200                           	
  4201  0B91                     l19016:	
  4202                           ;i2c.c: 213: }
  4203  0B91  2BAA               	goto	l3301
  4204                           	line	181
  4205                           	
  4206  0B92                     l3287:	
  4207                           	
  4208  0B92                     l19018:	
  4209  0B92  0877               	movf	(I2CDACworker@token),w
  4210                           	; Switch size 1, requested type "space"
  4211                           ; Number of cases is 4, Range of values is 1 to 36
  4212                           ; switch strategies available:
  4213                           ; Name         Instructions Cycles
  4214                           ; simple_byte           13     7 (average)
  4215                           ; direct_byte           81     9 (fixed)
  4216                           ; jumptable            263     9 (fixed)
  4217                           ;	Chosen strategy is simple_byte
  4218                           
  4219                           	opt asmopt_off
  4220  0B93  3A01               	xorlw	1^0	; case 1
  4221  0B94  1903               	skipnz
  4222  0B95  2B3B               	goto	l18986
  4223  0B96  3A04               	xorlw	5^1	; case 5
  4224  0B97  1903               	skipnz
  4225  0B98  2B65               	goto	l19000
  4226  0B99  3A24               	xorlw	33^5	; case 33
  4227  0B9A  1903               	skipnz
  4228  0B9B  2B41               	goto	l3290
  4229  0B9C  3A05               	xorlw	36^33	; case 36
  4230  0B9D  1903               	skipnz
  4231  0B9E  2B7B               	goto	l19008
  4232  0B9F  2BAA               	goto	l3301
  4233                           	opt asmopt_on
  4234                           
  4235                           	line	213
  4236                           	
  4237  0BA0                     l3289:	
  4238                           	line	214
  4239                           ;i2c.c: 214: }
  4240  0BA0  2BAA               	goto	l3301
  4241                           	line	215
  4242                           	
  4243  0BA1                     l3286:	
  4244                           ;i2c.c: 215: else if(SSP2STATbits.P)
  4245  0BA1  1E1C               	btfss	(540)^0200h,4	;volatile
  4246  0BA2  2BA4               	goto	u3831
  4247  0BA3  2BA5               	goto	u3830
  4248  0BA4                     u3831:
  4249  0BA4  2BAA               	goto	l3301
  4250  0BA5                     u3830:
  4251                           	line	217
  4252                           	
  4253  0BA5                     l19020:	
  4254                           ;i2c.c: 216: {
  4255                           ;i2c.c: 217: fb=0;
  4256  0BA5  01F6               	clrf	(I2CDACworker@fb)
  4257                           	line	218
  4258                           ;i2c.c: 218: RC5=0;;
  4259  0BA6  0020               	movlb 0	; select bank0
  4260  0BA7  128E               	bcf	(117/8),(117)&7
  4261                           	line	219
  4262                           # 219 "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  4263  0BA8  0000               NOP ;#
  4264                           psect	text1302
  4265  0BA9  2BAA               	goto	l3301
  4266                           	line	220
  4267                           	
  4268  0BAA                     l3302:	
  4269                           	line	221
  4270                           	
  4271  0BAA                     l3301:	
  4272                           ;i2c.c: 220: }
  4273                           ;i2c.c: 221: SSP2IF=0;
  4274  0BAA  0020               	movlb 0	; select bank0
  4275  0BAB  1014               	bcf	(160/8),(160)&7
  4276                           	line	222
  4277                           ;i2c.c: 222: SSP2CON1bits.SSPEN=1;
  4278  0BAC  0024               	movlb 4	; select bank4
  4279  0BAD  169D               	bsf	(541)^0200h,5	;volatile
  4280                           	line	223
  4281                           ;i2c.c: 223: SSP2CON1bits.CKP=1;
  4282  0BAE  161D               	bsf	(541)^0200h,4	;volatile
  4283  0BAF  2B29               	goto	l18978
  4284                           	line	224
  4285                           	
  4286  0BB0                     l3285:	
  4287  0BB0  2B29               	goto	l18978
  4288                           	line	225
  4289                           	
  4290  0BB1                     l3303:	
  4291                           	line	172
  4292  0BB1  2B29               	goto	l18978
  4293                           	
  4294  0BB2                     l3304:	
  4295                           	line	226
  4296                           	
  4297  0BB2                     l3305:	
  4298  0BB2  0008               	return
  4299                           	opt stack 0
  4300                           GLOBAL	__end_of_I2CDACworker
  4301  0BB3                     	__end_of_I2CDACworker:
  4302 ;; =============== function _I2CDACworker ends ============
  4303                           
  4304                           	signat	_I2CDACworker,88
  4305                           psect	text1303,local,class=CODE,delta=2
  4306                           global __ptext1303
  4307  1628                     __ptext1303:
  4308                           
  4309 ;; *************** function _SPIDACworker *****************
  4310 ;; Defined at:
  4311 ;;		line 224 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  bf              1    6[COMMON] unsigned char 
  4316 ;;  fb              1    5[COMMON] unsigned char 
  4317 ;;  fInst           1    4[COMMON] unsigned char 
  4318 ;;  instruction     1    0        unsigned char 
  4319 ;;  token           1    0        unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;		None               void
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, pclath, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4330 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4333 ;;Total ram usage:        3 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    2
  4336 ;; This function calls:
  4337 ;;		_initSPI
  4338 ;;		_enableDAC
  4339 ;;		_setDAC
  4340 ;; This function is called by:
  4341 ;;		_main
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           psect	text1303
  4345                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  4346                           	line	224
  4347                           	global	__size_of_SPIDACworker
  4348  0045                     	__size_of_SPIDACworker	equ	__end_of_SPIDACworker-_SPIDACworker
  4349                           	
  4350  1628                     _SPIDACworker:	
  4351                           	opt	stack 13
  4352                           ; Regs used in _SPIDACworker: [wreg+status,2+status,0+pclath+cstack]
  4353                           	line	225
  4354                           	
  4355  1628                     l19190:	
  4356                           ;spi.c: 225: unsigned char token, instruction, fInst=0,fb=0,bf=0;
  4357  1628  01F4               	clrf	(SPIDACworker@fInst)
  4358  1629  01F5               	clrf	(SPIDACworker@fb)
  4359  162A  01F6               	clrf	(SPIDACworker@bf)
  4360                           	line	226
  4361                           	
  4362  162B                     l19192:	
  4363                           ;spi.c: 226: initSPI();
  4364  162B  3194  24E4  3196   	fcall	_initSPI
  4365                           	line	227
  4366                           	
  4367  162E                     l19194:	
  4368                           ;spi.c: 227: SSP2BUF = 0xFD;
  4369  162E  30FD               	movlw	(0FDh)
  4370  162F  0024               	movlb 4	; select bank4
  4371  1630  0099               	movwf	(537)^0200h	;volatile
  4372                           	line	228
  4373                           	
  4374  1631                     l19196:	
  4375                           ;spi.c: 228: enableDAC();
  4376  1631  3194  24C4  3196   	fcall	_enableDAC
  4377  1634  2E5D               	goto	l19212
  4378                           	line	230
  4379                           ;spi.c: 230: while (1)
  4380                           	
  4381  1635                     l4986:	
  4382                           	line	232
  4383                           ;spi.c: 231: {
  4384                           ;spi.c: 232: while(PORTCbits.RC0 ==0)
  4385  1635  2E5D               	goto	l19212
  4386                           	
  4387  1636                     l4988:	
  4388                           	line	234
  4389                           ;spi.c: 233: {
  4390                           ;spi.c: 234: if(SSP2STATbits.BF)
  4391  1636  0024               	movlb 4	; select bank4
  4392  1637  1C1C               	btfss	(540)^0200h,0	;volatile
  4393  1638  2E3A               	goto	u4041
  4394  1639  2E3B               	goto	u4040
  4395  163A                     u4041:
  4396  163A  2E5D               	goto	l19212
  4397  163B                     u4040:
  4398                           	line	236
  4399                           	
  4400  163B                     l19198:	
  4401                           ;spi.c: 235: {
  4402                           ;spi.c: 236: bf=1;
  4403  163B  01F6               	clrf	(SPIDACworker@bf)
  4404  163C  1403               	bsf	status,0
  4405  163D  0DF6               	rlf	(SPIDACworker@bf),f
  4406                           	line	237
  4407                           	
  4408  163E                     l19200:	
  4409                           ;spi.c: 237: if(fb)
  4410  163E  0875               	movf	(SPIDACworker@fb),w
  4411  163F  1D03               	skipz
  4412  1640  2E42               	goto	u4050
  4413  1641  2E47               	goto	l19204
  4414  1642                     u4050:
  4415                           	line	239
  4416                           	
  4417  1642                     l19202:	
  4418                           ;spi.c: 238: {
  4419                           ;spi.c: 239: setDAC(SSP2BUF);
  4420  1642  0819               	movf	(537)^0200h,w	;volatile
  4421  1643  3194  24CD  3196   	fcall	_setDAC
  4422                           	line	240
  4423                           ;spi.c: 240: }
  4424  1646  2E56               	goto	l19210
  4425                           	line	241
  4426                           	
  4427  1647                     l4990:	
  4428                           	line	243
  4429                           	
  4430  1647                     l19204:	
  4431                           ;spi.c: 241: else
  4432                           ;spi.c: 242: {
  4433                           ;spi.c: 243: fb=1;
  4434  1647  01F5               	clrf	(SPIDACworker@fb)
  4435  1648  1403               	bsf	status,0
  4436  1649  0DF5               	rlf	(SPIDACworker@fb),f
  4437                           	line	244
  4438                           	
  4439  164A                     l19206:	
  4440                           ;spi.c: 244: if(SSP2BUF&0b00010000)DACOE =1;
  4441  164A  0024               	movlb 4	; select bank4
  4442  164B  1E19               	btfss	(537)^0200h,(4)&7
  4443  164C  2E4E               	goto	u4061
  4444  164D  2E4F               	goto	u4060
  4445  164E                     u4061:
  4446  164E  2E52               	goto	l4992
  4447  164F                     u4060:
  4448                           	
  4449  164F                     l19208:	
  4450  164F  0022               	movlb 2	; select bank2
  4451  1650  1698               	bsf	(2245/8)^0100h,(2245)&7
  4452  1651  2E56               	goto	l19210
  4453                           	line	245
  4454                           	
  4455  1652                     l4992:	
  4456                           ;spi.c: 245: else DACOE =0;
  4457  1652  0022               	movlb 2	; select bank2
  4458  1653  1298               	bcf	(2245/8)^0100h,(2245)&7
  4459  1654  2E56               	goto	l19210
  4460                           	
  4461  1655                     l4993:	
  4462  1655  2E56               	goto	l19210
  4463                           	line	246
  4464                           	
  4465  1656                     l4991:	
  4466                           	line	247
  4467                           	
  4468  1656                     l19210:	
  4469                           ;spi.c: 246: }
  4470                           ;spi.c: 247: SSP2BUF = DACCON1&0x1F;
  4471  1656  0022               	movlb 2	; select bank2
  4472  1657  0819               	movf	(281)^0100h,w
  4473  1658  391F               	andlw	01Fh
  4474  1659  0024               	movlb 4	; select bank4
  4475  165A  0099               	movwf	(537)^0200h	;volatile
  4476  165B  2E5D               	goto	l19212
  4477                           	line	248
  4478                           	
  4479  165C                     l4989:	
  4480  165C  2E5D               	goto	l19212
  4481                           	line	249
  4482                           	
  4483  165D                     l4987:	
  4484                           	line	232
  4485                           	
  4486  165D                     l19212:	
  4487  165D  0020               	movlb 0	; select bank0
  4488  165E  1C0E               	btfss	(14),0	;volatile
  4489  165F  2E61               	goto	u4071
  4490  1660  2E62               	goto	u4070
  4491  1661                     u4071:
  4492  1661  2E36               	goto	l4988
  4493  1662                     u4070:
  4494  1662  2E63               	goto	l19214
  4495                           	
  4496  1663                     l4994:	
  4497                           	line	250
  4498                           	
  4499  1663                     l19214:	
  4500                           ;spi.c: 248: }
  4501                           ;spi.c: 249: }
  4502                           ;spi.c: 250: if(bf)
  4503  1663  0876               	movf	(SPIDACworker@bf),w
  4504  1664  1D03               	skipz
  4505  1665  2E67               	goto	u4080
  4506  1666  2E5D               	goto	l19212
  4507  1667                     u4080:
  4508                           	line	252
  4509                           	
  4510  1667                     l19216:	
  4511                           ;spi.c: 251: {
  4512                           ;spi.c: 252: fb=0;
  4513  1667  01F5               	clrf	(SPIDACworker@fb)
  4514                           	line	253
  4515                           ;spi.c: 253: bf=0;
  4516  1668  01F6               	clrf	(SPIDACworker@bf)
  4517  1669  2E5D               	goto	l19212
  4518                           	line	254
  4519                           	
  4520  166A                     l4995:	
  4521  166A  2E5D               	goto	l19212
  4522                           	line	255
  4523                           	
  4524  166B                     l4996:	
  4525                           	line	230
  4526  166B  2E5D               	goto	l19212
  4527                           	
  4528  166C                     l4997:	
  4529                           	line	257
  4530                           	
  4531  166C                     l4998:	
  4532  166C  0008               	return
  4533                           	opt stack 0
  4534                           GLOBAL	__end_of_SPIDACworker
  4535  166D                     	__end_of_SPIDACworker:
  4536 ;; =============== function _SPIDACworker ends ============
  4537                           
  4538                           	signat	_SPIDACworker,88
  4539                           	global	_SPIEEworker
  4540                           	global	_I2CEEworker
  4541                           psect	text1304,local,class=CODE,delta=2
  4542                           global __ptext1304
  4543  06D8                     __ptext1304:
  4544                           
  4545 ;; *************** function _I2CEEworker *****************
  4546 ;; Defined at:
  4547 ;;		line 29 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  addr            1    8[BANK0 ] unsigned char 
  4552 ;;  i               1    7[BANK0 ] unsigned char 
  4553 ;;  w               1    6[BANK0 ] unsigned char 
  4554 ;;  addressed       1    5[BANK0 ] unsigned char 
  4555 ;;  token           1    4[BANK0 ] unsigned char 
  4556 ;;  temp            1    3[BANK0 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4567 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  4568 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4569 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  4570 ;;Total ram usage:        9 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    2
  4573 ;; This function calls:
  4574 ;;		_EEPROMwrite
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           psect	text1304
  4580                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  4581                           	line	29
  4582                           	global	__size_of_I2CEEworker
  4583  00E4                     	__size_of_I2CEEworker	equ	__end_of_I2CEEworker-_I2CEEworker
  4584                           	
  4585  06D8                     _I2CEEworker:	
  4586                           	opt	stack 13
  4587                           ; Regs used in _I2CEEworker: [wreg-status,0+pclath+cstack]
  4588                           	line	30
  4589                           	
  4590  06D8                     l18858:	
  4591                           ;i2c.c: 30: unsigned char token,i, addr=0, temp=0, addressed=0,w=0;
  4592  06D8  0020               	movlb 0	; select bank0
  4593  06D9  01C2               	clrf	(I2CEEworker@addr)
  4594  06DA  01BD               	clrf	(I2CEEworker@temp)
  4595  06DB  01BF               	clrf	(I2CEEworker@addressed)
  4596  06DC  01C0               	clrf	(I2CEEworker@w)
  4597                           	line	33
  4598                           	
  4599  06DD                     l18860:	
  4600                           ;i2c.c: 33: SSP2ADD=0xA0;
  4601  06DD  30A0               	movlw	(0A0h)
  4602  06DE  0024               	movlb 4	; select bank4
  4603  06DF  009A               	movwf	(538)^0200h	;volatile
  4604                           	line	34
  4605                           	
  4606  06E0                     l18862:	
  4607                           ;i2c.c: 34: SSP2CON1bits.SSPEN=1;
  4608  06E0  169D               	bsf	(541)^0200h,5	;volatile
  4609  06E1  2EE2               	goto	l18864
  4610                           	line	35
  4611                           ;i2c.c: 35: while(1)
  4612                           	
  4613  06E2                     l3243:	
  4614                           	line	38
  4615                           	
  4616  06E2                     l18864:	
  4617                           ;i2c.c: 36: {
  4618                           ;i2c.c: 38: if(SSP2IF)
  4619  06E2  0020               	movlb 0	; select bank0
  4620  06E3  1C14               	btfss	(160/8),(160)&7
  4621  06E4  2EE6               	goto	u3661
  4622  06E5  2EE7               	goto	u3660
  4623  06E6                     u3661:
  4624  06E6  2EE2               	goto	l18864
  4625  06E7                     u3660:
  4626                           	line	40
  4627                           	
  4628  06E7                     l18866:	
  4629                           ;i2c.c: 39: {
  4630                           ;i2c.c: 40: SSP2IF=0;
  4631  06E7  1014               	bcf	(160/8),(160)&7
  4632                           	line	41
  4633                           	
  4634  06E8                     l18868:	
  4635                           ;i2c.c: 41: token=SSP2STAT&0x25;
  4636  06E8  0024               	movlb 4	; select bank4
  4637  06E9  081C               	movf	(540)^0200h,w
  4638  06EA  3925               	andlw	025h
  4639  06EB  0020               	movlb 0	; select bank0
  4640  06EC  00BA               	movwf	(??_I2CEEworker+0)+0
  4641  06ED  083A               	movf	(??_I2CEEworker+0)+0,w
  4642  06EE  00BE               	movwf	(I2CEEworker@token)
  4643                           	line	42
  4644                           	
  4645  06EF                     l18870:	
  4646                           ;i2c.c: 42: if(SSP2STATbits.S)
  4647  06EF  0024               	movlb 4	; select bank4
  4648  06F0  1D9C               	btfss	(540)^0200h,3	;volatile
  4649  06F1  2EF3               	goto	u3671
  4650  06F2  2EF4               	goto	u3670
  4651  06F3                     u3671:
  4652  06F3  2F73               	goto	l3245
  4653  06F4                     u3670:
  4654                           	line	44
  4655                           	
  4656  06F4                     l18872:	
  4657                           ;i2c.c: 43: {
  4658                           ;i2c.c: 44: RC5=1;;
  4659  06F4  0020               	movlb 0	; select bank0
  4660  06F5  168E               	bsf	(117/8),(117)&7
  4661                           	line	45
  4662                           ;i2c.c: 45: switch(token)
  4663  06F6  2F64               	goto	l18904
  4664                           	line	47
  4665                           ;i2c.c: 46: {
  4666                           ;i2c.c: 47: case 0x01:
  4667                           	
  4668  06F7                     l3247:	
  4669                           	line	48
  4670                           	
  4671  06F7                     l18874:	
  4672                           ;i2c.c: 48: temp=SSP2BUF;
  4673  06F7  0024               	movlb 4	; select bank4
  4674  06F8  0819               	movf	(537)^0200h,w	;volatile
  4675  06F9  0020               	movlb 0	; select bank0
  4676  06FA  00BA               	movwf	(??_I2CEEworker+0)+0
  4677  06FB  083A               	movf	(??_I2CEEworker+0)+0,w
  4678  06FC  00BD               	movwf	(I2CEEworker@temp)
  4679                           	line	49
  4680                           ;i2c.c: 49: break;
  4681  06FD  2FB6               	goto	l3255
  4682                           	line	50
  4683                           ;i2c.c: 50: case 0x21:
  4684                           	
  4685  06FE                     l3249:	
  4686                           	line	51
  4687                           	
  4688  06FE                     l18876:	
  4689                           ;i2c.c: 51: if(!addressed)
  4690  06FE  08BF               	movf	(I2CEEworker@addressed),f
  4691  06FF  1D03               	skipz
  4692  0700  2F02               	goto	u3681
  4693  0701  2F03               	goto	u3680
  4694  0702                     u3681:
  4695  0702  2F0D               	goto	l18882
  4696  0703                     u3680:
  4697                           	line	53
  4698                           	
  4699  0703                     l18878:	
  4700                           ;i2c.c: 52: {
  4701                           ;i2c.c: 53: addr=SSP2BUF;
  4702  0703  0024               	movlb 4	; select bank4
  4703  0704  0819               	movf	(537)^0200h,w	;volatile
  4704  0705  0020               	movlb 0	; select bank0
  4705  0706  00BA               	movwf	(??_I2CEEworker+0)+0
  4706  0707  083A               	movf	(??_I2CEEworker+0)+0,w
  4707  0708  00C2               	movwf	(I2CEEworker@addr)
  4708                           	line	54
  4709                           	
  4710  0709                     l18880:	
  4711                           ;i2c.c: 54: addressed=1;
  4712  0709  01BF               	clrf	(I2CEEworker@addressed)
  4713  070A  1403               	bsf	status,0
  4714  070B  0DBF               	rlf	(I2CEEworker@addressed),f
  4715                           	line	55
  4716                           ;i2c.c: 55: }
  4717  070C  2FB6               	goto	l3255
  4718                           	line	56
  4719                           	
  4720  070D                     l3250:	
  4721                           	line	58
  4722                           	
  4723  070D                     l18882:	
  4724                           ;i2c.c: 56: else
  4725                           ;i2c.c: 57: {
  4726                           ;i2c.c: 58: eeBuf[addr++]=SSP2BUF;
  4727  070D  0024               	movlb 4	; select bank4
  4728  070E  0819               	movf	(537)^0200h,w	;volatile
  4729  070F  0020               	movlb 0	; select bank0
  4730  0710  00BA               	movwf	(??_I2CEEworker+0)+0
  4731  0711  0842               	movf	(I2CEEworker@addr),w
  4732  0712  3EF0               	addlw	low 8944
  4733  0713  00BB               	movwf	(??_I2CEEworker+1)+0
  4734  0714  3022               	movlw	high 8944
  4735  0715  1803               	skipnc
  4736  0716  3023               	movlw	high (8944)+1
  4737  0717  00BC               	movwf	((??_I2CEEworker+1)+0)+1
  4738  0718  083B               	movf	0+(??_I2CEEworker+1)+0,w
  4739  0719  0086               	movwf	fsr1l
  4740  071A  083C               	movf	1+(??_I2CEEworker+1)+0,w
  4741  071B  0087               	movwf	fsr1h
  4742                           
  4743  071C  083A               	movf	(??_I2CEEworker+0)+0,w
  4744  071D  0081               	movwf	indf1
  4745                           	
  4746  071E                     l18884:	
  4747  071E  3001               	movlw	(01h)
  4748  071F  00BA               	movwf	(??_I2CEEworker+0)+0
  4749  0720  083A               	movf	(??_I2CEEworker+0)+0,w
  4750  0721  07C2               	addwf	(I2CEEworker@addr),f
  4751                           	line	59
  4752                           	
  4753  0722                     l18886:	
  4754                           ;i2c.c: 59: w++;
  4755  0722  3001               	movlw	(01h)
  4756  0723  00BA               	movwf	(??_I2CEEworker+0)+0
  4757  0724  083A               	movf	(??_I2CEEworker+0)+0,w
  4758  0725  07C0               	addwf	(I2CEEworker@w),f
  4759  0726  2FB6               	goto	l3255
  4760                           	line	60
  4761                           	
  4762  0727                     l3251:	
  4763                           	line	61
  4764                           ;i2c.c: 60: }
  4765                           ;i2c.c: 61: break;
  4766  0727  2FB6               	goto	l3255
  4767                           	line	62
  4768                           ;i2c.c: 62: case 0x05:
  4769                           	
  4770  0728                     l3252:	
  4771                           	line	63
  4772                           	
  4773  0728                     l18888:	
  4774                           ;i2c.c: 63: temp=SSP2BUF;
  4775  0728  0024               	movlb 4	; select bank4
  4776  0729  0819               	movf	(537)^0200h,w	;volatile
  4777  072A  0020               	movlb 0	; select bank0
  4778  072B  00BA               	movwf	(??_I2CEEworker+0)+0
  4779  072C  083A               	movf	(??_I2CEEworker+0)+0,w
  4780  072D  00BD               	movwf	(I2CEEworker@temp)
  4781                           	line	64
  4782                           	
  4783  072E                     l18890:	
  4784                           ;i2c.c: 64: SSP2BUF = eeBuf[addr++];
  4785  072E  0842               	movf	(I2CEEworker@addr),w
  4786  072F  3EF0               	addlw	low 8944
  4787  0730  00BA               	movwf	(??_I2CEEworker+0)+0
  4788  0731  3022               	movlw	high 8944
  4789  0732  1803               	skipnc
  4790  0733  3023               	movlw	high (8944)+1
  4791  0734  00BB               	movwf	((??_I2CEEworker+0)+0)+1
  4792  0735  083A               	movf	0+(??_I2CEEworker+0)+0,w
  4793  0736  0086               	movwf	fsr1l
  4794  0737  083B               	movf	1+(??_I2CEEworker+0)+0,w
  4795  0738  0087               	movwf	fsr1h
  4796                           
  4797  0739  0801               	movf	indf1,w
  4798  073A  0024               	movlb 4	; select bank4
  4799  073B  0099               	movwf	(537)^0200h	;volatile
  4800                           	
  4801  073C                     l18892:	
  4802  073C  3001               	movlw	(01h)
  4803  073D  0020               	movlb 0	; select bank0
  4804  073E  00BA               	movwf	(??_I2CEEworker+0)+0
  4805  073F  083A               	movf	(??_I2CEEworker+0)+0,w
  4806  0740  07C2               	addwf	(I2CEEworker@addr),f
  4807                           	line	65
  4808                           ;i2c.c: 65: break;
  4809  0741  2FB6               	goto	l3255
  4810                           	line	66
  4811                           ;i2c.c: 66: case 0x24:
  4812                           	
  4813  0742                     l3253:	
  4814                           	line	67
  4815                           	
  4816  0742                     l18894:	
  4817                           ;i2c.c: 67: temp=SSP2BUF;
  4818  0742  0024               	movlb 4	; select bank4
  4819  0743  0819               	movf	(537)^0200h,w	;volatile
  4820  0744  0020               	movlb 0	; select bank0
  4821  0745  00BA               	movwf	(??_I2CEEworker+0)+0
  4822  0746  083A               	movf	(??_I2CEEworker+0)+0,w
  4823  0747  00BD               	movwf	(I2CEEworker@temp)
  4824                           	line	69
  4825                           	
  4826  0748                     l18896:	
  4827                           ;i2c.c: 69: if(SSP2CON2bits.ACKSTAT==0)SSP2BUF=eeBuf[addr++];
  4828  0748  0024               	movlb 4	; select bank4
  4829  0749  1B1E               	btfsc	(542)^0200h,6	;volatile
  4830  074A  2F4C               	goto	u3691
  4831  074B  2F4D               	goto	u3690
  4832  074C                     u3691:
  4833  074C  2FB6               	goto	l3255
  4834  074D                     u3690:
  4835                           	
  4836  074D                     l18898:	
  4837  074D  0020               	movlb 0	; select bank0
  4838  074E  0842               	movf	(I2CEEworker@addr),w
  4839  074F  3EF0               	addlw	low 8944
  4840  0750  00BA               	movwf	(??_I2CEEworker+0)+0
  4841  0751  3022               	movlw	high 8944
  4842  0752  1803               	skipnc
  4843  0753  3023               	movlw	high (8944)+1
  4844  0754  00BB               	movwf	((??_I2CEEworker+0)+0)+1
  4845  0755  083A               	movf	0+(??_I2CEEworker+0)+0,w
  4846  0756  0086               	movwf	fsr1l
  4847  0757  083B               	movf	1+(??_I2CEEworker+0)+0,w
  4848  0758  0087               	movwf	fsr1h
  4849                           
  4850  0759  0801               	movf	indf1,w
  4851  075A  0024               	movlb 4	; select bank4
  4852  075B  0099               	movwf	(537)^0200h	;volatile
  4853                           	
  4854  075C                     l18900:	
  4855  075C  3001               	movlw	(01h)
  4856  075D  0020               	movlb 0	; select bank0
  4857  075E  00BA               	movwf	(??_I2CEEworker+0)+0
  4858  075F  083A               	movf	(??_I2CEEworker+0)+0,w
  4859  0760  07C2               	addwf	(I2CEEworker@addr),f
  4860  0761  2FB6               	goto	l3255
  4861                           	
  4862  0762                     l3254:	
  4863                           	line	70
  4864                           ;i2c.c: 70: break;
  4865  0762  2FB6               	goto	l3255
  4866                           	line	71
  4867                           	
  4868  0763                     l18902:	
  4869                           ;i2c.c: 71: }
  4870  0763  2FB6               	goto	l3255
  4871                           	line	45
  4872                           	
  4873  0764                     l3246:	
  4874                           	
  4875  0764                     l18904:	
  4876  0764  083E               	movf	(I2CEEworker@token),w
  4877                           	; Switch size 1, requested type "space"
  4878                           ; Number of cases is 4, Range of values is 1 to 36
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte           13     7 (average)
  4882                           ; direct_byte           81     9 (fixed)
  4883                           ; jumptable            263     9 (fixed)
  4884                           ;	Chosen strategy is simple_byte
  4885                           
  4886                           	opt asmopt_off
  4887  0765  3A01               	xorlw	1^0	; case 1
  4888  0766  1903               	skipnz
  4889  0767  2EF7               	goto	l18874
  4890  0768  3A04               	xorlw	5^1	; case 5
  4891  0769  1903               	skipnz
  4892  076A  2F28               	goto	l18888
  4893  076B  3A24               	xorlw	33^5	; case 33
  4894  076C  1903               	skipnz
  4895  076D  2EFE               	goto	l18876
  4896  076E  3A05               	xorlw	36^33	; case 36
  4897  076F  1903               	skipnz
  4898  0770  2F42               	goto	l18894
  4899  0771  2FB6               	goto	l3255
  4900                           	opt asmopt_on
  4901                           
  4902                           	line	71
  4903                           	
  4904  0772                     l3248:	
  4905                           	line	72
  4906                           ;i2c.c: 72: }
  4907  0772  2FB6               	goto	l3255
  4908                           	line	73
  4909                           	
  4910  0773                     l3245:	
  4911                           ;i2c.c: 73: else if(SSP2STATbits.P)
  4912  0773  1E1C               	btfss	(540)^0200h,4	;volatile
  4913  0774  2F76               	goto	u3701
  4914  0775  2F77               	goto	u3700
  4915  0776                     u3701:
  4916  0776  2FB6               	goto	l3255
  4917  0777                     u3700:
  4918                           	line	75
  4919                           	
  4920  0777                     l18906:	
  4921                           ;i2c.c: 74: {
  4922                           ;i2c.c: 75: RC5=0;;
  4923  0777  0020               	movlb 0	; select bank0
  4924  0778  128E               	bcf	(117/8),(117)&7
  4925                           	line	76
  4926                           ;i2c.c: 76: addressed=0;
  4927  0779  01BF               	clrf	(I2CEEworker@addressed)
  4928                           	line	77
  4929                           	
  4930  077A                     l18908:	
  4931                           ;i2c.c: 77: if(w>0)
  4932  077A  0840               	movf	(I2CEEworker@w),w
  4933  077B  1D03               	skipz
  4934  077C  2F7E               	goto	u3710
  4935  077D  2FB2               	goto	l3257
  4936  077E                     u3710:
  4937                           	line	79
  4938                           	
  4939  077E                     l18910:	
  4940                           ;i2c.c: 78: {
  4941                           ;i2c.c: 79: for(i=addr-w;i<addr-1;i++)
  4942  077E  0340               	decf	(I2CEEworker@w),w
  4943  077F  3AFF               	xorlw	0ffh
  4944  0780  0742               	addwf	(I2CEEworker@addr),w
  4945  0781  00BA               	movwf	(??_I2CEEworker+0)+0
  4946  0782  083A               	movf	(??_I2CEEworker+0)+0,w
  4947  0783  00C1               	movwf	(I2CEEworker@i)
  4948  0784  2F9F               	goto	l18916
  4949                           	line	80
  4950                           	
  4951  0785                     l3259:	
  4952                           	line	81
  4953                           	
  4954  0785                     l18912:	
  4955                           ;i2c.c: 80: {
  4956                           ;i2c.c: 81: EEPROMwrite(i,eeBuf[i]);
  4957  0785  0020               	movlb 0	; select bank0
  4958  0786  0841               	movf	(I2CEEworker@i),w
  4959  0787  3EF0               	addlw	low 8944
  4960  0788  00BA               	movwf	(??_I2CEEworker+0)+0
  4961  0789  3022               	movlw	high 8944
  4962  078A  1803               	skipnc
  4963  078B  3023               	movlw	high (8944)+1
  4964  078C  00BB               	movwf	((??_I2CEEworker+0)+0)+1
  4965  078D  083A               	movf	0+(??_I2CEEworker+0)+0,w
  4966  078E  0086               	movwf	fsr1l
  4967  078F  083B               	movf	1+(??_I2CEEworker+0)+0,w
  4968  0790  0087               	movwf	fsr1h
  4969                           
  4970  0791  0801               	movf	indf1,w
  4971  0792  00BC               	movwf	(??_I2CEEworker+2)+0
  4972  0793  083C               	movf	(??_I2CEEworker+2)+0,w
  4973  0794  00F7               	movwf	(?_EEPROMwrite)
  4974  0795  0841               	movf	(I2CEEworker@i),w
  4975  0796  3195  2553  3186   	fcall	_EEPROMwrite
  4976                           	line	79
  4977                           	
  4978  0799                     l18914:	
  4979  0799  3001               	movlw	(01h)
  4980  079A  0020               	movlb 0	; select bank0
  4981  079B  00BA               	movwf	(??_I2CEEworker+0)+0
  4982  079C  083A               	movf	(??_I2CEEworker+0)+0,w
  4983  079D  07C1               	addwf	(I2CEEworker@i),f
  4984  079E  2F9F               	goto	l18916
  4985                           	
  4986  079F                     l3258:	
  4987                           	
  4988  079F                     l18916:	
  4989  079F  0842               	movf	(I2CEEworker@addr),w
  4990  07A0  3EFF               	addlw	low(-1)
  4991  07A1  00BA               	movwf	(??_I2CEEworker+0)+0
  4992  07A2  30FF               	movlw	high(-1)
  4993  07A3  1803               	skipnc
  4994  07A4  3000               	movlw	(high(-1)+1)&0ffh
  4995  07A5  00BB               	movwf	((??_I2CEEworker+0)+0)+1
  4996  07A6  083B               	movf	1+(??_I2CEEworker+0)+0,w
  4997  07A7  3A80               	xorlw	80h
  4998  07A8  3C80               	sublw	080h
  4999  07A9  1D03               	skipz
  5000  07AA  2FAD               	goto	u3725
  5001  07AB  083A               	movf	0+(??_I2CEEworker+0)+0,w
  5002  07AC  0241               	subwf	(I2CEEworker@i),w
  5003  07AD                     u3725:
  5004                           
  5005  07AD  1C03               	skipc
  5006  07AE  2FB0               	goto	u3721
  5007  07AF  2FB1               	goto	u3720
  5008  07B0                     u3721:
  5009  07B0  2F85               	goto	l18912
  5010  07B1                     u3720:
  5011  07B1  2FB2               	goto	l3257
  5012                           	
  5013  07B2                     l3260:	
  5014                           	line	83
  5015                           	
  5016  07B2                     l3257:	
  5017                           	line	84
  5018                           ;i2c.c: 82: }
  5019                           ;i2c.c: 83: }
  5020                           ;i2c.c: 84: w=0;
  5021  07B2  0020               	movlb 0	; select bank0
  5022  07B3  01C0               	clrf	(I2CEEworker@w)
  5023                           	line	85
  5024                           # 85 "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  5025  07B4  0000               NOP ;#
  5026                           psect	text1304
  5027  07B5  2FB6               	goto	l3255
  5028                           	line	86
  5029                           	
  5030  07B6                     l3256:	
  5031                           	line	87
  5032                           	
  5033  07B6                     l3255:	
  5034                           ;i2c.c: 86: }
  5035                           ;i2c.c: 87: SSP2CON1bits.CKP=1;
  5036  07B6  0024               	movlb 4	; select bank4
  5037  07B7  161D               	bsf	(541)^0200h,4	;volatile
  5038  07B8  2EE2               	goto	l18864
  5039                           	line	88
  5040                           	
  5041  07B9                     l3244:	
  5042  07B9  2EE2               	goto	l18864
  5043                           	line	89
  5044                           	
  5045  07BA                     l3261:	
  5046                           	line	35
  5047  07BA  2EE2               	goto	l18864
  5048                           	
  5049  07BB                     l3262:	
  5050                           	line	90
  5051                           	
  5052  07BB                     l3263:	
  5053  07BB  0008               	return
  5054                           	opt stack 0
  5055                           GLOBAL	__end_of_I2CEEworker
  5056  07BC                     	__end_of_I2CEEworker:
  5057 ;; =============== function _I2CEEworker ends ============
  5058                           
  5059                           	signat	_I2CEEworker,88
  5060                           psect	text1305,local,class=CODE,delta=2
  5061                           global __ptext1305
  5062  0BB3                     __ptext1305:
  5063                           
  5064 ;; *************** function _SPIEEworker *****************
  5065 ;; Defined at:
  5066 ;;		line 38 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  addr            1   16[BANK0 ] unsigned char 
  5071 ;;  STATUS          1   15[BANK0 ] unsigned char 
  5072 ;;  fInst           1   14[BANK0 ] unsigned char 
  5073 ;;  i               1   13[BANK0 ] unsigned char 
  5074 ;;  w               1   12[BANK0 ] unsigned char 
  5075 ;;  addressed       1   11[BANK0 ] unsigned char 
  5076 ;;  token           1   10[BANK0 ] unsigned char 
  5077 ;;  WREN            1    9[BANK0 ] unsigned char 
  5078 ;;  bf              1    8[BANK0 ] unsigned char 
  5079 ;;  fb              1    7[BANK0 ] unsigned char 
  5080 ;;  instruction     1    6[BANK0 ] unsigned char 
  5081 ;;  WIP             1    5[BANK0 ] unsigned char 
  5082 ;;  pageIndex       1    4[BANK0 ] unsigned char 
  5083 ;;  fb2             1    3[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;		None               void
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5094 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  5095 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5096 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
       0       0
  5097 ;;Total ram usage:       17 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    2
  5100 ;; This function calls:
  5101 ;;		_initSPI
  5102 ;;		_EEPROMwrite
  5103 ;; This function is called by:
  5104 ;;		_main
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           psect	text1305
  5108                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  5109                           	line	38
  5110                           	global	__size_of_SPIEEworker
  5111  018F                     	__size_of_SPIEEworker	equ	__end_of_SPIEEworker-_SPIEEworker
  5112                           	
  5113  0BB3                     _SPIEEworker:	
  5114                           	opt	stack 13
  5115                           ; Regs used in _SPIEEworker: [wreg-status,0+pclath+cstack]
  5116                           	line	39
  5117                           	
  5118  0BB3                     l19066:	
  5119                           ;spi.c: 39: unsigned char token, instruction, fInst=0,addr=0,addressed =0,STATUS=0,fb=0,
                                 fb2=0,bf=0;
  5120  0BB3  0020               	movlb 0	; select bank0
  5121  0BB4  01C8               	clrf	(SPIEEworker@fInst)
  5122  0BB5  01CA               	clrf	(SPIEEworker@addr)
  5123  0BB6  01C5               	clrf	(SPIEEworker@addressed)
  5124  0BB7  01C9               	clrf	(SPIEEworker@STATUS)
  5125  0BB8  01C1               	clrf	(SPIEEworker@fb)
  5126  0BB9  01BD               	clrf	(SPIEEworker@fb2)
  5127  0BBA  01C2               	clrf	(SPIEEworker@bf)
  5128                           	line	40
  5129                           ;spi.c: 40: unsigned char i,pageIndex=0,WREN=0,WIP=0,w=0;
  5130  0BBB  01BE               	clrf	(SPIEEworker@pageIndex)
  5131  0BBC  01C3               	clrf	(SPIEEworker@WREN)
  5132  0BBD  01BF               	clrf	(SPIEEworker@WIP)
  5133  0BBE  01C6               	clrf	(SPIEEworker@w)
  5134                           	line	41
  5135                           	
  5136  0BBF                     l19068:	
  5137                           ;spi.c: 41: initSPI();
  5138  0BBF  3194  24E4  318B   	fcall	_initSPI
  5139                           	line	42
  5140                           	
  5141  0BC2                     l19070:	
  5142                           ;spi.c: 42: SSP2BUF = 0xFD;
  5143  0BC2  30FD               	movlw	(0FDh)
  5144  0BC3  0024               	movlb 4	; select bank4
  5145  0BC4  0099               	movwf	(537)^0200h	;volatile
  5146  0BC5  2CF8               	goto	l4922
  5147                           	line	43
  5148                           ;spi.c: 43: while (1)
  5149                           	
  5150  0BC6                     l4921:	
  5151                           	line	45
  5152                           ;spi.c: 44: {
  5153                           ;spi.c: 45: while(PORTCbits.RC0 ==0)
  5154  0BC6  2CF8               	goto	l4922
  5155                           	
  5156  0BC7                     l4923:	
  5157                           	line	47
  5158                           ;spi.c: 46: {
  5159                           ;spi.c: 47: if(SSP2STATbits.BF)
  5160  0BC7  0024               	movlb 4	; select bank4
  5161  0BC8  1C1C               	btfss	(540)^0200h,0	;volatile
  5162  0BC9  2BCB               	goto	u3861
  5163  0BCA  2BCC               	goto	u3860
  5164  0BCB                     u3861:
  5165  0BCB  2CF8               	goto	l4922
  5166  0BCC                     u3860:
  5167                           	line	49
  5168                           	
  5169  0BCC                     l19072:	
  5170                           ;spi.c: 48: {
  5171                           ;spi.c: 49: bf=1;
  5172  0BCC  0020               	movlb 0	; select bank0
  5173  0BCD  01C2               	clrf	(SPIEEworker@bf)
  5174  0BCE  1403               	bsf	status,0
  5175  0BCF  0DC2               	rlf	(SPIEEworker@bf),f
  5176                           	line	50
  5177                           ;spi.c: 50: if(fb==0)
  5178  0BD0  08C1               	movf	(SPIEEworker@fb),f
  5179  0BD1  1D03               	skipz
  5180  0BD2  2BD4               	goto	u3871
  5181  0BD3  2BD5               	goto	u3870
  5182  0BD4                     u3871:
  5183  0BD4  2BE1               	goto	l19078
  5184  0BD5                     u3870:
  5185                           	line	52
  5186                           	
  5187  0BD5                     l19074:	
  5188                           ;spi.c: 51: {
  5189                           ;spi.c: 52: token = SSP2BUF;
  5190  0BD5  0024               	movlb 4	; select bank4
  5191  0BD6  0819               	movf	(537)^0200h,w	;volatile
  5192  0BD7  0020               	movlb 0	; select bank0
  5193  0BD8  00BA               	movwf	(??_SPIEEworker+0)+0
  5194  0BD9  083A               	movf	(??_SPIEEworker+0)+0,w
  5195  0BDA  00C4               	movwf	(SPIEEworker@token)
  5196                           	line	53
  5197                           	
  5198  0BDB                     l19076:	
  5199                           ;spi.c: 53: instruction = token & 0xF7;
  5200  0BDB  0844               	movf	(SPIEEworker@token),w
  5201  0BDC  39F7               	andlw	0F7h
  5202  0BDD  00BA               	movwf	(??_SPIEEworker+0)+0
  5203  0BDE  083A               	movf	(??_SPIEEworker+0)+0,w
  5204  0BDF  00C0               	movwf	(SPIEEworker@instruction)
  5205  0BE0  2BE1               	goto	l19078
  5206                           	line	54
  5207                           	
  5208  0BE1                     l4925:	
  5209                           	line	55
  5210                           	
  5211  0BE1                     l19078:	
  5212                           ;spi.c: 54: }
  5213                           ;spi.c: 55: fb=1;
  5214  0BE1  01C1               	clrf	(SPIEEworker@fb)
  5215  0BE2  1403               	bsf	status,0
  5216  0BE3  0DC1               	rlf	(SPIEEworker@fb),f
  5217                           	line	56
  5218                           ;spi.c: 56: switch(instruction)
  5219  0BE4  2CE3               	goto	l19168
  5220                           	line	58
  5221                           ;spi.c: 57: {
  5222                           ;spi.c: 58: case 0x03:
  5223                           	
  5224  0BE5                     l4927:	
  5225                           	line	59
  5226                           	
  5227  0BE5                     l19080:	
  5228                           ;spi.c: 59: if(fInst)
  5229  0BE5  0848               	movf	(SPIEEworker@fInst),w
  5230  0BE6  1D03               	skipz
  5231  0BE7  2BE9               	goto	u3880
  5232  0BE8  2C20               	goto	l19096
  5233  0BE9                     u3880:
  5234                           	line	61
  5235                           	
  5236  0BE9                     l19082:	
  5237                           ;spi.c: 60: {
  5238                           ;spi.c: 61: if(addressed==0)
  5239  0BE9  08C5               	movf	(SPIEEworker@addressed),f
  5240  0BEA  1D03               	skipz
  5241  0BEB  2BED               	goto	u3891
  5242  0BEC  2BEE               	goto	u3890
  5243  0BED                     u3891:
  5244  0BED  2C0B               	goto	l19092
  5245  0BEE                     u3890:
  5246                           	line	63
  5247                           	
  5248  0BEE                     l19084:	
  5249                           ;spi.c: 62: {
  5250                           ;spi.c: 63: addr = SSP2BUF;
  5251  0BEE  0024               	movlb 4	; select bank4
  5252  0BEF  0819               	movf	(537)^0200h,w	;volatile
  5253  0BF0  0020               	movlb 0	; select bank0
  5254  0BF1  00BA               	movwf	(??_SPIEEworker+0)+0
  5255  0BF2  083A               	movf	(??_SPIEEworker+0)+0,w
  5256  0BF3  00CA               	movwf	(SPIEEworker@addr)
  5257                           	line	64
  5258                           	
  5259  0BF4                     l19086:	
  5260                           ;spi.c: 64: addressed =1;
  5261  0BF4  01C5               	clrf	(SPIEEworker@addressed)
  5262  0BF5  1403               	bsf	status,0
  5263  0BF6  0DC5               	rlf	(SPIEEworker@addressed),f
  5264                           	line	65
  5265                           	
  5266  0BF7                     l19088:	
  5267                           ;spi.c: 65: SSP2BUF = eeBuf[addr++];
  5268  0BF7  084A               	movf	(SPIEEworker@addr),w
  5269  0BF8  3EF0               	addlw	low 8944
  5270  0BF9  00BA               	movwf	(??_SPIEEworker+0)+0
  5271  0BFA  3022               	movlw	high 8944
  5272  0BFB  1803               	skipnc
  5273  0BFC  3023               	movlw	high (8944)+1
  5274  0BFD  00BB               	movwf	((??_SPIEEworker+0)+0)+1
  5275  0BFE  083A               	movf	0+(??_SPIEEworker+0)+0,w
  5276  0BFF  0086               	movwf	fsr1l
  5277  0C00  083B               	movf	1+(??_SPIEEworker+0)+0,w
  5278  0C01  0087               	movwf	fsr1h
  5279                           
  5280  0C02  0801               	movf	indf1,w
  5281  0C03  0024               	movlb 4	; select bank4
  5282  0C04  0099               	movwf	(537)^0200h	;volatile
  5283                           	
  5284  0C05                     l19090:	
  5285  0C05  3001               	movlw	(01h)
  5286  0C06  0020               	movlb 0	; select bank0
  5287  0C07  00BA               	movwf	(??_SPIEEworker+0)+0
  5288  0C08  083A               	movf	(??_SPIEEworker+0)+0,w
  5289  0C09  07CA               	addwf	(SPIEEworker@addr),f
  5290                           	line	66
  5291                           ;spi.c: 66: }
  5292  0C0A  2CF8               	goto	l4922
  5293                           	line	67
  5294                           	
  5295  0C0B                     l4929:	
  5296                           	line	69
  5297                           	
  5298  0C0B                     l19092:	
  5299                           ;spi.c: 67: else
  5300                           ;spi.c: 68: {
  5301                           ;spi.c: 69: SSP2BUF = eeBuf[addr++];
  5302  0C0B  084A               	movf	(SPIEEworker@addr),w
  5303  0C0C  3EF0               	addlw	low 8944
  5304  0C0D  00BA               	movwf	(??_SPIEEworker+0)+0
  5305  0C0E  3022               	movlw	high 8944
  5306  0C0F  1803               	skipnc
  5307  0C10  3023               	movlw	high (8944)+1
  5308  0C11  00BB               	movwf	((??_SPIEEworker+0)+0)+1
  5309  0C12  083A               	movf	0+(??_SPIEEworker+0)+0,w
  5310  0C13  0086               	movwf	fsr1l
  5311  0C14  083B               	movf	1+(??_SPIEEworker+0)+0,w
  5312  0C15  0087               	movwf	fsr1h
  5313                           
  5314  0C16  0801               	movf	indf1,w
  5315  0C17  0024               	movlb 4	; select bank4
  5316  0C18  0099               	movwf	(537)^0200h	;volatile
  5317                           	
  5318  0C19                     l19094:	
  5319  0C19  3001               	movlw	(01h)
  5320  0C1A  0020               	movlb 0	; select bank0
  5321  0C1B  00BA               	movwf	(??_SPIEEworker+0)+0
  5322  0C1C  083A               	movf	(??_SPIEEworker+0)+0,w
  5323  0C1D  07CA               	addwf	(SPIEEworker@addr),f
  5324  0C1E  2CF8               	goto	l4922
  5325                           	line	70
  5326                           	
  5327  0C1F                     l4930:	
  5328                           	line	71
  5329                           ;spi.c: 70: }
  5330                           ;spi.c: 71: }
  5331  0C1F  2CF8               	goto	l4922
  5332                           	line	72
  5333                           	
  5334  0C20                     l4928:	
  5335                           	line	74
  5336                           	
  5337  0C20                     l19096:	
  5338                           ;spi.c: 72: else
  5339                           ;spi.c: 73: {
  5340                           ;spi.c: 74: fInst=1;
  5341  0C20  01C8               	clrf	(SPIEEworker@fInst)
  5342  0C21  1403               	bsf	status,0
  5343  0C22  0DC8               	rlf	(SPIEEworker@fInst),f
  5344                           	line	75
  5345                           	
  5346  0C23                     l19098:	
  5347                           ;spi.c: 75: SSP2BUF = STATUS;
  5348  0C23  0849               	movf	(SPIEEworker@STATUS),w
  5349  0C24  0024               	movlb 4	; select bank4
  5350  0C25  0099               	movwf	(537)^0200h	;volatile
  5351  0C26  2CF8               	goto	l4922
  5352                           	line	76
  5353                           	
  5354  0C27                     l4931:	
  5355                           	line	77
  5356                           ;spi.c: 76: }
  5357                           ;spi.c: 77: break;
  5358  0C27  2CF8               	goto	l4922
  5359                           	line	78
  5360                           ;spi.c: 78: case 0x02:
  5361                           	
  5362  0C28                     l4933:	
  5363                           	line	79
  5364                           	
  5365  0C28                     l19100:	
  5366                           ;spi.c: 79: if(WREN)
  5367  0C28  0020               	movlb 0	; select bank0
  5368  0C29  0843               	movf	(SPIEEworker@WREN),w
  5369  0C2A  1D03               	skipz
  5370  0C2B  2C2D               	goto	u3900
  5371  0C2C  2CBB               	goto	l19148
  5372  0C2D                     u3900:
  5373                           	line	81
  5374                           	
  5375  0C2D                     l19102:	
  5376                           ;spi.c: 80: {
  5377                           ;spi.c: 81: if(fInst)
  5378  0C2D  0848               	movf	(SPIEEworker@fInst),w
  5379  0C2E  1D03               	skipz
  5380  0C2F  2C31               	goto	u3910
  5381  0C30  2CB6               	goto	l19146
  5382  0C31                     u3910:
  5383                           	line	83
  5384                           	
  5385  0C31                     l19104:	
  5386                           ;spi.c: 82: {
  5387                           ;spi.c: 83: if(addressed)
  5388  0C31  0845               	movf	(SPIEEworker@addressed),w
  5389  0C32  1D03               	skipz
  5390  0C33  2C35               	goto	u3920
  5391  0C34  2CAB               	goto	l19142
  5392  0C35                     u3920:
  5393                           	line	85
  5394                           	
  5395  0C35                     l19106:	
  5396                           ;spi.c: 84: {
  5397                           ;spi.c: 85: if(STATUS > 11);
  5398  0C35  300C               	movlw	(0Ch)
  5399  0C36  0249               	subwf	(SPIEEworker@STATUS),w
  5400  0C37  1C03               	skipc
  5401  0C38  2C3A               	goto	u3931
  5402  0C39  2C3B               	goto	u3930
  5403  0C3A                     u3931:
  5404  0C3A  2C3D               	goto	l19110
  5405  0C3B                     u3930:
  5406  0C3B  2CBB               	goto	l19148
  5407                           	
  5408  0C3C                     l19108:	
  5409  0C3C  2CBB               	goto	l19148
  5410                           	line	86
  5411                           	
  5412  0C3D                     l4937:	
  5413                           	
  5414  0C3D                     l19110:	
  5415                           ;spi.c: 86: else if(STATUS >7)
  5416  0C3D  3008               	movlw	(08h)
  5417  0C3E  0249               	subwf	(SPIEEworker@STATUS),w
  5418  0C3F  1C03               	skipc
  5419  0C40  2C42               	goto	u3941
  5420  0C41  2C43               	goto	u3940
  5421  0C42                     u3941:
  5422  0C42  2C65               	goto	l19122
  5423  0C43                     u3940:
  5424                           	line	88
  5425                           	
  5426  0C43                     l19112:	
  5427                           ;spi.c: 87: {
  5428                           ;spi.c: 88: if(addr<0x80)
  5429  0C43  3080               	movlw	(080h)
  5430  0C44  024A               	subwf	(SPIEEworker@addr),w
  5431  0C45  1803               	skipnc
  5432  0C46  2C48               	goto	u3951
  5433  0C47  2C49               	goto	u3950
  5434  0C48                     u3951:
  5435  0C48  2CBB               	goto	l19148
  5436  0C49                     u3950:
  5437                           	line	90
  5438                           	
  5439  0C49                     l19114:	
  5440                           ;spi.c: 89: {
  5441                           ;spi.c: 90: eeBuf[addr++]=SSP2BUF;
  5442  0C49  0024               	movlb 4	; select bank4
  5443  0C4A  0819               	movf	(537)^0200h,w	;volatile
  5444  0C4B  0020               	movlb 0	; select bank0
  5445  0C4C  00BA               	movwf	(??_SPIEEworker+0)+0
  5446  0C4D  084A               	movf	(SPIEEworker@addr),w
  5447  0C4E  3EF0               	addlw	low 8944
  5448  0C4F  00BB               	movwf	(??_SPIEEworker+1)+0
  5449  0C50  3022               	movlw	high 8944
  5450  0C51  1803               	skipnc
  5451  0C52  3023               	movlw	high (8944)+1
  5452  0C53  00BC               	movwf	((??_SPIEEworker+1)+0)+1
  5453  0C54  083B               	movf	0+(??_SPIEEworker+1)+0,w
  5454  0C55  0086               	movwf	fsr1l
  5455  0C56  083C               	movf	1+(??_SPIEEworker+1)+0,w
  5456  0C57  0087               	movwf	fsr1h
  5457                           
  5458  0C58  083A               	movf	(??_SPIEEworker+0)+0,w
  5459  0C59  0081               	movwf	indf1
  5460                           	
  5461  0C5A                     l19116:	
  5462  0C5A  3001               	movlw	(01h)
  5463  0C5B  00BA               	movwf	(??_SPIEEworker+0)+0
  5464  0C5C  083A               	movf	(??_SPIEEworker+0)+0,w
  5465  0C5D  07CA               	addwf	(SPIEEworker@addr),f
  5466                           	line	91
  5467                           	
  5468  0C5E                     l19118:	
  5469                           ;spi.c: 91: STATUS|=1;
  5470  0C5E  1449               	bsf	(SPIEEworker@STATUS)+(0/8),(0)&7
  5471                           	line	92
  5472                           	
  5473  0C5F                     l19120:	
  5474                           ;spi.c: 92: w++;
  5475  0C5F  3001               	movlw	(01h)
  5476  0C60  00BA               	movwf	(??_SPIEEworker+0)+0
  5477  0C61  083A               	movf	(??_SPIEEworker+0)+0,w
  5478  0C62  07C6               	addwf	(SPIEEworker@w),f
  5479  0C63  2CBB               	goto	l19148
  5480                           	line	93
  5481                           	
  5482  0C64                     l4940:	
  5483                           	line	94
  5484                           ;spi.c: 93: }
  5485                           ;spi.c: 94: }
  5486  0C64  2CBB               	goto	l19148
  5487                           	line	95
  5488                           	
  5489  0C65                     l4939:	
  5490                           	
  5491  0C65                     l19122:	
  5492                           ;spi.c: 95: else if(STATUS > 3)
  5493  0C65  3004               	movlw	(04h)
  5494  0C66  0249               	subwf	(SPIEEworker@STATUS),w
  5495  0C67  1C03               	skipc
  5496  0C68  2C6A               	goto	u3961
  5497  0C69  2C6B               	goto	u3960
  5498  0C6A                     u3961:
  5499  0C6A  2C8D               	goto	l19134
  5500  0C6B                     u3960:
  5501                           	line	97
  5502                           	
  5503  0C6B                     l19124:	
  5504                           ;spi.c: 96: {
  5505                           ;spi.c: 97: if(addr<0xC0)
  5506  0C6B  30C0               	movlw	(0C0h)
  5507  0C6C  024A               	subwf	(SPIEEworker@addr),w
  5508  0C6D  1803               	skipnc
  5509  0C6E  2C70               	goto	u3971
  5510  0C6F  2C71               	goto	u3970
  5511  0C70                     u3971:
  5512  0C70  2CBB               	goto	l19148
  5513  0C71                     u3970:
  5514                           	line	99
  5515                           	
  5516  0C71                     l19126:	
  5517                           ;spi.c: 98: {
  5518                           ;spi.c: 99: eeBuf[addr++]=SSP2BUF;
  5519  0C71  0024               	movlb 4	; select bank4
  5520  0C72  0819               	movf	(537)^0200h,w	;volatile
  5521  0C73  0020               	movlb 0	; select bank0
  5522  0C74  00BA               	movwf	(??_SPIEEworker+0)+0
  5523  0C75  084A               	movf	(SPIEEworker@addr),w
  5524  0C76  3EF0               	addlw	low 8944
  5525  0C77  00BB               	movwf	(??_SPIEEworker+1)+0
  5526  0C78  3022               	movlw	high 8944
  5527  0C79  1803               	skipnc
  5528  0C7A  3023               	movlw	high (8944)+1
  5529  0C7B  00BC               	movwf	((??_SPIEEworker+1)+0)+1
  5530  0C7C  083B               	movf	0+(??_SPIEEworker+1)+0,w
  5531  0C7D  0086               	movwf	fsr1l
  5532  0C7E  083C               	movf	1+(??_SPIEEworker+1)+0,w
  5533  0C7F  0087               	movwf	fsr1h
  5534                           
  5535  0C80  083A               	movf	(??_SPIEEworker+0)+0,w
  5536  0C81  0081               	movwf	indf1
  5537                           	
  5538  0C82                     l19128:	
  5539  0C82  3001               	movlw	(01h)
  5540  0C83  00BA               	movwf	(??_SPIEEworker+0)+0
  5541  0C84  083A               	movf	(??_SPIEEworker+0)+0,w
  5542  0C85  07CA               	addwf	(SPIEEworker@addr),f
  5543                           	line	100
  5544                           	
  5545  0C86                     l19130:	
  5546                           ;spi.c: 100: STATUS|=1;
  5547  0C86  1449               	bsf	(SPIEEworker@STATUS)+(0/8),(0)&7
  5548                           	line	101
  5549                           	
  5550  0C87                     l19132:	
  5551                           ;spi.c: 101: w++;
  5552  0C87  3001               	movlw	(01h)
  5553  0C88  00BA               	movwf	(??_SPIEEworker+0)+0
  5554  0C89  083A               	movf	(??_SPIEEworker+0)+0,w
  5555  0C8A  07C6               	addwf	(SPIEEworker@w),f
  5556  0C8B  2CBB               	goto	l19148
  5557                           	line	102
  5558                           	
  5559  0C8C                     l4943:	
  5560                           	line	103
  5561                           ;spi.c: 102: }
  5562                           ;spi.c: 103: }
  5563  0C8C  2CBB               	goto	l19148
  5564                           	line	104
  5565                           	
  5566  0C8D                     l4942:	
  5567                           	line	106
  5568                           	
  5569  0C8D                     l19134:	
  5570                           ;spi.c: 104: else
  5571                           ;spi.c: 105: {
  5572                           ;spi.c: 106: eeBuf[addr++]=SSP2BUF;
  5573  0C8D  0024               	movlb 4	; select bank4
  5574  0C8E  0819               	movf	(537)^0200h,w	;volatile
  5575  0C8F  0020               	movlb 0	; select bank0
  5576  0C90  00BA               	movwf	(??_SPIEEworker+0)+0
  5577  0C91  084A               	movf	(SPIEEworker@addr),w
  5578  0C92  3EF0               	addlw	low 8944
  5579  0C93  00BB               	movwf	(??_SPIEEworker+1)+0
  5580  0C94  3022               	movlw	high 8944
  5581  0C95  1803               	skipnc
  5582  0C96  3023               	movlw	high (8944)+1
  5583  0C97  00BC               	movwf	((??_SPIEEworker+1)+0)+1
  5584  0C98  083B               	movf	0+(??_SPIEEworker+1)+0,w
  5585  0C99  0086               	movwf	fsr1l
  5586  0C9A  083C               	movf	1+(??_SPIEEworker+1)+0,w
  5587  0C9B  0087               	movwf	fsr1h
  5588                           
  5589  0C9C  083A               	movf	(??_SPIEEworker+0)+0,w
  5590  0C9D  0081               	movwf	indf1
  5591                           	
  5592  0C9E                     l19136:	
  5593  0C9E  3001               	movlw	(01h)
  5594  0C9F  00BA               	movwf	(??_SPIEEworker+0)+0
  5595  0CA0  083A               	movf	(??_SPIEEworker+0)+0,w
  5596  0CA1  07CA               	addwf	(SPIEEworker@addr),f
  5597                           	line	107
  5598                           	
  5599  0CA2                     l19138:	
  5600                           ;spi.c: 107: w++;
  5601  0CA2  3001               	movlw	(01h)
  5602  0CA3  00BA               	movwf	(??_SPIEEworker+0)+0
  5603  0CA4  083A               	movf	(??_SPIEEworker+0)+0,w
  5604  0CA5  07C6               	addwf	(SPIEEworker@w),f
  5605                           	line	108
  5606                           	
  5607  0CA6                     l19140:	
  5608                           ;spi.c: 108: STATUS|=1;
  5609  0CA6  1449               	bsf	(SPIEEworker@STATUS)+(0/8),(0)&7
  5610  0CA7  2CBB               	goto	l19148
  5611                           	line	109
  5612                           	
  5613  0CA8                     l4944:	
  5614  0CA8  2CBB               	goto	l19148
  5615                           	
  5616  0CA9                     l4941:	
  5617  0CA9  2CBB               	goto	l19148
  5618                           	
  5619  0CAA                     l4938:	
  5620                           	line	110
  5621                           ;spi.c: 109: }
  5622                           ;spi.c: 110: }
  5623  0CAA  2CBB               	goto	l19148
  5624                           	line	111
  5625                           	
  5626  0CAB                     l4936:	
  5627                           	line	113
  5628                           	
  5629  0CAB                     l19142:	
  5630                           ;spi.c: 111: else
  5631                           ;spi.c: 112: {
  5632                           ;spi.c: 113: addr = SSP2BUF;
  5633  0CAB  0024               	movlb 4	; select bank4
  5634  0CAC  0819               	movf	(537)^0200h,w	;volatile
  5635  0CAD  0020               	movlb 0	; select bank0
  5636  0CAE  00BA               	movwf	(??_SPIEEworker+0)+0
  5637  0CAF  083A               	movf	(??_SPIEEworker+0)+0,w
  5638  0CB0  00CA               	movwf	(SPIEEworker@addr)
  5639                           	line	114
  5640                           	
  5641  0CB1                     l19144:	
  5642                           ;spi.c: 114: addressed =1;
  5643  0CB1  01C5               	clrf	(SPIEEworker@addressed)
  5644  0CB2  1403               	bsf	status,0
  5645  0CB3  0DC5               	rlf	(SPIEEworker@addressed),f
  5646  0CB4  2CBB               	goto	l19148
  5647                           	line	115
  5648                           	
  5649  0CB5                     l4945:	
  5650                           	line	116
  5651                           ;spi.c: 115: }
  5652                           ;spi.c: 116: }
  5653  0CB5  2CBB               	goto	l19148
  5654                           	line	117
  5655                           	
  5656  0CB6                     l4935:	
  5657                           	line	119
  5658                           	
  5659  0CB6                     l19146:	
  5660                           ;spi.c: 117: else
  5661                           ;spi.c: 118: {
  5662                           ;spi.c: 119: fInst=1;
  5663  0CB6  01C8               	clrf	(SPIEEworker@fInst)
  5664  0CB7  1403               	bsf	status,0
  5665  0CB8  0DC8               	rlf	(SPIEEworker@fInst),f
  5666  0CB9  2CBB               	goto	l19148
  5667                           	line	120
  5668                           	
  5669  0CBA                     l4946:	
  5670  0CBA  2CBB               	goto	l19148
  5671                           	line	121
  5672                           	
  5673  0CBB                     l4934:	
  5674                           	line	122
  5675                           	
  5676  0CBB                     l19148:	
  5677                           ;spi.c: 120: }
  5678                           ;spi.c: 121: }
  5679                           ;spi.c: 122: SSP2BUF = STATUS;
  5680  0CBB  0849               	movf	(SPIEEworker@STATUS),w
  5681  0CBC  0024               	movlb 4	; select bank4
  5682  0CBD  0099               	movwf	(537)^0200h	;volatile
  5683                           	line	123
  5684                           ;spi.c: 123: break;
  5685  0CBE  2CF8               	goto	l4922
  5686                           	line	124
  5687                           ;spi.c: 124: case 0x04:
  5688                           	
  5689  0CBF                     l4947:	
  5690                           	line	125
  5691                           ;spi.c: 125: WREN=0;
  5692  0CBF  01C3               	clrf	(SPIEEworker@WREN)
  5693                           	line	126
  5694                           	
  5695  0CC0                     l19150:	
  5696                           ;spi.c: 126: STATUS&=~(1<<1);
  5697  0CC0  30FD               	movlw	(0FDh)
  5698  0CC1  00BA               	movwf	(??_SPIEEworker+0)+0
  5699  0CC2  083A               	movf	(??_SPIEEworker+0)+0,w
  5700  0CC3  05C9               	andwf	(SPIEEworker@STATUS),f
  5701                           	line	127
  5702                           ;spi.c: 127: break;
  5703  0CC4  2CF8               	goto	l4922
  5704                           	line	128
  5705                           ;spi.c: 128: case 0x06:
  5706                           	
  5707  0CC5                     l4948:	
  5708                           	line	129
  5709                           	
  5710  0CC5                     l19152:	
  5711                           ;spi.c: 129: WREN =1;
  5712  0CC5  01C3               	clrf	(SPIEEworker@WREN)
  5713  0CC6  1403               	bsf	status,0
  5714  0CC7  0DC3               	rlf	(SPIEEworker@WREN),f
  5715                           	line	130
  5716                           	
  5717  0CC8                     l19154:	
  5718                           ;spi.c: 130: STATUS|=1<<1;
  5719  0CC8  14C9               	bsf	(SPIEEworker@STATUS)+(1/8),(1)&7
  5720                           	line	131
  5721                           	
  5722  0CC9                     l19156:	
  5723                           ;spi.c: 131: SSP2BUF = STATUS;
  5724  0CC9  0849               	movf	(SPIEEworker@STATUS),w
  5725  0CCA  0024               	movlb 4	; select bank4
  5726  0CCB  0099               	movwf	(537)^0200h	;volatile
  5727                           	line	132
  5728                           ;spi.c: 132: break;
  5729  0CCC  2CF8               	goto	l4922
  5730                           	line	133
  5731                           ;spi.c: 133: case 0x05:
  5732                           	
  5733  0CCD                     l4949:	
  5734                           	line	134
  5735                           	
  5736  0CCD                     l19158:	
  5737                           ;spi.c: 134: SSP2BUF = STATUS;
  5738  0CCD  0020               	movlb 0	; select bank0
  5739  0CCE  0849               	movf	(SPIEEworker@STATUS),w
  5740  0CCF  0024               	movlb 4	; select bank4
  5741  0CD0  0099               	movwf	(537)^0200h	;volatile
  5742                           	line	135
  5743                           ;spi.c: 135: break;
  5744  0CD1  2CF8               	goto	l4922
  5745                           	line	136
  5746                           ;spi.c: 136: case 0x01:
  5747                           	
  5748  0CD2                     l4950:	
  5749                           	line	137
  5750                           	
  5751  0CD2                     l19160:	
  5752                           ;spi.c: 137: if(fInst)STATUS = SSP2BUF;
  5753  0CD2  0020               	movlb 0	; select bank0
  5754  0CD3  0848               	movf	(SPIEEworker@fInst),w
  5755  0CD4  1D03               	skipz
  5756  0CD5  2CD7               	goto	u3980
  5757  0CD6  2CDE               	goto	l19164
  5758  0CD7                     u3980:
  5759                           	
  5760  0CD7                     l19162:	
  5761  0CD7  0024               	movlb 4	; select bank4
  5762  0CD8  0819               	movf	(537)^0200h,w	;volatile
  5763  0CD9  0020               	movlb 0	; select bank0
  5764  0CDA  00BA               	movwf	(??_SPIEEworker+0)+0
  5765  0CDB  083A               	movf	(??_SPIEEworker+0)+0,w
  5766  0CDC  00C9               	movwf	(SPIEEworker@STATUS)
  5767  0CDD  2CDE               	goto	l19164
  5768                           	
  5769  0CDE                     l4951:	
  5770                           	line	138
  5771                           	
  5772  0CDE                     l19164:	
  5773                           ;spi.c: 138: fInst=1;
  5774  0CDE  01C8               	clrf	(SPIEEworker@fInst)
  5775  0CDF  1403               	bsf	status,0
  5776  0CE0  0DC8               	rlf	(SPIEEworker@fInst),f
  5777                           	line	139
  5778                           ;spi.c: 139: break;
  5779  0CE1  2CF8               	goto	l4922
  5780                           	line	140
  5781                           	
  5782  0CE2                     l19166:	
  5783                           ;spi.c: 140: }
  5784  0CE2  2CF8               	goto	l4922
  5785                           	line	56
  5786                           	
  5787  0CE3                     l4926:	
  5788                           	
  5789  0CE3                     l19168:	
  5790  0CE3  0840               	movf	(SPIEEworker@instruction),w
  5791                           	; Switch size 1, requested type "space"
  5792                           ; Number of cases is 6, Range of values is 1 to 6
  5793                           ; switch strategies available:
  5794                           ; Name         Instructions Cycles
  5795                           ; simple_byte           19    10 (average)
  5796                           ; direct_byte           21     9 (fixed)
  5797                           ; jumptable            263     9 (fixed)
  5798                           ;	Chosen strategy is simple_byte
  5799                           
  5800                           	opt asmopt_off
  5801  0CE4  3A01               	xorlw	1^0	; case 1
  5802  0CE5  1903               	skipnz
  5803  0CE6  2CD2               	goto	l19160
  5804  0CE7  3A03               	xorlw	2^1	; case 2
  5805  0CE8  1903               	skipnz
  5806  0CE9  2C28               	goto	l19100
  5807  0CEA  3A01               	xorlw	3^2	; case 3
  5808  0CEB  1903               	skipnz
  5809  0CEC  2BE5               	goto	l19080
  5810  0CED  3A07               	xorlw	4^3	; case 4
  5811  0CEE  1903               	skipnz
  5812  0CEF  2CBF               	goto	l4947
  5813  0CF0  3A01               	xorlw	5^4	; case 5
  5814  0CF1  1903               	skipnz
  5815  0CF2  2CCD               	goto	l19158
  5816  0CF3  3A03               	xorlw	6^5	; case 6
  5817  0CF4  1903               	skipnz
  5818  0CF5  2CC5               	goto	l19152
  5819  0CF6  2CF8               	goto	l4922
  5820                           	opt asmopt_on
  5821                           
  5822                           	line	140
  5823                           	
  5824  0CF7                     l4932:	
  5825  0CF7  2CF8               	goto	l4922
  5826                           	line	141
  5827                           	
  5828  0CF8                     l4924:	
  5829                           	line	142
  5830                           	
  5831  0CF8                     l4922:	
  5832                           	line	45
  5833  0CF8  0020               	movlb 0	; select bank0
  5834  0CF9  1C0E               	btfss	(14),0	;volatile
  5835  0CFA  2CFC               	goto	u3991
  5836  0CFB  2CFD               	goto	u3990
  5837  0CFC                     u3991:
  5838  0CFC  2BC7               	goto	l4923
  5839  0CFD                     u3990:
  5840  0CFD  2CFE               	goto	l19170
  5841                           	
  5842  0CFE                     l4952:	
  5843                           	line	143
  5844                           	
  5845  0CFE                     l19170:	
  5846                           ;spi.c: 141: }
  5847                           ;spi.c: 142: }
  5848                           ;spi.c: 143: if(bf)
  5849  0CFE  0842               	movf	(SPIEEworker@bf),w
  5850  0CFF  1D03               	skipz
  5851  0D00  2D02               	goto	u4000
  5852  0D01  2CF8               	goto	l4922
  5853  0D02                     u4000:
  5854                           	line	145
  5855                           	
  5856  0D02                     l19172:	
  5857                           ;spi.c: 144: {
  5858                           ;spi.c: 145: addressed=0;
  5859  0D02  01C5               	clrf	(SPIEEworker@addressed)
  5860                           	line	146
  5861                           	
  5862  0D03                     l19174:	
  5863                           ;spi.c: 146: if (token == 0x02)
  5864  0D03  0844               	movf	(SPIEEworker@token),w
  5865  0D04  3A02               	xorlw	02h&0ffh
  5866  0D05  1D03               	skipz
  5867  0D06  2D08               	goto	u4011
  5868  0D07  2D09               	goto	u4010
  5869  0D08                     u4011:
  5870  0D08  2D0F               	goto	l19180
  5871  0D09                     u4010:
  5872                           	line	148
  5873                           	
  5874  0D09                     l19176:	
  5875                           ;spi.c: 147: {
  5876                           ;spi.c: 148: WREN =0;
  5877  0D09  01C3               	clrf	(SPIEEworker@WREN)
  5878                           	line	149
  5879                           	
  5880  0D0A                     l19178:	
  5881                           ;spi.c: 149: STATUS&=0b11111100;
  5882  0D0A  30FC               	movlw	(0FCh)
  5883  0D0B  00BA               	movwf	(??_SPIEEworker+0)+0
  5884  0D0C  083A               	movf	(??_SPIEEworker+0)+0,w
  5885  0D0D  05C9               	andwf	(SPIEEworker@STATUS),f
  5886  0D0E  2D0F               	goto	l19180
  5887                           	line	150
  5888                           	
  5889  0D0F                     l4954:	
  5890                           	line	151
  5891                           	
  5892  0D0F                     l19180:	
  5893                           ;spi.c: 150: }
  5894                           ;spi.c: 151: if(w>0)
  5895  0D0F  0846               	movf	(SPIEEworker@w),w
  5896  0D10  1D03               	skipz
  5897  0D11  2D13               	goto	u4020
  5898  0D12  2D3A               	goto	l4955
  5899  0D13                     u4020:
  5900                           	line	153
  5901                           	
  5902  0D13                     l19182:	
  5903                           ;spi.c: 152: {
  5904                           ;spi.c: 153: for(i=addr-w;i<addr;i++)EEPROMwrite(i,eeBuf[i]);
  5905  0D13  0346               	decf	(SPIEEworker@w),w
  5906  0D14  3AFF               	xorlw	0ffh
  5907  0D15  074A               	addwf	(SPIEEworker@addr),w
  5908  0D16  00BA               	movwf	(??_SPIEEworker+0)+0
  5909  0D17  083A               	movf	(??_SPIEEworker+0)+0,w
  5910  0D18  00C7               	movwf	(SPIEEworker@i)
  5911  0D19  2D33               	goto	l19188
  5912                           	
  5913  0D1A                     l4957:	
  5914                           	
  5915  0D1A                     l19184:	
  5916  0D1A  0847               	movf	(SPIEEworker@i),w
  5917  0D1B  3EF0               	addlw	low 8944
  5918  0D1C  00BA               	movwf	(??_SPIEEworker+0)+0
  5919  0D1D  3022               	movlw	high 8944
  5920  0D1E  1803               	skipnc
  5921  0D1F  3023               	movlw	high (8944)+1
  5922  0D20  00BB               	movwf	((??_SPIEEworker+0)+0)+1
  5923  0D21  083A               	movf	0+(??_SPIEEworker+0)+0,w
  5924  0D22  0086               	movwf	fsr1l
  5925  0D23  083B               	movf	1+(??_SPIEEworker+0)+0,w
  5926  0D24  0087               	movwf	fsr1h
  5927                           
  5928  0D25  0801               	movf	indf1,w
  5929  0D26  00BC               	movwf	(??_SPIEEworker+2)+0
  5930  0D27  083C               	movf	(??_SPIEEworker+2)+0,w
  5931  0D28  00F7               	movwf	(?_EEPROMwrite)
  5932  0D29  0847               	movf	(SPIEEworker@i),w
  5933  0D2A  3195  2553  318B   	fcall	_EEPROMwrite
  5934                           	
  5935  0D2D                     l19186:	
  5936  0D2D  3001               	movlw	(01h)
  5937  0D2E  0020               	movlb 0	; select bank0
  5938  0D2F  00BA               	movwf	(??_SPIEEworker+0)+0
  5939  0D30  083A               	movf	(??_SPIEEworker+0)+0,w
  5940  0D31  07C7               	addwf	(SPIEEworker@i),f
  5941  0D32  2D33               	goto	l19188
  5942                           	
  5943  0D33                     l4956:	
  5944                           	
  5945  0D33                     l19188:	
  5946  0D33  084A               	movf	(SPIEEworker@addr),w
  5947  0D34  0247               	subwf	(SPIEEworker@i),w
  5948  0D35  1C03               	skipc
  5949  0D36  2D38               	goto	u4031
  5950  0D37  2D39               	goto	u4030
  5951  0D38                     u4031:
  5952  0D38  2D1A               	goto	l19184
  5953  0D39                     u4030:
  5954  0D39  2D3A               	goto	l4955
  5955                           	
  5956  0D3A                     l4958:	
  5957                           	line	154
  5958                           	
  5959  0D3A                     l4955:	
  5960                           	line	155
  5961                           ;spi.c: 154: }
  5962                           ;spi.c: 155: w=0;
  5963  0D3A  01C6               	clrf	(SPIEEworker@w)
  5964                           	line	156
  5965                           ;spi.c: 156: fb=0;
  5966  0D3B  01C1               	clrf	(SPIEEworker@fb)
  5967                           	line	157
  5968                           ;spi.c: 157: fInst=0;
  5969  0D3C  01C8               	clrf	(SPIEEworker@fInst)
  5970                           	line	158
  5971                           ;spi.c: 158: bf=0;
  5972  0D3D  01C2               	clrf	(SPIEEworker@bf)
  5973  0D3E  2CF8               	goto	l4922
  5974                           	line	159
  5975                           	
  5976  0D3F                     l4953:	
  5977  0D3F  2CF8               	goto	l4922
  5978                           	line	160
  5979                           	
  5980  0D40                     l4959:	
  5981                           	line	43
  5982  0D40  2CF8               	goto	l4922
  5983                           	
  5984  0D41                     l4960:	
  5985                           	line	161
  5986                           	
  5987  0D41                     l4961:	
  5988  0D41  0008               	return
  5989                           	opt stack 0
  5990                           GLOBAL	__end_of_SPIEEworker
  5991  0D42                     	__end_of_SPIEEworker:
  5992 ;; =============== function _SPIEEworker ends ============
  5993                           
  5994                           	signat	_SPIEEworker,88
  5995                           	global	_SPIPWMworker
  5996                           	global	_I2CPWMworker
  5997                           psect	text1306,local,class=CODE,delta=2
  5998                           global __ptext1306
  5999  003F                     __ptext1306:
  6000                           
  6001 ;; *************** function _I2CPWMworker *****************
  6002 ;; Defined at:
  6003 ;;		line 231 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  addr            1   17[BANK0 ] unsigned char 
  6008 ;;  addressed       1   16[BANK0 ] unsigned char 
  6009 ;;  fP              1   15[BANK0 ] unsigned char 
  6010 ;;  fD              1   14[BANK0 ] unsigned char 
  6011 ;;  tempD           1   13[BANK0 ] unsigned char 
  6012 ;;  tempP           1   12[BANK0 ] unsigned char 
  6013 ;;  token           1   11[BANK0 ] unsigned char 
  6014 ;;  temp            1   10[BANK0 ] unsigned char 
  6015 ;;  rFreq           1    0        unsigned char 
  6016 ;;  rDuty           1    0        unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6027 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6029 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6030 ;;Total ram usage:        9 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    3
  6033 ;; This function calls:
  6034 ;;		_enablePWM
  6035 ;;		_setPeriod
  6036 ;;		_setDuty
  6037 ;; This function is called by:
  6038 ;;		_main
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           psect	text1306
  6042                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  6043                           	line	231
  6044                           	global	__size_of_I2CPWMworker
  6045  00A6                     	__size_of_I2CPWMworker	equ	__end_of_I2CPWMworker-_I2CPWMworker
  6046                           	
  6047  003F                     _I2CPWMworker:	
  6048                           	opt	stack 12
  6049                           ; Regs used in _I2CPWMworker: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6050                           	line	232
  6051                           	
  6052  003F                     l19784:	
  6053                           ;i2c.c: 232: unsigned char token, tempP,tempD,temp, rDuty,rFreq,fD=0,fP=0,addr=0,address
                                 ed=0;
  6054  003F  0020               	movlb 0	; select bank0
  6055  0040  01C8               	clrf	(I2CPWMworker@fD)
  6056  0041  01C9               	clrf	(I2CPWMworker@fP)
  6057  0042  01CB               	clrf	(I2CPWMworker@addr)
  6058  0043  01CA               	clrf	(I2CPWMworker@addressed)
  6059                           	line	233
  6060                           	
  6061  0044                     l19786:	
  6062                           ;i2c.c: 233: enablePWM();
  6063  0044  3187  27BC  3180   	fcall	_enablePWM
  6064                           	line	234
  6065                           	
  6066  0047                     l19788:	
  6067                           ;i2c.c: 234: SSP2ADD=0x30;
  6068  0047  3030               	movlw	(030h)
  6069  0048  0024               	movlb 4	; select bank4
  6070  0049  009A               	movwf	(538)^0200h	;volatile
  6071                           	line	235
  6072                           	
  6073  004A                     l19790:	
  6074                           ;i2c.c: 235: SSP2CON1bits.SSPEN=1;
  6075  004A  169D               	bsf	(541)^0200h,5	;volatile
  6076  004B  284C               	goto	l19792
  6077                           	line	236
  6078                           ;i2c.c: 236: while(1)
  6079                           	
  6080  004C                     l3308:	
  6081                           	line	239
  6082                           	
  6083  004C                     l19792:	
  6084                           ;i2c.c: 237: {
  6085                           ;i2c.c: 239: if(SSP2IF)
  6086  004C  0020               	movlb 0	; select bank0
  6087  004D  1C14               	btfss	(160/8),(160)&7
  6088  004E  2850               	goto	u4811
  6089  004F  2851               	goto	u4810
  6090  0050                     u4811:
  6091  0050  284C               	goto	l19792
  6092  0051                     u4810:
  6093                           	line	241
  6094                           	
  6095  0051                     l19794:	
  6096                           ;i2c.c: 240: {
  6097                           ;i2c.c: 241: SSP2IF=0;
  6098  0051  1014               	bcf	(160/8),(160)&7
  6099                           	line	242
  6100                           	
  6101  0052                     l19796:	
  6102                           ;i2c.c: 242: token=SSP2STAT&0x25;
  6103  0052  0024               	movlb 4	; select bank4
  6104  0053  081C               	movf	(540)^0200h,w
  6105  0054  3925               	andlw	025h
  6106  0055  00F9               	movwf	(??_I2CPWMworker+0)+0
  6107  0056  0879               	movf	(??_I2CPWMworker+0)+0,w
  6108  0057  0020               	movlb 0	; select bank0
  6109  0058  00C5               	movwf	(I2CPWMworker@token)
  6110                           	line	243
  6111                           	
  6112  0059                     l19798:	
  6113                           ;i2c.c: 243: if(SSP2STATbits.S)
  6114  0059  0024               	movlb 4	; select bank4
  6115  005A  1D9C               	btfss	(540)^0200h,3	;volatile
  6116  005B  285D               	goto	u4821
  6117  005C  285E               	goto	u4820
  6118  005D                     u4821:
  6119  005D  28BB               	goto	l3310
  6120  005E                     u4820:
  6121                           	line	245
  6122                           	
  6123  005E                     l19800:	
  6124                           ;i2c.c: 244: {
  6125                           ;i2c.c: 245: RC5=1;;
  6126  005E  0020               	movlb 0	; select bank0
  6127  005F  168E               	bsf	(117/8),(117)&7
  6128                           	line	246
  6129                           ;i2c.c: 246: switch(token)
  6130  0060  28AB               	goto	l19830
  6131                           	line	248
  6132                           ;i2c.c: 247: {
  6133                           ;i2c.c: 248: case 0x01:
  6134                           	
  6135  0061                     l3312:	
  6136                           	line	249
  6137                           	
  6138  0061                     l19802:	
  6139                           ;i2c.c: 249: temp=SSP2BUF;
  6140  0061  0024               	movlb 4	; select bank4
  6141  0062  0819               	movf	(537)^0200h,w	;volatile
  6142  0063  00F9               	movwf	(??_I2CPWMworker+0)+0
  6143  0064  0879               	movf	(??_I2CPWMworker+0)+0,w
  6144  0065  0020               	movlb 0	; select bank0
  6145  0066  00C4               	movwf	(I2CPWMworker@temp)
  6146                           	line	250
  6147                           ;i2c.c: 250: break;
  6148  0067  28DF               	goto	l19844
  6149                           	line	251
  6150                           ;i2c.c: 251: case 0x21:
  6151                           	
  6152  0068                     l3314:	
  6153                           	line	252
  6154                           	
  6155  0068                     l19804:	
  6156                           ;i2c.c: 252: if(!addressed)
  6157  0068  08CA               	movf	(I2CPWMworker@addressed),f
  6158  0069  1D03               	skipz
  6159  006A  286C               	goto	u4831
  6160  006B  286D               	goto	u4830
  6161  006C                     u4831:
  6162  006C  2877               	goto	l19810
  6163  006D                     u4830:
  6164                           	line	254
  6165                           	
  6166  006D                     l19806:	
  6167                           ;i2c.c: 253: {
  6168                           ;i2c.c: 254: addr=SSP2BUF;
  6169  006D  0024               	movlb 4	; select bank4
  6170  006E  0819               	movf	(537)^0200h,w	;volatile
  6171  006F  00F9               	movwf	(??_I2CPWMworker+0)+0
  6172  0070  0879               	movf	(??_I2CPWMworker+0)+0,w
  6173  0071  0020               	movlb 0	; select bank0
  6174  0072  00CB               	movwf	(I2CPWMworker@addr)
  6175                           	line	255
  6176                           	
  6177  0073                     l19808:	
  6178                           ;i2c.c: 255: addressed=1;
  6179  0073  01CA               	clrf	(I2CPWMworker@addressed)
  6180  0074  1403               	bsf	status,0
  6181  0075  0DCA               	rlf	(I2CPWMworker@addressed),f
  6182                           	line	256
  6183                           ;i2c.c: 256: }
  6184  0076  28DF               	goto	l19844
  6185                           	line	257
  6186                           	
  6187  0077                     l3315:	
  6188                           	line	259
  6189                           	
  6190  0077                     l19810:	
  6191                           ;i2c.c: 257: else
  6192                           ;i2c.c: 258: {
  6193                           ;i2c.c: 259: if(addr==0)
  6194  0077  08CB               	movf	(I2CPWMworker@addr),f
  6195  0078  1D03               	skipz
  6196  0079  287B               	goto	u4841
  6197  007A  287C               	goto	u4840
  6198  007B                     u4841:
  6199  007B  2889               	goto	l19818
  6200  007C                     u4840:
  6201                           	line	261
  6202                           	
  6203  007C                     l19812:	
  6204                           ;i2c.c: 260: {
  6205                           ;i2c.c: 261: tempP=SSP2BUF;
  6206  007C  0024               	movlb 4	; select bank4
  6207  007D  0819               	movf	(537)^0200h,w	;volatile
  6208  007E  00F9               	movwf	(??_I2CPWMworker+0)+0
  6209  007F  0879               	movf	(??_I2CPWMworker+0)+0,w
  6210  0080  0020               	movlb 0	; select bank0
  6211  0081  00C6               	movwf	(I2CPWMworker@tempP)
  6212                           	line	262
  6213                           	
  6214  0082                     l19814:	
  6215                           ;i2c.c: 262: addr=1;
  6216  0082  01CB               	clrf	(I2CPWMworker@addr)
  6217  0083  1403               	bsf	status,0
  6218  0084  0DCB               	rlf	(I2CPWMworker@addr),f
  6219                           	line	263
  6220                           	
  6221  0085                     l19816:	
  6222                           ;i2c.c: 263: fP=1;
  6223  0085  01C9               	clrf	(I2CPWMworker@fP)
  6224  0086  1403               	bsf	status,0
  6225  0087  0DC9               	rlf	(I2CPWMworker@fP),f
  6226                           	line	264
  6227                           ;i2c.c: 264: }
  6228  0088  28DF               	goto	l19844
  6229                           	line	265
  6230                           	
  6231  0089                     l3317:	
  6232                           	line	267
  6233                           	
  6234  0089                     l19818:	
  6235                           ;i2c.c: 265: else
  6236                           ;i2c.c: 266: {
  6237                           ;i2c.c: 267: tempD=SSP2BUF;
  6238  0089  0024               	movlb 4	; select bank4
  6239  008A  0819               	movf	(537)^0200h,w	;volatile
  6240  008B  00F9               	movwf	(??_I2CPWMworker+0)+0
  6241  008C  0879               	movf	(??_I2CPWMworker+0)+0,w
  6242  008D  0020               	movlb 0	; select bank0
  6243  008E  00C7               	movwf	(I2CPWMworker@tempD)
  6244                           	line	268
  6245                           	
  6246  008F                     l19820:	
  6247                           ;i2c.c: 268: addr=0;
  6248  008F  01CB               	clrf	(I2CPWMworker@addr)
  6249                           	line	269
  6250                           	
  6251  0090                     l19822:	
  6252                           ;i2c.c: 269: fD=1;
  6253  0090  01C8               	clrf	(I2CPWMworker@fD)
  6254  0091  1403               	bsf	status,0
  6255  0092  0DC8               	rlf	(I2CPWMworker@fD),f
  6256  0093  28DF               	goto	l19844
  6257                           	line	270
  6258                           	
  6259  0094                     l3318:	
  6260  0094  28DF               	goto	l19844
  6261                           	line	271
  6262                           	
  6263  0095                     l3316:	
  6264                           	line	272
  6265                           ;i2c.c: 270: }
  6266                           ;i2c.c: 271: }
  6267                           ;i2c.c: 272: break;
  6268  0095  28DF               	goto	l19844
  6269                           	line	273
  6270                           ;i2c.c: 273: case 0x05:
  6271                           	
  6272  0096                     l3319:	
  6273                           	line	274
  6274                           	
  6275  0096                     l19824:	
  6276                           ;i2c.c: 274: temp=SSP2BUF;
  6277  0096  0024               	movlb 4	; select bank4
  6278  0097  0819               	movf	(537)^0200h,w	;volatile
  6279  0098  00F9               	movwf	(??_I2CPWMworker+0)+0
  6280  0099  0879               	movf	(??_I2CPWMworker+0)+0,w
  6281  009A  0020               	movlb 0	; select bank0
  6282  009B  00C4               	movwf	(I2CPWMworker@temp)
  6283                           	line	275
  6284                           ;i2c.c: 275: SSP2BUF = PWMperiod;
  6285  009C  0864               	movf	(_PWMperiod),w
  6286  009D  0024               	movlb 4	; select bank4
  6287  009E  0099               	movwf	(537)^0200h	;volatile
  6288                           	line	276
  6289                           ;i2c.c: 276: break;
  6290  009F  28DF               	goto	l19844
  6291                           	line	277
  6292                           ;i2c.c: 277: case 0x24:
  6293                           	
  6294  00A0                     l3320:	
  6295                           	line	278
  6296                           	
  6297  00A0                     l19826:	
  6298                           ;i2c.c: 278: temp=SSP2BUF;
  6299  00A0  0024               	movlb 4	; select bank4
  6300  00A1  0819               	movf	(537)^0200h,w	;volatile
  6301  00A2  00F9               	movwf	(??_I2CPWMworker+0)+0
  6302  00A3  0879               	movf	(??_I2CPWMworker+0)+0,w
  6303  00A4  0020               	movlb 0	; select bank0
  6304  00A5  00C4               	movwf	(I2CPWMworker@temp)
  6305                           	line	280
  6306                           ;i2c.c: 280: SSP2BUF = PWMduty;
  6307  00A6  0863               	movf	(_PWMduty),w
  6308  00A7  0024               	movlb 4	; select bank4
  6309  00A8  0099               	movwf	(537)^0200h	;volatile
  6310                           	line	281
  6311                           ;i2c.c: 281: break;
  6312  00A9  28DF               	goto	l19844
  6313                           	line	282
  6314                           	
  6315  00AA                     l19828:	
  6316                           ;i2c.c: 282: }
  6317  00AA  28DF               	goto	l19844
  6318                           	line	246
  6319                           	
  6320  00AB                     l3311:	
  6321                           	
  6322  00AB                     l19830:	
  6323  00AB  0020               	movlb 0	; select bank0
  6324  00AC  0845               	movf	(I2CPWMworker@token),w
  6325                           	; Switch size 1, requested type "space"
  6326                           ; Number of cases is 4, Range of values is 1 to 36
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte           13     7 (average)
  6330                           ; direct_byte           81     9 (fixed)
  6331                           ; jumptable            263     9 (fixed)
  6332                           ;	Chosen strategy is simple_byte
  6333                           
  6334                           	opt asmopt_off
  6335  00AD  3A01               	xorlw	1^0	; case 1
  6336  00AE  1903               	skipnz
  6337  00AF  2861               	goto	l19802
  6338  00B0  3A04               	xorlw	5^1	; case 5
  6339  00B1  1903               	skipnz
  6340  00B2  2896               	goto	l19824
  6341  00B3  3A24               	xorlw	33^5	; case 33
  6342  00B4  1903               	skipnz
  6343  00B5  2868               	goto	l19804
  6344  00B6  3A05               	xorlw	36^33	; case 36
  6345  00B7  1903               	skipnz
  6346  00B8  28A0               	goto	l19826
  6347  00B9  28DF               	goto	l19844
  6348                           	opt asmopt_on
  6349                           
  6350                           	line	282
  6351                           	
  6352  00BA                     l3313:	
  6353                           	line	283
  6354                           ;i2c.c: 283: }
  6355  00BA  28DF               	goto	l19844
  6356                           	line	284
  6357                           	
  6358  00BB                     l3310:	
  6359                           ;i2c.c: 284: else if(SSP2STATbits.P)
  6360  00BB  1E1C               	btfss	(540)^0200h,4	;volatile
  6361  00BC  28BE               	goto	u4851
  6362  00BD  28BF               	goto	u4850
  6363  00BE                     u4851:
  6364  00BE  28DF               	goto	l19844
  6365  00BF                     u4850:
  6366                           	line	286
  6367                           	
  6368  00BF                     l19832:	
  6369                           ;i2c.c: 285: {
  6370                           ;i2c.c: 286: RC5=0;;
  6371  00BF  0020               	movlb 0	; select bank0
  6372  00C0  128E               	bcf	(117/8),(117)&7
  6373                           	line	287
  6374                           ;i2c.c: 287: addressed=0;
  6375  00C1  01CA               	clrf	(I2CPWMworker@addressed)
  6376                           	line	288
  6377                           # 288 "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
  6378  00C2  0000               NOP ;#
  6379                           psect	text1306
  6380                           	line	289
  6381                           	
  6382  00C3                     l19834:	
  6383                           ;i2c.c: 289: if(fP)setPeriod(tempP);
  6384  00C3  0020               	movlb 0	; select bank0
  6385  00C4  0849               	movf	(I2CPWMworker@fP),w
  6386  00C5  1D03               	skipz
  6387  00C6  28C8               	goto	u4860
  6388  00C7  28CD               	goto	l19838
  6389  00C8                     u4860:
  6390                           	
  6391  00C8                     l19836:	
  6392  00C8  0846               	movf	(I2CPWMworker@tempP),w
  6393  00C9  3196  26FD  3180   	fcall	_setPeriod
  6394  00CC  28CD               	goto	l19838
  6395                           	
  6396  00CD                     l3323:	
  6397                           	line	290
  6398                           	
  6399  00CD                     l19838:	
  6400                           ;i2c.c: 290: if(fD)setDuty(tempD);
  6401  00CD  0020               	movlb 0	; select bank0
  6402  00CE  0848               	movf	(I2CPWMworker@fD),w
  6403  00CF  1D03               	skipz
  6404  00D0  28D2               	goto	u4870
  6405  00D1  28D7               	goto	l19842
  6406  00D2                     u4870:
  6407                           	
  6408  00D2                     l19840:	
  6409  00D2  0847               	movf	(I2CPWMworker@tempD),w
  6410  00D3  3189  210B  3180   	fcall	_setDuty
  6411  00D6  28D7               	goto	l19842
  6412                           	
  6413  00D7                     l3324:	
  6414                           	line	291
  6415                           	
  6416  00D7                     l19842:	
  6417                           ;i2c.c: 291: fD=fP=0;
  6418  00D7  3000               	movlw	(0)
  6419  00D8  0020               	movlb 0	; select bank0
  6420  00D9  00C9               	movwf	(I2CPWMworker@fP)
  6421  00DA  00F9               	movwf	(??_I2CPWMworker+0)+0
  6422  00DB  0879               	movf	(??_I2CPWMworker+0)+0,w
  6423  00DC  00C8               	movwf	(I2CPWMworker@fD)
  6424  00DD  28DF               	goto	l19844
  6425                           	line	293
  6426                           	
  6427  00DE                     l3322:	
  6428  00DE  28DF               	goto	l19844
  6429                           	line	294
  6430                           	
  6431  00DF                     l3321:	
  6432                           	
  6433  00DF                     l19844:	
  6434                           ;i2c.c: 293: }
  6435                           ;i2c.c: 294: SSP2CON1bits.CKP=1;
  6436  00DF  0024               	movlb 4	; select bank4
  6437  00E0  161D               	bsf	(541)^0200h,4	;volatile
  6438  00E1  284C               	goto	l19792
  6439                           	line	295
  6440                           	
  6441  00E2                     l3309:	
  6442  00E2  284C               	goto	l19792
  6443                           	line	296
  6444                           	
  6445  00E3                     l3325:	
  6446                           	line	236
  6447  00E3  284C               	goto	l19792
  6448                           	
  6449  00E4                     l3326:	
  6450                           	line	297
  6451                           	
  6452  00E4                     l3327:	
  6453  00E4  0008               	return
  6454                           	opt stack 0
  6455                           GLOBAL	__end_of_I2CPWMworker
  6456  00E5                     	__end_of_I2CPWMworker:
  6457 ;; =============== function _I2CPWMworker ends ============
  6458                           
  6459                           	signat	_I2CPWMworker,88
  6460                           psect	text1307,local,class=CODE,delta=2
  6461                           global __ptext1307
  6462  097D                     __ptext1307:
  6463                           
  6464 ;; *************** function _SPIPWMworker *****************
  6465 ;; Defined at:
  6466 ;;		line 165 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  fInst           1   14[BANK0 ] unsigned char 
  6471 ;;  bf              1   13[BANK0 ] unsigned char 
  6472 ;;  fb              1   12[BANK0 ] unsigned char 
  6473 ;;  instruction     1   11[BANK0 ] unsigned char 
  6474 ;;  token           1   10[BANK0 ] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;		None               void
  6477 ;; Registers used:
  6478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6485 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6487 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6488 ;;Total ram usage:        6 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:    3
  6491 ;; This function calls:
  6492 ;;		_initSPI
  6493 ;;		_enablePWM
  6494 ;;		_setPeriod
  6495 ;;		_setDuty
  6496 ;; This function is called by:
  6497 ;;		_main
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           psect	text1307
  6501                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
  6502                           	line	165
  6503                           	global	__size_of_SPIPWMworker
  6504  0086                     	__size_of_SPIPWMworker	equ	__end_of_SPIPWMworker-_SPIPWMworker
  6505                           	
  6506  097D                     _SPIPWMworker:	
  6507                           	opt	stack 12
  6508                           ; Regs used in _SPIPWMworker: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6509                           	line	166
  6510                           	
  6511  097D                     l19846:	
  6512                           ;spi.c: 166: unsigned char token, instruction, fInst=0,fb=0,bf=0;
  6513  097D  0020               	movlb 0	; select bank0
  6514  097E  01C8               	clrf	(SPIPWMworker@fInst)
  6515  097F  01C6               	clrf	(SPIPWMworker@fb)
  6516  0980  01C7               	clrf	(SPIPWMworker@bf)
  6517                           	line	167
  6518                           	
  6519  0981                     l19848:	
  6520                           ;spi.c: 167: initSPI();
  6521  0981  3194  24E4  3189   	fcall	_initSPI
  6522                           	line	168
  6523                           	
  6524  0984                     l19850:	
  6525                           ;spi.c: 168: SSP2BUF = 0xFD;
  6526  0984  30FD               	movlw	(0FDh)
  6527  0985  0024               	movlb 4	; select bank4
  6528  0986  0099               	movwf	(537)^0200h	;volatile
  6529                           	line	169
  6530                           	
  6531  0987                     l19852:	
  6532                           ;spi.c: 169: enablePWM();
  6533  0987  3187  27BC  3189   	fcall	_enablePWM
  6534  098A  29F2               	goto	l4965
  6535                           	line	170
  6536                           ;spi.c: 170: while (1)
  6537                           	
  6538  098B                     l4964:	
  6539                           	line	172
  6540                           ;spi.c: 171: {
  6541                           ;spi.c: 172: while(PORTCbits.RC0 ==0)
  6542  098B  29F2               	goto	l4965
  6543                           	
  6544  098C                     l4966:	
  6545                           	line	174
  6546                           ;spi.c: 173: {
  6547                           ;spi.c: 174: if(SSP2STATbits.BF)
  6548  098C  0024               	movlb 4	; select bank4
  6549  098D  1C1C               	btfss	(540)^0200h,0	;volatile
  6550  098E  2990               	goto	u4881
  6551  098F  2991               	goto	u4880
  6552  0990                     u4881:
  6553  0990  29F2               	goto	l4965
  6554  0991                     u4880:
  6555                           	line	176
  6556                           	
  6557  0991                     l19854:	
  6558                           ;spi.c: 175: {
  6559                           ;spi.c: 176: bf=1;
  6560  0991  0020               	movlb 0	; select bank0
  6561  0992  01C7               	clrf	(SPIPWMworker@bf)
  6562  0993  1403               	bsf	status,0
  6563  0994  0DC7               	rlf	(SPIPWMworker@bf),f
  6564                           	line	177
  6565                           ;spi.c: 177: if(fb==0)
  6566  0995  08C6               	movf	(SPIPWMworker@fb),f
  6567  0996  1D03               	skipz
  6568  0997  2999               	goto	u4891
  6569  0998  299A               	goto	u4890
  6570  0999                     u4891:
  6571  0999  29A6               	goto	l19860
  6572  099A                     u4890:
  6573                           	line	179
  6574                           	
  6575  099A                     l19856:	
  6576                           ;spi.c: 178: {
  6577                           ;spi.c: 179: token = SSP2BUF;
  6578  099A  0024               	movlb 4	; select bank4
  6579  099B  0819               	movf	(537)^0200h,w	;volatile
  6580  099C  00F9               	movwf	(??_SPIPWMworker+0)+0
  6581  099D  0879               	movf	(??_SPIPWMworker+0)+0,w
  6582  099E  0020               	movlb 0	; select bank0
  6583  099F  00C4               	movwf	(SPIPWMworker@token)
  6584                           	line	180
  6585                           	
  6586  09A0                     l19858:	
  6587                           ;spi.c: 180: instruction = token & 0xF7;
  6588  09A0  0844               	movf	(SPIPWMworker@token),w
  6589  09A1  39F7               	andlw	0F7h
  6590  09A2  00F9               	movwf	(??_SPIPWMworker+0)+0
  6591  09A3  0879               	movf	(??_SPIPWMworker+0)+0,w
  6592  09A4  00C5               	movwf	(SPIPWMworker@instruction)
  6593  09A5  29A6               	goto	l19860
  6594                           	line	181
  6595                           	
  6596  09A6                     l4968:	
  6597                           	line	182
  6598                           	
  6599  09A6                     l19860:	
  6600                           ;spi.c: 181: }
  6601                           ;spi.c: 182: fb=1;
  6602  09A6  01C6               	clrf	(SPIPWMworker@fb)
  6603  09A7  1403               	bsf	status,0
  6604  09A8  0DC6               	rlf	(SPIPWMworker@fb),f
  6605                           	line	183
  6606                           ;spi.c: 183: switch (instruction)
  6607  09A9  29E8               	goto	l19888
  6608                           	line	185
  6609                           ;spi.c: 184: {
  6610                           ;spi.c: 185: case 0:
  6611                           	
  6612  09AA                     l4970:	
  6613                           	line	186
  6614                           	
  6615  09AA                     l19862:	
  6616                           ;spi.c: 186: if(fInst)
  6617  09AA  0848               	movf	(SPIPWMworker@fInst),w
  6618  09AB  1D03               	skipz
  6619  09AC  29AE               	goto	u4900
  6620  09AD  29C0               	goto	l19870
  6621  09AE                     u4900:
  6622                           	line	188
  6623                           	
  6624  09AE                     l19864:	
  6625                           ;spi.c: 187: {
  6626                           ;spi.c: 188: if(fInst==1)setPeriod(SSP2BUF);
  6627  09AE  0848               	movf	(SPIPWMworker@fInst),w
  6628  09AF  3A01               	xorlw	01h&0ffh
  6629  09B0  1D03               	skipz
  6630  09B1  29B3               	goto	u4911
  6631  09B2  29B4               	goto	u4910
  6632  09B3                     u4911:
  6633  09B3  29BA               	goto	l19868
  6634  09B4                     u4910:
  6635                           	
  6636  09B4                     l19866:	
  6637  09B4  0024               	movlb 4	; select bank4
  6638  09B5  0819               	movf	(537)^0200h,w	;volatile
  6639  09B6  3196  26FD  3189   	fcall	_setPeriod
  6640  09B9  29BA               	goto	l19868
  6641                           	
  6642  09BA                     l4972:	
  6643                           	line	189
  6644                           	
  6645  09BA                     l19868:	
  6646                           ;spi.c: 189: fInst++;
  6647  09BA  3001               	movlw	(01h)
  6648  09BB  00F9               	movwf	(??_SPIPWMworker+0)+0
  6649  09BC  0879               	movf	(??_SPIPWMworker+0)+0,w
  6650  09BD  0020               	movlb 0	; select bank0
  6651  09BE  07C8               	addwf	(SPIPWMworker@fInst),f
  6652                           	line	190
  6653                           ;spi.c: 190: }
  6654  09BF  29C4               	goto	l19872
  6655                           	line	191
  6656                           	
  6657  09C0                     l4971:	
  6658                           	line	193
  6659                           	
  6660  09C0                     l19870:	
  6661                           ;spi.c: 191: else
  6662                           ;spi.c: 192: {
  6663                           ;spi.c: 193: fInst=1;
  6664  09C0  01C8               	clrf	(SPIPWMworker@fInst)
  6665  09C1  1403               	bsf	status,0
  6666  09C2  0DC8               	rlf	(SPIPWMworker@fInst),f
  6667  09C3  29C4               	goto	l19872
  6668                           	line	194
  6669                           	
  6670  09C4                     l4973:	
  6671                           	line	195
  6672                           	
  6673  09C4                     l19872:	
  6674                           ;spi.c: 194: }
  6675                           ;spi.c: 195: SSP2BUF = PWMperiod;
  6676  09C4  0864               	movf	(_PWMperiod),w
  6677  09C5  0024               	movlb 4	; select bank4
  6678  09C6  0099               	movwf	(537)^0200h	;volatile
  6679                           	line	196
  6680                           ;spi.c: 196: break;
  6681  09C7  29F2               	goto	l4965
  6682                           	line	197
  6683                           ;spi.c: 197: case 1:
  6684                           	
  6685  09C8                     l4975:	
  6686                           	line	198
  6687                           	
  6688  09C8                     l19874:	
  6689                           ;spi.c: 198: if(fInst)
  6690  09C8  0020               	movlb 0	; select bank0
  6691  09C9  0848               	movf	(SPIPWMworker@fInst),w
  6692  09CA  1D03               	skipz
  6693  09CB  29CD               	goto	u4920
  6694  09CC  29DF               	goto	l19882
  6695  09CD                     u4920:
  6696                           	line	200
  6697                           	
  6698  09CD                     l19876:	
  6699                           ;spi.c: 199: {
  6700                           ;spi.c: 200: if(fInst==1)setDuty(SSP2BUF);
  6701  09CD  0848               	movf	(SPIPWMworker@fInst),w
  6702  09CE  3A01               	xorlw	01h&0ffh
  6703  09CF  1D03               	skipz
  6704  09D0  29D2               	goto	u4931
  6705  09D1  29D3               	goto	u4930
  6706  09D2                     u4931:
  6707  09D2  29D9               	goto	l19880
  6708  09D3                     u4930:
  6709                           	
  6710  09D3                     l19878:	
  6711  09D3  0024               	movlb 4	; select bank4
  6712  09D4  0819               	movf	(537)^0200h,w	;volatile
  6713  09D5  3189  210B  3189   	fcall	_setDuty
  6714  09D8  29D9               	goto	l19880
  6715                           	
  6716  09D9                     l4977:	
  6717                           	line	201
  6718                           	
  6719  09D9                     l19880:	
  6720                           ;spi.c: 201: fInst++;
  6721  09D9  3001               	movlw	(01h)
  6722  09DA  00F9               	movwf	(??_SPIPWMworker+0)+0
  6723  09DB  0879               	movf	(??_SPIPWMworker+0)+0,w
  6724  09DC  0020               	movlb 0	; select bank0
  6725  09DD  07C8               	addwf	(SPIPWMworker@fInst),f
  6726                           	line	202
  6727                           ;spi.c: 202: }
  6728  09DE  29E3               	goto	l19884
  6729                           	line	203
  6730                           	
  6731  09DF                     l4976:	
  6732                           	line	205
  6733                           	
  6734  09DF                     l19882:	
  6735                           ;spi.c: 203: else
  6736                           ;spi.c: 204: {
  6737                           ;spi.c: 205: fInst=1;
  6738  09DF  01C8               	clrf	(SPIPWMworker@fInst)
  6739  09E0  1403               	bsf	status,0
  6740  09E1  0DC8               	rlf	(SPIPWMworker@fInst),f
  6741  09E2  29E3               	goto	l19884
  6742                           	line	206
  6743                           	
  6744  09E3                     l4978:	
  6745                           	line	207
  6746                           	
  6747  09E3                     l19884:	
  6748                           ;spi.c: 206: }
  6749                           ;spi.c: 207: SSP2BUF = PWMduty;
  6750  09E3  0863               	movf	(_PWMduty),w
  6751  09E4  0024               	movlb 4	; select bank4
  6752  09E5  0099               	movwf	(537)^0200h	;volatile
  6753                           	line	208
  6754                           ;spi.c: 208: break;
  6755  09E6  29F2               	goto	l4965
  6756                           	line	209
  6757                           	
  6758  09E7                     l19886:	
  6759                           ;spi.c: 209: }
  6760  09E7  29F2               	goto	l4965
  6761                           	line	183
  6762                           	
  6763  09E8                     l4969:	
  6764                           	
  6765  09E8                     l19888:	
  6766  09E8  0020               	movlb 0	; select bank0
  6767  09E9  0845               	movf	(SPIPWMworker@instruction),w
  6768                           	; Switch size 1, requested type "space"
  6769                           ; Number of cases is 2, Range of values is 0 to 1
  6770                           ; switch strategies available:
  6771                           ; Name         Instructions Cycles
  6772                           ; simple_byte            7     4 (average)
  6773                           ; direct_byte           10     6 (fixed)
  6774                           ; jumptable            260     6 (fixed)
  6775                           ; rangetable             6     4 (fixed)
  6776                           ; spacedrange            9     6 (fixed)
  6777                           ; locatedrange           2     3 (fixed)
  6778                           ;	Chosen strategy is simple_byte
  6779                           
  6780                           	opt asmopt_off
  6781  09EA  3A00               	xorlw	0^0	; case 0
  6782  09EB  1903               	skipnz
  6783  09EC  29AA               	goto	l19862
  6784  09ED  3A01               	xorlw	1^0	; case 1
  6785  09EE  1903               	skipnz
  6786  09EF  29C8               	goto	l19874
  6787  09F0  29F2               	goto	l4965
  6788                           	opt asmopt_on
  6789                           
  6790                           	line	209
  6791                           	
  6792  09F1                     l4974:	
  6793  09F1  29F2               	goto	l4965
  6794                           	line	210
  6795                           	
  6796  09F2                     l4967:	
  6797                           	line	211
  6798                           	
  6799  09F2                     l4965:	
  6800                           	line	172
  6801  09F2  0020               	movlb 0	; select bank0
  6802  09F3  1C0E               	btfss	(14),0	;volatile
  6803  09F4  29F6               	goto	u4941
  6804  09F5  29F7               	goto	u4940
  6805  09F6                     u4941:
  6806  09F6  298C               	goto	l4966
  6807  09F7                     u4940:
  6808  09F7  29F8               	goto	l19890
  6809                           	
  6810  09F8                     l4979:	
  6811                           	line	212
  6812                           	
  6813  09F8                     l19890:	
  6814                           ;spi.c: 210: }
  6815                           ;spi.c: 211: }
  6816                           ;spi.c: 212: if(bf)
  6817  09F8  0847               	movf	(SPIPWMworker@bf),w
  6818  09F9  1D03               	skipz
  6819  09FA  29FC               	goto	u4950
  6820  09FB  29F2               	goto	l4965
  6821  09FC                     u4950:
  6822                           	line	214
  6823                           	
  6824  09FC                     l19892:	
  6825                           ;spi.c: 213: {
  6826                           ;spi.c: 214: fb=0;
  6827  09FC  01C6               	clrf	(SPIPWMworker@fb)
  6828                           	line	215
  6829                           ;spi.c: 215: bf=0;
  6830  09FD  01C7               	clrf	(SPIPWMworker@bf)
  6831                           	line	216
  6832                           ;spi.c: 216: fInst = 0;
  6833  09FE  01C8               	clrf	(SPIPWMworker@fInst)
  6834  09FF  29F2               	goto	l4965
  6835                           	line	217
  6836                           	
  6837  0A00                     l4980:	
  6838  0A00  29F2               	goto	l4965
  6839                           	line	218
  6840                           	
  6841  0A01                     l4981:	
  6842                           	line	170
  6843  0A01  29F2               	goto	l4965
  6844                           	
  6845  0A02                     l4982:	
  6846                           	line	220
  6847                           	
  6848  0A02                     l4983:	
  6849  0A02  0008               	return
  6850                           	opt stack 0
  6851                           GLOBAL	__end_of_SPIPWMworker
  6852  0A03                     	__end_of_SPIPWMworker:
  6853 ;; =============== function _SPIPWMworker ends ============
  6854                           
  6855                           	signat	_SPIPWMworker,88
  6856                           psect	text1308,local,class=CODE,delta=2
  6857                           global __ptext1308
  6858  01FF                     __ptext1308:
  6859                           
  6860 ;; *************** function _nullfunc1 *****************
  6861 ;; Defined at:
  6862 ;;		line 70 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		None
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           psect	text1308
  6890                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  6891                           	line	70
  6892                           	global	__size_of_nullfunc1
  6893  0001                     	__size_of_nullfunc1	equ	__end_of_nullfunc1-_nullfunc1
  6894                           	
  6895  01FF                     _nullfunc1:	
  6896                           	opt	stack 14
  6897                           ; Regs used in _nullfunc1: []
  6898                           	
  6899  01FF                     l1623:	
  6900  01FF  0008               	return
  6901                           	opt stack 0
  6902                           GLOBAL	__end_of_nullfunc1
  6903  0200                     	__end_of_nullfunc1:
  6904 ;; =============== function _nullfunc1 ends ============
  6905                           
  6906                           	signat	_nullfunc1,88
  6907                           psect	text1309,local,class=CODE,delta=2
  6908                           global __ptext1309
  6909  0D42                     __ptext1309:
  6910                           
  6911 ;; *************** function _UARTworker *****************
  6912 ;; Defined at:
  6913 ;;		line 52 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  instruction     1   19[BANK0 ] unsigned char 
  6918 ;;  c               1   18[BANK0 ] unsigned char 
  6919 ;;  mode            1   17[BANK0 ] unsigned char 
  6920 ;;  EEaddr          1   16[BANK0 ] unsigned char 
  6921 ;;  adcc            1   15[BANK0 ] unsigned char 
  6922 ;;  EEaddrF         1   14[BANK0 ] unsigned char 
  6923 ;;  helpC           1   13[BANK0 ] unsigned char 
  6924 ;;  addr            1   12[BANK0 ] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;		None               void
  6927 ;; Registers used:
  6928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6935 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6937 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  6938 ;;Total ram usage:       10 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    3
  6941 ;; This function calls:
  6942 ;;		_initUART
  6943 ;;		_UARTwriteString
  6944 ;;		_UARTwrite
  6945 ;;		_UARTread
  6946 ;;		_enablePWM
  6947 ;;		_enableDAC
  6948 ;;		_getADC
  6949 ;;		_UARTwriteDecimal
  6950 ;;		_UARTcharFromString
  6951 ;;		_setPeriod
  6952 ;;		_setDuty
  6953 ;;		_disablePWM
  6954 ;;		_setDAC
  6955 ;;		_disableDAC
  6956 ;;		_EEPROMwrite
  6957 ;;		_EEPROMread
  6958 ;; This function is called by:
  6959 ;;		_main
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           psect	text1309
  6963                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  6964                           	line	52
  6965                           	global	__size_of_UARTworker
  6966  02BE                     	__size_of_UARTworker	equ	__end_of_UARTworker-_UARTworker
  6967                           	
  6968  0D42                     _UARTworker:	
  6969                           	opt	stack 12
  6970                           ; Regs used in _UARTworker: [allreg]
  6971                           	line	53
  6972                           	
  6973  0D42                     l19894:	
  6974                           ;uart.c: 53: unsigned char c,mode=0,addr=0,instruction=0,EEaddrF=0,EEaddr=0,adcc=0,helpC
                                 ;
  6975  0D42  0020               	movlb 0	; select bank0
  6976  0D43  01CB               	clrf	(UARTworker@mode)
  6977  0D44  01C6               	clrf	(UARTworker@addr)
  6978  0D45  01CD               	clrf	(UARTworker@instruction)
  6979  0D46  01C8               	clrf	(UARTworker@EEaddrF)
  6980  0D47  01CA               	clrf	(UARTworker@EEaddr)
  6981  0D48  01C9               	clrf	(UARTworker@adcc)
  6982                           	line	54
  6983                           	
  6984  0D49                     l19896:	
  6985                           ;uart.c: 54: initUART();
  6986  0D49  3195  252E  318D   	fcall	_initUART
  6987                           	line	56
  6988                           	
  6989  0D4C                     l19898:	
  6990                           ;uart.c: 56: UARTwriteString(msgMenu[0]);
  6991  0D4C  0020               	movlb 0	; select bank0
  6992  0D4D  0831               	movf	(_msgMenu+1),w
  6993  0D4E  01F5               	clrf	(?_UARTwriteString+1)
  6994  0D4F  07F5               	addwf	(?_UARTwriteString+1)
  6995  0D50  0830               	movf	(_msgMenu),w
  6996  0D51  01F4               	clrf	(?_UARTwriteString)
  6997  0D52  07F4               	addwf	(?_UARTwriteString)
  6998                           
  6999  0D53  3195  25CF  318D   	fcall	_UARTwriteString
  7000                           	line	57
  7001                           	
  7002  0D56                     l19900:	
  7003                           ;uart.c: 57: UARTwrite('\n');
  7004  0D56  300A               	movlw	(0Ah)
  7005  0D57  3195  251F  318D   	fcall	_UARTwrite
  7006  0D5A  2D5B               	goto	l19902
  7007                           	line	58
  7008                           ;uart.c: 58: while(1)
  7009                           	
  7010  0D5B                     l6627:	
  7011                           	line	61
  7012                           	
  7013  0D5B                     l19902:	
  7014                           ;uart.c: 59: {
  7015                           ;uart.c: 61: if(RCIF)
  7016  0D5B  0020               	movlb 0	; select bank0
  7017  0D5C  1E91               	btfss	(141/8),(141)&7
  7018  0D5D  2D5F               	goto	u4961
  7019  0D5E  2D60               	goto	u4960
  7020  0D5F                     u4961:
  7021  0D5F  2D5B               	goto	l19902
  7022  0D60                     u4960:
  7023                           	line	63
  7024                           	
  7025  0D60                     l19904:	
  7026                           ;uart.c: 62: {
  7027                           ;uart.c: 63: RCIF=0;
  7028  0D60  1291               	bcf	(141/8),(141)&7
  7029                           	line	64
  7030                           ;uart.c: 64: RC3=1;;
  7031  0D61  158E               	bsf	(115/8),(115)&7
  7032                           	line	65
  7033                           	
  7034  0D62                     l19906:	
  7035                           ;uart.c: 65: if(!(RCSTA&0b00000110))
  7036  0D62  0023               	movlb 3	; select bank3
  7037  0D63  081D               	movf	(413)^0180h,w
  7038  0D64  3906               	andlw	06h
  7039  0D65  1D03               	btfss	status,2
  7040  0D66  2D68               	goto	u4971
  7041  0D67  2D69               	goto	u4970
  7042  0D68                     u4971:
  7043  0D68  2D81               	goto	l19912
  7044  0D69                     u4970:
  7045                           	line	66
  7046                           	
  7047  0D69                     l19908:	
  7048                           ;uart.c: 66: { rhead++;
  7049  0D69  3001               	movlw	(01h)
  7050  0D6A  0020               	movlb 0	; select bank0
  7051  0D6B  00C4               	movwf	(??_UARTworker+0)+0
  7052  0D6C  0844               	movf	(??_UARTworker+0)+0,w
  7053  0D6D  07E7               	addwf	(_rhead),f	;volatile
  7054                           	line	67
  7055                           ;uart.c: 67: rhead&=(8-1);
  7056  0D6E  3007               	movlw	(07h)
  7057  0D6F  00C4               	movwf	(??_UARTworker+0)+0
  7058  0D70  0844               	movf	(??_UARTworker+0)+0,w
  7059  0D71  05E7               	andwf	(_rhead),f	;volatile
  7060                           	line	68
  7061                           	
  7062  0D72                     l19910:	
  7063                           ;uart.c: 68: ringbuff[rhead]=RCREG;
  7064  0D72  0023               	movlb 3	; select bank3
  7065  0D73  0819               	movf	(409)^0180h,w	;volatile
  7066  0D74  0020               	movlb 0	; select bank0
  7067  0D75  00C4               	movwf	(??_UARTworker+0)+0
  7068  0D76  01C5               	clrf	(??_UARTworker+0)+0+1
  7069  0D77  0867               	movf	(_rhead),w	;volatile
  7070  0D78  0709               	addwf	wreg,w
  7071  0D79  3E53               	addlw	_ringbuff&0ffh
  7072  0D7A  0086               	movwf	fsr1l
  7073  0D7B  0187               	clrf fsr1h	
  7074                           	
  7075  0D7C  0844               	movf	0+(??_UARTworker+0)+0,w
  7076  0D7D  3FC0               	movwi	[0]fsr1
  7077  0D7E  0845               	movf	1+(??_UARTworker+0)+0,w
  7078  0D7F  3FC1               	movwi	[1]fsr1
  7079  0D80  2D81               	goto	l19912
  7080                           	line	69
  7081                           	
  7082  0D81                     l6629:	
  7083                           	line	70
  7084                           	
  7085  0D81                     l19912:	
  7086                           ;uart.c: 69: }
  7087                           ;uart.c: 70: RC3=0;;
  7088  0D81  0020               	movlb 0	; select bank0
  7089  0D82  118E               	bcf	(115/8),(115)&7
  7090                           	line	71
  7091                           	
  7092  0D83                     l19914:	
  7093                           ;uart.c: 71: c=UARTread();
  7094  0D83  3195  253F  318D   	fcall	_UARTread
  7095  0D86  0020               	movlb 0	; select bank0
  7096  0D87  00C4               	movwf	(??_UARTworker+0)+0
  7097  0D88  0844               	movf	(??_UARTworker+0)+0,w
  7098  0D89  00CC               	movwf	(UARTworker@c)
  7099                           	line	72
  7100                           ;uart.c: 72: UARTwrite(c);
  7101  0D8A  084C               	movf	(UARTworker@c),w
  7102  0D8B  3195  251F  318D   	fcall	_UARTwrite
  7103                           	line	74
  7104                           ;uart.c: 74: switch (mode)
  7105  0D8E  2FF1               	goto	l20078
  7106                           	line	76
  7107                           ;uart.c: 75: {
  7108                           ;uart.c: 76: case 0:
  7109                           	
  7110  0D8F                     l6631:	
  7111                           	line	77
  7112                           	
  7113  0D8F                     l19916:	
  7114                           ;uart.c: 77: mode=c-48;
  7115  0D8F  0020               	movlb 0	; select bank0
  7116  0D90  084C               	movf	(UARTworker@c),w
  7117  0D91  3ED0               	addlw	0D0h
  7118  0D92  00C4               	movwf	(??_UARTworker+0)+0
  7119  0D93  0844               	movf	(??_UARTworker+0)+0,w
  7120  0D94  00CB               	movwf	(UARTworker@mode)
  7121                           	line	78
  7122                           	
  7123  0D95                     l19918:	
  7124                           ;uart.c: 78: UARTwriteString(msgMenu[c-48]);
  7125  0D95  084C               	movf	(UARTworker@c),w
  7126  0D96  0709               	addwf	wreg,w
  7127  0D97  3EA0               	addlw	0A0h
  7128  0D98  3E30               	addlw	_msgMenu&0ffh
  7129  0D99  0086               	movwf	fsr1l
  7130  0D9A  0187               	clrf fsr1h	
  7131                           	
  7132  0D9B  3F40               	moviw	[0]fsr1
  7133  0D9C  00F4               	movwf	(?_UARTwriteString)
  7134  0D9D  3F41               	moviw	[1]fsr1
  7135  0D9E  00F5               	movwf	(?_UARTwriteString+1)
  7136  0D9F  3195  25CF  318D   	fcall	_UARTwriteString
  7137                           	line	79
  7138                           	
  7139  0DA2                     l19920:	
  7140                           ;uart.c: 79: if(mode==2)enablePWM();
  7141  0DA2  0020               	movlb 0	; select bank0
  7142  0DA3  084B               	movf	(UARTworker@mode),w
  7143  0DA4  3A02               	xorlw	02h&0ffh
  7144  0DA5  1D03               	skipz
  7145  0DA6  2DA8               	goto	u4981
  7146  0DA7  2DA9               	goto	u4980
  7147  0DA8                     u4981:
  7148  0DA8  2DAD               	goto	l19924
  7149  0DA9                     u4980:
  7150                           	
  7151  0DA9                     l19922:	
  7152  0DA9  3187  27BC  318D   	fcall	_enablePWM
  7153  0DAC  2D5B               	goto	l19902
  7154                           	line	80
  7155                           	
  7156  0DAD                     l6632:	
  7157                           	
  7158  0DAD                     l19924:	
  7159                           ;uart.c: 80: else if(mode==3)enableDAC();
  7160  0DAD  0020               	movlb 0	; select bank0
  7161  0DAE  084B               	movf	(UARTworker@mode),w
  7162  0DAF  3A03               	xorlw	03h&0ffh
  7163  0DB0  1D03               	skipz
  7164  0DB1  2DB3               	goto	u4991
  7165  0DB2  2DB4               	goto	u4990
  7166  0DB3                     u4991:
  7167  0DB3  2D5B               	goto	l19902
  7168  0DB4                     u4990:
  7169                           	
  7170  0DB4                     l19926:	
  7171  0DB4  3194  24C4  318D   	fcall	_enableDAC
  7172  0DB7  2D5B               	goto	l19902
  7173                           	
  7174  0DB8                     l6634:	
  7175  0DB8  2D5B               	goto	l19902
  7176                           	line	81
  7177                           	
  7178  0DB9                     l6633:	
  7179                           ;uart.c: 81: break;
  7180  0DB9  2D5B               	goto	l19902
  7181                           	line	82
  7182                           ;uart.c: 82: case 1:
  7183                           	
  7184  0DBA                     l6636:	
  7185                           	line	83
  7186                           ;uart.c: 83: switch(c)
  7187  0DBA  2E3C               	goto	l19962
  7188                           	line	85
  7189                           ;uart.c: 84: {
  7190                           ;uart.c: 85: case 'r':
  7191                           	
  7192  0DBB                     l6638:	
  7193                           	line	86
  7194                           	
  7195  0DBB                     l19928:	
  7196                           ;uart.c: 86: UARTwriteString("\n\nADC value: ");
  7197  0DBB  30CA               	movlw	low(STR_1|8000h)
  7198  0DBC  00F4               	movwf	(?_UARTwriteString)
  7199  0DBD  3086               	movlw	high(STR_1|8000h)
  7200  0DBE  00F5               	movwf	((?_UARTwriteString))+1
  7201  0DBF  3195  25CF  318D   	fcall	_UARTwriteString
  7202                           	line	87
  7203                           	
  7204  0DC2                     l19930:	
  7205                           ;uart.c: 87: helpC=getADC(adcc);
  7206  0DC2  0020               	movlb 0	; select bank0
  7207  0DC3  0849               	movf	(UARTworker@adcc),w
  7208  0DC4  318A  2203  318D   	fcall	_getADC
  7209  0DC7  0873               	movf	(0+(?_getADC)),w
  7210  0DC8  0020               	movlb 0	; select bank0
  7211  0DC9  00C4               	movwf	(??_UARTworker+0)+0
  7212  0DCA  0844               	movf	(??_UARTworker+0)+0,w
  7213  0DCB  00C7               	movwf	(UARTworker@helpC)
  7214                           	line	88
  7215                           	
  7216  0DCC                     l19932:	
  7217                           ;uart.c: 88: UARTwriteDecimal(helpC);
  7218  0DCC  0847               	movf	(UARTworker@helpC),w
  7219  0DCD  3188  2003  318D   	fcall	_UARTwriteDecimal
  7220                           	line	89
  7221                           	
  7222  0DD0                     l19934:	
  7223                           ;uart.c: 89: UARTwriteString(msgMenu[1]);
  7224  0DD0  0020               	movlb 0	; select bank0
  7225  0DD1  0833               	movf	(1+_msgMenu+02h),w
  7226  0DD2  01F5               	clrf	(?_UARTwriteString+1)
  7227  0DD3  07F5               	addwf	(?_UARTwriteString+1)
  7228  0DD4  0832               	movf	(0+_msgMenu+02h),w
  7229  0DD5  01F4               	clrf	(?_UARTwriteString)
  7230  0DD6  07F4               	addwf	(?_UARTwriteString)
  7231                           
  7232  0DD7  3195  25CF  318D   	fcall	_UARTwriteString
  7233                           	line	90
  7234                           ;uart.c: 90: break;
  7235  0DDA  2D5B               	goto	l19902
  7236                           	line	91
  7237                           ;uart.c: 91: case '1':
  7238                           	
  7239  0DDB                     l6640:	
  7240                           	line	92
  7241                           	
  7242  0DDB                     l19936:	
  7243                           ;uart.c: 92: UARTwriteString("\n\nchannel 1 selected");
  7244  0DDB  308B               	movlw	low(STR_2|8000h)
  7245  0DDC  00F4               	movwf	(?_UARTwriteString)
  7246  0DDD  3086               	movlw	high(STR_2|8000h)
  7247  0DDE  00F5               	movwf	((?_UARTwriteString))+1
  7248  0DDF  3195  25CF  318D   	fcall	_UARTwriteString
  7249                           	line	93
  7250                           	
  7251  0DE2                     l19938:	
  7252                           ;uart.c: 93: adcc=0;
  7253  0DE2  0020               	movlb 0	; select bank0
  7254  0DE3  01C9               	clrf	(UARTworker@adcc)
  7255                           	line	94
  7256                           ;uart.c: 94: UARTwriteString(msgMenu[1]);
  7257  0DE4  0833               	movf	(1+_msgMenu+02h),w
  7258  0DE5  01F5               	clrf	(?_UARTwriteString+1)
  7259  0DE6  07F5               	addwf	(?_UARTwriteString+1)
  7260  0DE7  0832               	movf	(0+_msgMenu+02h),w
  7261  0DE8  01F4               	clrf	(?_UARTwriteString)
  7262  0DE9  07F4               	addwf	(?_UARTwriteString)
  7263                           
  7264  0DEA  3195  25CF  318D   	fcall	_UARTwriteString
  7265                           	line	95
  7266                           ;uart.c: 95: break;
  7267  0DED  2D5B               	goto	l19902
  7268                           	line	96
  7269                           ;uart.c: 96: case '2':
  7270                           	
  7271  0DEE                     l6641:	
  7272                           	line	97
  7273                           	
  7274  0DEE                     l19940:	
  7275                           ;uart.c: 97: UARTwriteString("\n\nchannel 2 selected");
  7276  0DEE  30A0               	movlw	low(STR_3|8000h)
  7277  0DEF  00F4               	movwf	(?_UARTwriteString)
  7278  0DF0  3086               	movlw	high(STR_3|8000h)
  7279  0DF1  00F5               	movwf	((?_UARTwriteString))+1
  7280  0DF2  3195  25CF  318D   	fcall	_UARTwriteString
  7281                           	line	98
  7282                           	
  7283  0DF5                     l19942:	
  7284                           ;uart.c: 98: adcc=1;
  7285  0DF5  0020               	movlb 0	; select bank0
  7286  0DF6  01C9               	clrf	(UARTworker@adcc)
  7287  0DF7  1403               	bsf	status,0
  7288  0DF8  0DC9               	rlf	(UARTworker@adcc),f
  7289                           	line	99
  7290                           	
  7291  0DF9                     l19944:	
  7292                           ;uart.c: 99: UARTwriteString(msgMenu[1]);
  7293  0DF9  0833               	movf	(1+_msgMenu+02h),w
  7294  0DFA  01F5               	clrf	(?_UARTwriteString+1)
  7295  0DFB  07F5               	addwf	(?_UARTwriteString+1)
  7296  0DFC  0832               	movf	(0+_msgMenu+02h),w
  7297  0DFD  01F4               	clrf	(?_UARTwriteString)
  7298  0DFE  07F4               	addwf	(?_UARTwriteString)
  7299                           
  7300  0DFF  3195  25CF  318D   	fcall	_UARTwriteString
  7301                           	line	100
  7302                           ;uart.c: 100: break;
  7303  0E02  2D5B               	goto	l19902
  7304                           	line	101
  7305                           ;uart.c: 101: case '3':
  7306                           	
  7307  0E03                     l6642:	
  7308                           	line	102
  7309                           	
  7310  0E03                     l19946:	
  7311                           ;uart.c: 102: UARTwriteString("\n\nchannel 3 selected");
  7312  0E03  30B5               	movlw	low(STR_4|8000h)
  7313  0E04  00F4               	movwf	(?_UARTwriteString)
  7314  0E05  3086               	movlw	high(STR_4|8000h)
  7315  0E06  00F5               	movwf	((?_UARTwriteString))+1
  7316  0E07  3195  25CF  318D   	fcall	_UARTwriteString
  7317                           	line	103
  7318                           	
  7319  0E0A                     l19948:	
  7320                           ;uart.c: 103: adcc=2;
  7321  0E0A  3002               	movlw	(02h)
  7322  0E0B  0020               	movlb 0	; select bank0
  7323  0E0C  00C4               	movwf	(??_UARTworker+0)+0
  7324  0E0D  0844               	movf	(??_UARTworker+0)+0,w
  7325  0E0E  00C9               	movwf	(UARTworker@adcc)
  7326                           	line	104
  7327                           	
  7328  0E0F                     l19950:	
  7329                           ;uart.c: 104: UARTwriteString(msgMenu[1]);
  7330  0E0F  0833               	movf	(1+_msgMenu+02h),w
  7331  0E10  01F5               	clrf	(?_UARTwriteString+1)
  7332  0E11  07F5               	addwf	(?_UARTwriteString+1)
  7333  0E12  0832               	movf	(0+_msgMenu+02h),w
  7334  0E13  01F4               	clrf	(?_UARTwriteString)
  7335  0E14  07F4               	addwf	(?_UARTwriteString)
  7336                           
  7337  0E15  3195  25CF  318D   	fcall	_UARTwriteString
  7338                           	line	105
  7339                           ;uart.c: 105: break;
  7340  0E18  2D5B               	goto	l19902
  7341                           	line	106
  7342                           ;uart.c: 106: case 't':
  7343                           	
  7344  0E19                     l6643:	
  7345                           	line	107
  7346                           	
  7347  0E19                     l19952:	
  7348                           ;uart.c: 107: UARTwriteString("\n\nTemp sensor selected");
  7349  0E19  3074               	movlw	low(STR_5|8000h)
  7350  0E1A  00F4               	movwf	(?_UARTwriteString)
  7351  0E1B  3086               	movlw	high(STR_5|8000h)
  7352  0E1C  00F5               	movwf	((?_UARTwriteString))+1
  7353  0E1D  3195  25CF  318D   	fcall	_UARTwriteString
  7354                           	line	108
  7355                           	
  7356  0E20                     l19954:	
  7357                           ;uart.c: 108: adcc=3;
  7358  0E20  3003               	movlw	(03h)
  7359  0E21  0020               	movlb 0	; select bank0
  7360  0E22  00C4               	movwf	(??_UARTworker+0)+0
  7361  0E23  0844               	movf	(??_UARTworker+0)+0,w
  7362  0E24  00C9               	movwf	(UARTworker@adcc)
  7363                           	line	109
  7364                           	
  7365  0E25                     l19956:	
  7366                           ;uart.c: 109: UARTwriteString(msgMenu[1]);
  7367  0E25  0833               	movf	(1+_msgMenu+02h),w
  7368  0E26  01F5               	clrf	(?_UARTwriteString+1)
  7369  0E27  07F5               	addwf	(?_UARTwriteString+1)
  7370  0E28  0832               	movf	(0+_msgMenu+02h),w
  7371  0E29  01F4               	clrf	(?_UARTwriteString)
  7372  0E2A  07F4               	addwf	(?_UARTwriteString)
  7373                           
  7374  0E2B  3195  25CF  318D   	fcall	_UARTwriteString
  7375                           	line	110
  7376                           ;uart.c: 110: break;
  7377  0E2E  2D5B               	goto	l19902
  7378                           	line	111
  7379                           ;uart.c: 111: case 'm':
  7380                           	
  7381  0E2F                     l6644:	
  7382                           	line	112
  7383                           ;uart.c: 112: mode = 0;
  7384  0E2F  01CB               	clrf	(UARTworker@mode)
  7385                           	line	113
  7386                           	
  7387  0E30                     l19958:	
  7388                           ;uart.c: 113: UARTwriteString(msgMenu[0]);
  7389  0E30  0831               	movf	(_msgMenu+1),w
  7390  0E31  01F5               	clrf	(?_UARTwriteString+1)
  7391  0E32  07F5               	addwf	(?_UARTwriteString+1)
  7392  0E33  0830               	movf	(_msgMenu),w
  7393  0E34  01F4               	clrf	(?_UARTwriteString)
  7394  0E35  07F4               	addwf	(?_UARTwriteString)
  7395                           
  7396  0E36  3195  25CF  318D   	fcall	_UARTwriteString
  7397                           	line	114
  7398                           ;uart.c: 114: break;
  7399  0E39  2D5B               	goto	l19902
  7400                           	line	115
  7401                           ;uart.c: 115: default:
  7402                           	
  7403  0E3A                     l6645:	
  7404                           	line	116
  7405                           ;uart.c: 116: break;
  7406  0E3A  2D5B               	goto	l19902
  7407                           	line	117
  7408                           	
  7409  0E3B                     l19960:	
  7410                           ;uart.c: 117: }
  7411  0E3B  2D5B               	goto	l19902
  7412                           	line	83
  7413                           	
  7414  0E3C                     l6637:	
  7415                           	
  7416  0E3C                     l19962:	
  7417  0E3C  0020               	movlb 0	; select bank0
  7418  0E3D  084C               	movf	(UARTworker@c),w
  7419                           	; Switch size 1, requested type "space"
  7420                           ; Number of cases is 6, Range of values is 49 to 116
  7421                           ; switch strategies available:
  7422                           ; Name         Instructions Cycles
  7423                           ; simple_byte           19    10 (average)
  7424                           ; direct_byte          145     9 (fixed)
  7425                           ; jumptable            263     9 (fixed)
  7426                           ;	Chosen strategy is simple_byte
  7427                           
  7428                           	opt asmopt_off
  7429  0E3E  3A31               	xorlw	49^0	; case 49
  7430  0E3F  1903               	skipnz
  7431  0E40  2DDB               	goto	l19936
  7432  0E41  3A03               	xorlw	50^49	; case 50
  7433  0E42  1903               	skipnz
  7434  0E43  2DEE               	goto	l19940
  7435  0E44  3A01               	xorlw	51^50	; case 51
  7436  0E45  1903               	skipnz
  7437  0E46  2E03               	goto	l19946
  7438  0E47  3A5E               	xorlw	109^51	; case 109
  7439  0E48  1903               	skipnz
  7440  0E49  2E2F               	goto	l6644
  7441  0E4A  3A1F               	xorlw	114^109	; case 114
  7442  0E4B  1903               	skipnz
  7443  0E4C  2DBB               	goto	l19928
  7444  0E4D  3A06               	xorlw	116^114	; case 116
  7445  0E4E  1903               	skipnz
  7446  0E4F  2E19               	goto	l19952
  7447  0E50  2D5B               	goto	l19902
  7448                           	opt asmopt_on
  7449                           
  7450                           	line	117
  7451                           	
  7452  0E51                     l6639:	
  7453                           	line	118
  7454                           ;uart.c: 118: break;
  7455  0E51  2D5B               	goto	l19902
  7456                           	line	119
  7457                           ;uart.c: 119: case 2:
  7458                           	
  7459  0E52                     l6646:	
  7460                           	line	120
  7461                           	
  7462  0E52                     l19964:	
  7463                           ;uart.c: 120: if(instruction)
  7464  0E52  084D               	movf	(UARTworker@instruction),w
  7465  0E53  1D03               	skipz
  7466  0E54  2E56               	goto	u5000
  7467  0E55  2E99               	goto	l19982
  7468  0E56                     u5000:
  7469  0E56  2E8A               	goto	l19980
  7470                           	line	122
  7471                           	
  7472  0E57                     l19966:	
  7473                           ;uart.c: 121: {
  7474                           ;uart.c: 122: switch(instruction)
  7475  0E57  2E8A               	goto	l19980
  7476                           	line	124
  7477                           ;uart.c: 123: {
  7478                           ;uart.c: 124: case 'p':
  7479                           	
  7480  0E58                     l6649:	
  7481                           	line	126
  7482                           	
  7483  0E58                     l19968:	
  7484                           ;uart.c: 126: setPeriod(UARTcharFromString(c));
  7485  0E58  084C               	movf	(UARTworker@c),w
  7486  0E59  3188  203B  318D   	fcall	_UARTcharFromString
  7487  0E5C  3196  26FD  318D   	fcall	_setPeriod
  7488                           	line	127
  7489                           	
  7490  0E5F                     l19970:	
  7491                           ;uart.c: 127: UARTwriteString(msgMenu[2]);
  7492  0E5F  0020               	movlb 0	; select bank0
  7493  0E60  0835               	movf	(1+_msgMenu+04h),w
  7494  0E61  01F5               	clrf	(?_UARTwriteString+1)
  7495  0E62  07F5               	addwf	(?_UARTwriteString+1)
  7496  0E63  0834               	movf	(0+_msgMenu+04h),w
  7497  0E64  01F4               	clrf	(?_UARTwriteString)
  7498  0E65  07F4               	addwf	(?_UARTwriteString)
  7499                           
  7500  0E66  3195  25CF  318D   	fcall	_UARTwriteString
  7501                           	line	128
  7502                           ;uart.c: 128: break;
  7503  0E69  2E96               	goto	l6650
  7504                           	line	129
  7505                           ;uart.c: 129: case 'd':
  7506                           	
  7507  0E6A                     l6651:	
  7508                           	line	130
  7509                           	
  7510  0E6A                     l19972:	
  7511                           ;uart.c: 130: setDuty(UARTcharFromString(c));
  7512  0E6A  0020               	movlb 0	; select bank0
  7513  0E6B  084C               	movf	(UARTworker@c),w
  7514  0E6C  3188  203B  318D   	fcall	_UARTcharFromString
  7515  0E6F  3189  210B  318D   	fcall	_setDuty
  7516                           	line	131
  7517                           	
  7518  0E72                     l19974:	
  7519                           ;uart.c: 131: UARTwriteString(msgMenu[2]);
  7520  0E72  0020               	movlb 0	; select bank0
  7521  0E73  0835               	movf	(1+_msgMenu+04h),w
  7522  0E74  01F5               	clrf	(?_UARTwriteString+1)
  7523  0E75  07F5               	addwf	(?_UARTwriteString+1)
  7524  0E76  0834               	movf	(0+_msgMenu+04h),w
  7525  0E77  01F4               	clrf	(?_UARTwriteString)
  7526  0E78  07F4               	addwf	(?_UARTwriteString)
  7527                           
  7528  0E79  3195  25CF  318D   	fcall	_UARTwriteString
  7529                           	line	133
  7530                           ;uart.c: 133: break;
  7531  0E7C  2E96               	goto	l6650
  7532                           	line	134
  7533                           ;uart.c: 134: case 'm':
  7534                           	
  7535  0E7D                     l6652:	
  7536                           	line	135
  7537                           ;uart.c: 135: mode =0;
  7538  0E7D  01CB               	clrf	(UARTworker@mode)
  7539                           	line	137
  7540                           	
  7541  0E7E                     l19976:	
  7542                           ;uart.c: 137: UARTwriteString(msgMenu[0]);
  7543  0E7E  0831               	movf	(_msgMenu+1),w
  7544  0E7F  01F5               	clrf	(?_UARTwriteString+1)
  7545  0E80  07F5               	addwf	(?_UARTwriteString+1)
  7546  0E81  0830               	movf	(_msgMenu),w
  7547  0E82  01F4               	clrf	(?_UARTwriteString)
  7548  0E83  07F4               	addwf	(?_UARTwriteString)
  7549                           
  7550  0E84  3195  25CF  318D   	fcall	_UARTwriteString
  7551                           	line	138
  7552                           ;uart.c: 138: break;
  7553  0E87  2E96               	goto	l6650
  7554                           	line	139
  7555                           ;uart.c: 139: default:
  7556                           	
  7557  0E88                     l6653:	
  7558                           	line	140
  7559                           ;uart.c: 140: break;
  7560  0E88  2E96               	goto	l6650
  7561                           	line	141
  7562                           	
  7563  0E89                     l19978:	
  7564                           ;uart.c: 141: }
  7565  0E89  2E96               	goto	l6650
  7566                           	line	122
  7567                           	
  7568  0E8A                     l6648:	
  7569                           	
  7570  0E8A                     l19980:	
  7571  0E8A  0020               	movlb 0	; select bank0
  7572  0E8B  084D               	movf	(UARTworker@instruction),w
  7573                           	; Switch size 1, requested type "space"
  7574                           ; Number of cases is 3, Range of values is 100 to 112
  7575                           ; switch strategies available:
  7576                           ; Name         Instructions Cycles
  7577                           ; simple_byte           10     6 (average)
  7578                           ; direct_byte           35     9 (fixed)
  7579                           ; jumptable            263     9 (fixed)
  7580                           ;	Chosen strategy is simple_byte
  7581                           
  7582                           	opt asmopt_off
  7583  0E8C  3A64               	xorlw	100^0	; case 100
  7584  0E8D  1903               	skipnz
  7585  0E8E  2E6A               	goto	l19972
  7586  0E8F  3A09               	xorlw	109^100	; case 109
  7587  0E90  1903               	skipnz
  7588  0E91  2E7D               	goto	l6652
  7589  0E92  3A1D               	xorlw	112^109	; case 112
  7590  0E93  1903               	skipnz
  7591  0E94  2E58               	goto	l19968
  7592  0E95  2E96               	goto	l6650
  7593                           	opt asmopt_on
  7594                           
  7595                           	line	141
  7596                           	
  7597  0E96                     l6650:	
  7598                           	line	142
  7599                           ;uart.c: 142: instruction = 0;
  7600  0E96  0020               	movlb 0	; select bank0
  7601  0E97  01CD               	clrf	(UARTworker@instruction)
  7602                           	line	143
  7603                           ;uart.c: 143: }
  7604  0E98  2D5B               	goto	l19902
  7605                           	line	144
  7606                           	
  7607  0E99                     l6647:	
  7608                           	line	146
  7609                           	
  7610  0E99                     l19982:	
  7611                           ;uart.c: 144: else
  7612                           ;uart.c: 145: {
  7613                           ;uart.c: 146: instruction = c;
  7614  0E99  084C               	movf	(UARTworker@c),w
  7615  0E9A  00C4               	movwf	(??_UARTworker+0)+0
  7616  0E9B  0844               	movf	(??_UARTworker+0)+0,w
  7617  0E9C  00CD               	movwf	(UARTworker@instruction)
  7618                           	line	147
  7619                           ;uart.c: 147: if(instruction == 'p')
  7620  0E9D  084D               	movf	(UARTworker@instruction),w
  7621  0E9E  3A70               	xorlw	070h&0ffh
  7622  0E9F  1D03               	skipz
  7623  0EA0  2EA2               	goto	u5011
  7624  0EA1  2EA3               	goto	u5010
  7625  0EA2                     u5011:
  7626  0EA2  2EAB               	goto	l19986
  7627  0EA3                     u5010:
  7628                           	line	149
  7629                           	
  7630  0EA3                     l19984:	
  7631                           ;uart.c: 148: {
  7632                           ;uart.c: 149: UARTwriteString("\n\nEnter the PWM Period: ");
  7633  0EA3  302B               	movlw	low(STR_6|8000h)
  7634  0EA4  00F4               	movwf	(?_UARTwriteString)
  7635  0EA5  3086               	movlw	high(STR_6|8000h)
  7636  0EA6  00F5               	movwf	((?_UARTwriteString))+1
  7637  0EA7  3195  25CF  318D   	fcall	_UARTwriteString
  7638                           	line	151
  7639                           ;uart.c: 151: }
  7640  0EAA  2D5B               	goto	l19902
  7641                           	line	152
  7642                           	
  7643  0EAB                     l6655:	
  7644                           	
  7645  0EAB                     l19986:	
  7646                           ;uart.c: 152: else if(instruction == 'd')
  7647  0EAB  0020               	movlb 0	; select bank0
  7648  0EAC  084D               	movf	(UARTworker@instruction),w
  7649  0EAD  3A64               	xorlw	064h&0ffh
  7650  0EAE  1D03               	skipz
  7651  0EAF  2EB1               	goto	u5021
  7652  0EB0  2EB2               	goto	u5020
  7653  0EB1                     u5021:
  7654  0EB1  2EBA               	goto	l19990
  7655  0EB2                     u5020:
  7656                           	line	154
  7657                           	
  7658  0EB2                     l19988:	
  7659                           ;uart.c: 153: {
  7660                           ;uart.c: 154: UARTwriteString("\n\nEnter the PWM Duty Cycle: ");
  7661  0EB2  300E               	movlw	low(STR_7|8000h)
  7662  0EB3  00F4               	movwf	(?_UARTwriteString)
  7663  0EB4  3086               	movlw	high(STR_7|8000h)
  7664  0EB5  00F5               	movwf	((?_UARTwriteString))+1
  7665  0EB6  3195  25CF  318D   	fcall	_UARTwriteString
  7666                           	line	155
  7667                           ;uart.c: 155: }
  7668  0EB9  2D5B               	goto	l19902
  7669                           	line	156
  7670                           	
  7671  0EBA                     l6657:	
  7672                           	
  7673  0EBA                     l19990:	
  7674                           ;uart.c: 156: else if(instruction == 'm')
  7675  0EBA  0020               	movlb 0	; select bank0
  7676  0EBB  084D               	movf	(UARTworker@instruction),w
  7677  0EBC  3A6D               	xorlw	06Dh&0ffh
  7678  0EBD  1D03               	skipz
  7679  0EBE  2EC0               	goto	u5031
  7680  0EBF  2EC1               	goto	u5030
  7681  0EC0                     u5031:
  7682  0EC0  2D5B               	goto	l19902
  7683  0EC1                     u5030:
  7684                           	line	158
  7685                           	
  7686  0EC1                     l19992:	
  7687                           ;uart.c: 157: {
  7688                           ;uart.c: 158: mode =0;
  7689  0EC1  01CB               	clrf	(UARTworker@mode)
  7690                           	line	159
  7691                           ;uart.c: 159: instruction =0;
  7692  0EC2  01CD               	clrf	(UARTworker@instruction)
  7693                           	line	160
  7694                           	
  7695  0EC3                     l19994:	
  7696                           ;uart.c: 160: disablePWM();
  7697  0EC3  3194  24C8  318D   	fcall	_disablePWM
  7698                           	line	161
  7699                           	
  7700  0EC6                     l19996:	
  7701                           ;uart.c: 161: UARTwriteString(msgMenu[0]);
  7702  0EC6  0020               	movlb 0	; select bank0
  7703  0EC7  0831               	movf	(_msgMenu+1),w
  7704  0EC8  01F5               	clrf	(?_UARTwriteString+1)
  7705  0EC9  07F5               	addwf	(?_UARTwriteString+1)
  7706  0ECA  0830               	movf	(_msgMenu),w
  7707  0ECB  01F4               	clrf	(?_UARTwriteString)
  7708  0ECC  07F4               	addwf	(?_UARTwriteString)
  7709                           
  7710  0ECD  3195  25CF  318D   	fcall	_UARTwriteString
  7711  0ED0  2D5B               	goto	l19902
  7712                           	line	162
  7713                           	
  7714  0ED1                     l6659:	
  7715  0ED1  2D5B               	goto	l19902
  7716                           	line	163
  7717                           	
  7718  0ED2                     l6658:	
  7719  0ED2  2D5B               	goto	l19902
  7720                           	
  7721  0ED3                     l6656:	
  7722  0ED3  2D5B               	goto	l19902
  7723                           	
  7724  0ED4                     l6654:	
  7725                           	line	164
  7726                           ;uart.c: 162: }
  7727                           ;uart.c: 163: }
  7728                           ;uart.c: 164: break;
  7729  0ED4  2D5B               	goto	l19902
  7730                           	line	165
  7731                           ;uart.c: 165: case 3:
  7732                           	
  7733  0ED5                     l6660:	
  7734                           	line	166
  7735                           	
  7736  0ED5                     l19998:	
  7737                           ;uart.c: 166: if(instruction)
  7738  0ED5  0020               	movlb 0	; select bank0
  7739  0ED6  084D               	movf	(UARTworker@instruction),w
  7740  0ED7  1D03               	skipz
  7741  0ED8  2EDA               	goto	u5040
  7742  0ED9  2F07               	goto	l20012
  7743  0EDA                     u5040:
  7744  0EDA  2EFB               	goto	l20010
  7745                           	line	168
  7746                           	
  7747  0EDB                     l20000:	
  7748                           ;uart.c: 167: {
  7749                           ;uart.c: 168: switch(instruction)
  7750  0EDB  2EFB               	goto	l20010
  7751                           	line	170
  7752                           ;uart.c: 169: {
  7753                           ;uart.c: 170: case 'v':
  7754                           	
  7755  0EDC                     l6663:	
  7756                           	line	171
  7757                           	
  7758  0EDC                     l20002:	
  7759                           ;uart.c: 171: setDAC(UARTcharFromString(c));
  7760  0EDC  084C               	movf	(UARTworker@c),w
  7761  0EDD  3188  203B  318D   	fcall	_UARTcharFromString
  7762  0EE0  3194  24CD  318D   	fcall	_setDAC
  7763                           	line	172
  7764                           	
  7765  0EE3                     l20004:	
  7766                           ;uart.c: 172: UARTwriteString(msgMenu[3]);
  7767  0EE3  0020               	movlb 0	; select bank0
  7768  0EE4  0837               	movf	(1+_msgMenu+06h),w
  7769  0EE5  01F5               	clrf	(?_UARTwriteString+1)
  7770  0EE6  07F5               	addwf	(?_UARTwriteString+1)
  7771  0EE7  0836               	movf	(0+_msgMenu+06h),w
  7772  0EE8  01F4               	clrf	(?_UARTwriteString)
  7773  0EE9  07F4               	addwf	(?_UARTwriteString)
  7774                           
  7775  0EEA  3195  25CF  318D   	fcall	_UARTwriteString
  7776                           	line	173
  7777                           ;uart.c: 173: break;
  7778  0EED  2F04               	goto	l6664
  7779                           	line	174
  7780                           ;uart.c: 174: case 'm':
  7781                           	
  7782  0EEE                     l6665:	
  7783                           	line	175
  7784                           ;uart.c: 175: mode = 0;
  7785  0EEE  01CB               	clrf	(UARTworker@mode)
  7786                           	line	176
  7787                           	
  7788  0EEF                     l20006:	
  7789                           ;uart.c: 176: UARTwriteString(msgMenu[0]);
  7790  0EEF  0831               	movf	(_msgMenu+1),w
  7791  0EF0  01F5               	clrf	(?_UARTwriteString+1)
  7792  0EF1  07F5               	addwf	(?_UARTwriteString+1)
  7793  0EF2  0830               	movf	(_msgMenu),w
  7794  0EF3  01F4               	clrf	(?_UARTwriteString)
  7795  0EF4  07F4               	addwf	(?_UARTwriteString)
  7796                           
  7797  0EF5  3195  25CF  318D   	fcall	_UARTwriteString
  7798                           	line	177
  7799                           ;uart.c: 177: break;
  7800  0EF8  2F04               	goto	l6664
  7801                           	line	178
  7802                           ;uart.c: 178: default:
  7803                           	
  7804  0EF9                     l6666:	
  7805                           	line	179
  7806                           ;uart.c: 179: break;
  7807  0EF9  2F04               	goto	l6664
  7808                           	line	180
  7809                           	
  7810  0EFA                     l20008:	
  7811                           ;uart.c: 180: }
  7812  0EFA  2F04               	goto	l6664
  7813                           	line	168
  7814                           	
  7815  0EFB                     l6662:	
  7816                           	
  7817  0EFB                     l20010:	
  7818  0EFB  0020               	movlb 0	; select bank0
  7819  0EFC  084D               	movf	(UARTworker@instruction),w
  7820                           	; Switch size 1, requested type "space"
  7821                           ; Number of cases is 2, Range of values is 109 to 118
  7822                           ; switch strategies available:
  7823                           ; Name         Instructions Cycles
  7824                           ; simple_byte            7     4 (average)
  7825                           ; direct_byte           29     9 (fixed)
  7826                           ; jumptable            263     9 (fixed)
  7827                           ;	Chosen strategy is simple_byte
  7828                           
  7829                           	opt asmopt_off
  7830  0EFD  3A6D               	xorlw	109^0	; case 109
  7831  0EFE  1903               	skipnz
  7832  0EFF  2EEE               	goto	l6665
  7833  0F00  3A1B               	xorlw	118^109	; case 118
  7834  0F01  1903               	skipnz
  7835  0F02  2EDC               	goto	l20002
  7836  0F03  2F04               	goto	l6664
  7837                           	opt asmopt_on
  7838                           
  7839                           	line	180
  7840                           	
  7841  0F04                     l6664:	
  7842                           	line	181
  7843                           ;uart.c: 181: instruction =0;
  7844  0F04  0020               	movlb 0	; select bank0
  7845  0F05  01CD               	clrf	(UARTworker@instruction)
  7846                           	line	182
  7847                           ;uart.c: 182: }
  7848  0F06  2D5B               	goto	l19902
  7849                           	line	183
  7850                           	
  7851  0F07                     l6661:	
  7852                           	line	185
  7853                           	
  7854  0F07                     l20012:	
  7855                           ;uart.c: 183: else
  7856                           ;uart.c: 184: {
  7857                           ;uart.c: 185: instruction = c;
  7858  0F07  084C               	movf	(UARTworker@c),w
  7859  0F08  00C4               	movwf	(??_UARTworker+0)+0
  7860  0F09  0844               	movf	(??_UARTworker+0)+0,w
  7861  0F0A  00CD               	movwf	(UARTworker@instruction)
  7862                           	line	186
  7863                           ;uart.c: 186: if(instruction == 'v')
  7864  0F0B  084D               	movf	(UARTworker@instruction),w
  7865  0F0C  3A76               	xorlw	076h&0ffh
  7866  0F0D  1D03               	skipz
  7867  0F0E  2F10               	goto	u5051
  7868  0F0F  2F11               	goto	u5050
  7869  0F10                     u5051:
  7870  0F10  2F19               	goto	l20016
  7871  0F11                     u5050:
  7872                           	line	188
  7873                           	
  7874  0F11                     l20014:	
  7875                           ;uart.c: 187: {
  7876                           ;uart.c: 188: UARTwriteString(msgDACsetV);
  7877  0F11  304A               	movlw	low(_msgDACsetV|8000h)
  7878  0F12  00F4               	movwf	(?_UARTwriteString)
  7879  0F13  3084               	movlw	high(_msgDACsetV|8000h)
  7880  0F14  00F5               	movwf	((?_UARTwriteString))+1
  7881  0F15  3195  25CF  318D   	fcall	_UARTwriteString
  7882                           	line	189
  7883                           ;uart.c: 189: }
  7884  0F18  2D5B               	goto	l19902
  7885                           	line	190
  7886                           	
  7887  0F19                     l6668:	
  7888                           	
  7889  0F19                     l20016:	
  7890                           ;uart.c: 190: else if(instruction == 'm')
  7891  0F19  0020               	movlb 0	; select bank0
  7892  0F1A  084D               	movf	(UARTworker@instruction),w
  7893  0F1B  3A6D               	xorlw	06Dh&0ffh
  7894  0F1C  1D03               	skipz
  7895  0F1D  2F1F               	goto	u5061
  7896  0F1E  2F20               	goto	u5060
  7897  0F1F                     u5061:
  7898  0F1F  2D5B               	goto	l19902
  7899  0F20                     u5060:
  7900                           	line	192
  7901                           	
  7902  0F20                     l20018:	
  7903                           ;uart.c: 191: {
  7904                           ;uart.c: 192: mode =0;
  7905  0F20  01CB               	clrf	(UARTworker@mode)
  7906                           	line	193
  7907                           ;uart.c: 193: instruction =0;
  7908  0F21  01CD               	clrf	(UARTworker@instruction)
  7909                           	line	194
  7910                           	
  7911  0F22                     l20020:	
  7912                           ;uart.c: 194: disableDAC();
  7913  0F22  3188  2000  318D   	fcall	_disableDAC
  7914                           	line	195
  7915                           	
  7916  0F25                     l20022:	
  7917                           ;uart.c: 195: UARTwriteString(msgMenu[0]);
  7918  0F25  0020               	movlb 0	; select bank0
  7919  0F26  0831               	movf	(_msgMenu+1),w
  7920  0F27  01F5               	clrf	(?_UARTwriteString+1)
  7921  0F28  07F5               	addwf	(?_UARTwriteString+1)
  7922  0F29  0830               	movf	(_msgMenu),w
  7923  0F2A  01F4               	clrf	(?_UARTwriteString)
  7924  0F2B  07F4               	addwf	(?_UARTwriteString)
  7925                           
  7926  0F2C  3195  25CF  318D   	fcall	_UARTwriteString
  7927  0F2F  2D5B               	goto	l19902
  7928                           	line	196
  7929                           	
  7930  0F30                     l6670:	
  7931  0F30  2D5B               	goto	l19902
  7932                           	line	197
  7933                           	
  7934  0F31                     l6669:	
  7935  0F31  2D5B               	goto	l19902
  7936                           	
  7937  0F32                     l6667:	
  7938                           	line	198
  7939                           ;uart.c: 196: }
  7940                           ;uart.c: 197: }
  7941                           ;uart.c: 198: break;
  7942  0F32  2D5B               	goto	l19902
  7943                           	line	199
  7944                           ;uart.c: 199: case 4:
  7945                           	
  7946  0F33                     l6671:	
  7947                           	line	200
  7948                           	
  7949  0F33                     l20024:	
  7950                           ;uart.c: 200: if(instruction)
  7951  0F33  0020               	movlb 0	; select bank0
  7952  0F34  084D               	movf	(UARTworker@instruction),w
  7953  0F35  1D03               	skipz
  7954  0F36  2F38               	goto	u5070
  7955  0F37  2FB5               	goto	l20062
  7956  0F38                     u5070:
  7957                           	line	202
  7958                           	
  7959  0F38                     l20026:	
  7960                           ;uart.c: 201: {
  7961                           ;uart.c: 202: if(EEaddrF)
  7962  0F38  0848               	movf	(UARTworker@EEaddrF),w
  7963  0F39  1D03               	skipz
  7964  0F3A  2F3C               	goto	u5080
  7965  0F3B  2F8A               	goto	l20050
  7966  0F3C                     u5080:
  7967                           	line	204
  7968                           	
  7969  0F3C                     l20028:	
  7970                           ;uart.c: 203: {
  7971                           ;uart.c: 204: if(instruction == 'w')
  7972  0F3C  084D               	movf	(UARTworker@instruction),w
  7973  0F3D  3A77               	xorlw	077h&0ffh
  7974  0F3E  1D03               	skipz
  7975  0F3F  2F41               	goto	u5091
  7976  0F40  2F42               	goto	u5090
  7977  0F41                     u5091:
  7978  0F41  2F59               	goto	l20034
  7979  0F42                     u5090:
  7980                           	line	206
  7981                           	
  7982  0F42                     l20030:	
  7983                           ;uart.c: 205: {
  7984                           ;uart.c: 206: EEPROMwrite(EEaddr,UARTcharFromString(c));
  7985  0F42  084C               	movf	(UARTworker@c),w
  7986  0F43  3188  203B  318D   	fcall	_UARTcharFromString
  7987  0F46  0020               	movlb 0	; select bank0
  7988  0F47  00C4               	movwf	(??_UARTworker+0)+0
  7989  0F48  0844               	movf	(??_UARTworker+0)+0,w
  7990  0F49  00F7               	movwf	(?_EEPROMwrite)
  7991  0F4A  084A               	movf	(UARTworker@EEaddr),w
  7992  0F4B  3195  2553  318D   	fcall	_EEPROMwrite
  7993                           	line	207
  7994                           	
  7995  0F4E                     l20032:	
  7996                           ;uart.c: 207: UARTwriteString(msgMenu[4]);
  7997  0F4E  0020               	movlb 0	; select bank0
  7998  0F4F  0839               	movf	(1+_msgMenu+08h),w
  7999  0F50  01F5               	clrf	(?_UARTwriteString+1)
  8000  0F51  07F5               	addwf	(?_UARTwriteString+1)
  8001  0F52  0838               	movf	(0+_msgMenu+08h),w
  8002  0F53  01F4               	clrf	(?_UARTwriteString)
  8003  0F54  07F4               	addwf	(?_UARTwriteString)
  8004                           
  8005  0F55  3195  25CF  318D   	fcall	_UARTwriteString
  8006                           	line	209
  8007                           ;uart.c: 209: }
  8008  0F58  2F86               	goto	l20046
  8009                           	line	210
  8010                           	
  8011  0F59                     l6674:	
  8012                           	
  8013  0F59                     l20034:	
  8014                           ;uart.c: 210: else if (instruction == 'r')
  8015  0F59  0020               	movlb 0	; select bank0
  8016  0F5A  084D               	movf	(UARTworker@instruction),w
  8017  0F5B  3A72               	xorlw	072h&0ffh
  8018  0F5C  1D03               	skipz
  8019  0F5D  2F5F               	goto	u5101
  8020  0F5E  2F60               	goto	u5100
  8021  0F5F                     u5101:
  8022  0F5F  2F72               	goto	l20040
  8023  0F60                     u5100:
  8024                           	line	212
  8025                           	
  8026  0F60                     l20036:	
  8027                           ;uart.c: 211: {
  8028                           ;uart.c: 212: UARTwriteDecimal(EEPROMread(EEaddr));
  8029  0F60  084A               	movf	(UARTworker@EEaddr),w
  8030  0F61  3194  24DA  318D   	fcall	_EEPROMread
  8031  0F64  3188  2003  318D   	fcall	_UARTwriteDecimal
  8032                           	line	213
  8033                           	
  8034  0F67                     l20038:	
  8035                           ;uart.c: 213: UARTwriteString(msgMenu[4]);
  8036  0F67  0020               	movlb 0	; select bank0
  8037  0F68  0839               	movf	(1+_msgMenu+08h),w
  8038  0F69  01F5               	clrf	(?_UARTwriteString+1)
  8039  0F6A  07F5               	addwf	(?_UARTwriteString+1)
  8040  0F6B  0838               	movf	(0+_msgMenu+08h),w
  8041  0F6C  01F4               	clrf	(?_UARTwriteString)
  8042  0F6D  07F4               	addwf	(?_UARTwriteString)
  8043                           
  8044  0F6E  3195  25CF  318D   	fcall	_UARTwriteString
  8045                           	line	214
  8046                           ;uart.c: 214: }
  8047  0F71  2F86               	goto	l20046
  8048                           	line	215
  8049                           	
  8050  0F72                     l6676:	
  8051                           	
  8052  0F72                     l20040:	
  8053                           ;uart.c: 215: else if (instruction == 'm')
  8054  0F72  0020               	movlb 0	; select bank0
  8055  0F73  084D               	movf	(UARTworker@instruction),w
  8056  0F74  3A6D               	xorlw	06Dh&0ffh
  8057  0F75  1D03               	skipz
  8058  0F76  2F78               	goto	u5111
  8059  0F77  2F79               	goto	u5110
  8060  0F78                     u5111:
  8061  0F78  2F86               	goto	l20046
  8062  0F79                     u5110:
  8063                           	line	217
  8064                           	
  8065  0F79                     l20042:	
  8066                           ;uart.c: 216: {
  8067                           ;uart.c: 217: mode = 0;
  8068  0F79  01CB               	clrf	(UARTworker@mode)
  8069                           	line	218
  8070                           	
  8071  0F7A                     l20044:	
  8072                           ;uart.c: 218: UARTwriteString(msgMenu[0]);
  8073  0F7A  0831               	movf	(_msgMenu+1),w
  8074  0F7B  01F5               	clrf	(?_UARTwriteString+1)
  8075  0F7C  07F5               	addwf	(?_UARTwriteString+1)
  8076  0F7D  0830               	movf	(_msgMenu),w
  8077  0F7E  01F4               	clrf	(?_UARTwriteString)
  8078  0F7F  07F4               	addwf	(?_UARTwriteString)
  8079                           
  8080  0F80  3195  25CF  318D   	fcall	_UARTwriteString
  8081  0F83  2F86               	goto	l20046
  8082                           	line	219
  8083                           	
  8084  0F84                     l6678:	
  8085  0F84  2F86               	goto	l20046
  8086                           	line	220
  8087                           	
  8088  0F85                     l6677:	
  8089  0F85  2F86               	goto	l20046
  8090                           	
  8091  0F86                     l6675:	
  8092                           	
  8093  0F86                     l20046:	
  8094                           ;uart.c: 219: }
  8095                           ;uart.c: 220: EEaddrF=0;
  8096  0F86  0020               	movlb 0	; select bank0
  8097  0F87  01C8               	clrf	(UARTworker@EEaddrF)
  8098                           	line	221
  8099                           	
  8100  0F88                     l20048:	
  8101                           ;uart.c: 221: instruction =0;
  8102  0F88  01CD               	clrf	(UARTworker@instruction)
  8103                           	line	222
  8104                           ;uart.c: 222: }
  8105  0F89  2D5B               	goto	l19902
  8106                           	line	223
  8107                           	
  8108  0F8A                     l6673:	
  8109                           	line	225
  8110                           	
  8111  0F8A                     l20050:	
  8112                           ;uart.c: 223: else
  8113                           ;uart.c: 224: {
  8114                           ;uart.c: 225: EEaddrF=1;
  8115  0F8A  01C8               	clrf	(UARTworker@EEaddrF)
  8116  0F8B  1403               	bsf	status,0
  8117  0F8C  0DC8               	rlf	(UARTworker@EEaddrF),f
  8118                           	line	226
  8119                           	
  8120  0F8D                     l20052:	
  8121                           ;uart.c: 226: EEaddr=UARTcharFromString(c);
  8122  0F8D  084C               	movf	(UARTworker@c),w
  8123  0F8E  3188  203B  318D   	fcall	_UARTcharFromString
  8124  0F91  0020               	movlb 0	; select bank0
  8125  0F92  00C4               	movwf	(??_UARTworker+0)+0
  8126  0F93  0844               	movf	(??_UARTworker+0)+0,w
  8127  0F94  00CA               	movwf	(UARTworker@EEaddr)
  8128                           	line	228
  8129                           	
  8130  0F95                     l20054:	
  8131                           ;uart.c: 228: if(instruction=='w')UARTwriteString(msgEEw);
  8132  0F95  084D               	movf	(UARTworker@instruction),w
  8133  0F96  3A77               	xorlw	077h&0ffh
  8134  0F97  1D03               	skipz
  8135  0F98  2F9A               	goto	u5121
  8136  0F99  2F9B               	goto	u5120
  8137  0F9A                     u5121:
  8138  0F9A  2FA3               	goto	l20058
  8139  0F9B                     u5120:
  8140                           	
  8141  0F9B                     l20056:	
  8142  0F9B  3011               	movlw	low(_msgEEw|8000h)
  8143  0F9C  00F4               	movwf	(?_UARTwriteString)
  8144  0F9D  3084               	movlw	high(_msgEEw|8000h)
  8145  0F9E  00F5               	movwf	((?_UARTwriteString))+1
  8146  0F9F  3195  25CF  318D   	fcall	_UARTwriteString
  8147  0FA2  2D5B               	goto	l19902
  8148                           	line	229
  8149                           	
  8150  0FA3                     l6680:	
  8151                           	
  8152  0FA3                     l20058:	
  8153                           ;uart.c: 229: else if(instruction == 'r')UARTwriteString("\n\nHit any key to read from E
                                 EPROM.\n\n");
  8154  0FA3  0020               	movlb 0	; select bank0
  8155  0FA4  084D               	movf	(UARTworker@instruction),w
  8156  0FA5  3A72               	xorlw	072h&0ffh
  8157  0FA6  1D03               	skipz
  8158  0FA7  2FA9               	goto	u5131
  8159  0FA8  2FAA               	goto	u5130
  8160  0FA9                     u5131:
  8161  0FA9  2D5B               	goto	l19902
  8162  0FAA                     u5130:
  8163                           	
  8164  0FAA                     l20060:	
  8165  0FAA  3085               	movlw	low(STR_8|8000h)
  8166  0FAB  00F4               	movwf	(?_UARTwriteString)
  8167  0FAC  3085               	movlw	high(STR_8|8000h)
  8168  0FAD  00F5               	movwf	((?_UARTwriteString))+1
  8169  0FAE  3195  25CF  318D   	fcall	_UARTwriteString
  8170  0FB1  2D5B               	goto	l19902
  8171                           	
  8172  0FB2                     l6682:	
  8173  0FB2  2D5B               	goto	l19902
  8174                           	line	230
  8175                           	
  8176  0FB3                     l6681:	
  8177  0FB3  2D5B               	goto	l19902
  8178                           	
  8179  0FB4                     l6679:	
  8180                           	line	231
  8181                           ;uart.c: 230: }
  8182                           ;uart.c: 231: }
  8183  0FB4  2D5B               	goto	l19902
  8184                           	line	232
  8185                           	
  8186  0FB5                     l6672:	
  8187                           	line	234
  8188                           	
  8189  0FB5                     l20062:	
  8190                           ;uart.c: 232: else
  8191                           ;uart.c: 233: {
  8192                           ;uart.c: 234: instruction = c;
  8193  0FB5  0020               	movlb 0	; select bank0
  8194  0FB6  084C               	movf	(UARTworker@c),w
  8195  0FB7  00C4               	movwf	(??_UARTworker+0)+0
  8196  0FB8  0844               	movf	(??_UARTworker+0)+0,w
  8197  0FB9  00CD               	movwf	(UARTworker@instruction)
  8198                           	line	235
  8199                           ;uart.c: 235: if((instruction == 'w')||(instruction == 'r'))
  8200  0FBA  084D               	movf	(UARTworker@instruction),w
  8201  0FBB  3A77               	xorlw	077h&0ffh
  8202  0FBC  1903               	skipnz
  8203  0FBD  2FBF               	goto	u5141
  8204  0FBE  2FC0               	goto	u5140
  8205  0FBF                     u5141:
  8206  0FBF  2FC7               	goto	l20066
  8207  0FC0                     u5140:
  8208                           	
  8209  0FC0                     l20064:	
  8210  0FC0  084D               	movf	(UARTworker@instruction),w
  8211  0FC1  3A72               	xorlw	072h&0ffh
  8212  0FC2  1D03               	skipz
  8213  0FC3  2FC5               	goto	u5151
  8214  0FC4  2FC6               	goto	u5150
  8215  0FC5                     u5151:
  8216  0FC5  2FCF               	goto	l20068
  8217  0FC6                     u5150:
  8218  0FC6  2FC7               	goto	l20066
  8219                           	
  8220  0FC7                     l6686:	
  8221                           	line	237
  8222                           	
  8223  0FC7                     l20066:	
  8224                           ;uart.c: 236: {
  8225                           ;uart.c: 237: UARTwriteString(msgEEaddr);
  8226  0FC7  3073               	movlw	low(_msgEEaddr|8000h)
  8227  0FC8  00F4               	movwf	(?_UARTwriteString)
  8228  0FC9  3084               	movlw	high(_msgEEaddr|8000h)
  8229  0FCA  00F5               	movwf	((?_UARTwriteString))+1
  8230  0FCB  3195  25CF  318D   	fcall	_UARTwriteString
  8231                           	line	238
  8232                           ;uart.c: 238: }
  8233  0FCE  2D5B               	goto	l19902
  8234                           	line	239
  8235                           	
  8236  0FCF                     l6684:	
  8237                           	
  8238  0FCF                     l20068:	
  8239                           ;uart.c: 239: else if(instruction == 'm')
  8240  0FCF  0020               	movlb 0	; select bank0
  8241  0FD0  084D               	movf	(UARTworker@instruction),w
  8242  0FD1  3A6D               	xorlw	06Dh&0ffh
  8243  0FD2  1D03               	skipz
  8244  0FD3  2FD5               	goto	u5161
  8245  0FD4  2FD6               	goto	u5160
  8246  0FD5                     u5161:
  8247  0FD5  2D5B               	goto	l19902
  8248  0FD6                     u5160:
  8249                           	line	241
  8250                           	
  8251  0FD6                     l20070:	
  8252                           ;uart.c: 240: {
  8253                           ;uart.c: 241: mode =0;
  8254  0FD6  01CB               	clrf	(UARTworker@mode)
  8255                           	line	242
  8256                           ;uart.c: 242: instruction =0;
  8257  0FD7  01CD               	clrf	(UARTworker@instruction)
  8258                           	line	243
  8259                           	
  8260  0FD8                     l20072:	
  8261                           ;uart.c: 243: UARTwriteString(msgMenu[0]);
  8262  0FD8  0831               	movf	(_msgMenu+1),w
  8263  0FD9  01F5               	clrf	(?_UARTwriteString+1)
  8264  0FDA  07F5               	addwf	(?_UARTwriteString+1)
  8265  0FDB  0830               	movf	(_msgMenu),w
  8266  0FDC  01F4               	clrf	(?_UARTwriteString)
  8267  0FDD  07F4               	addwf	(?_UARTwriteString)
  8268                           
  8269  0FDE  3195  25CF  318D   	fcall	_UARTwriteString
  8270  0FE1  2D5B               	goto	l19902
  8271                           	line	244
  8272                           	
  8273  0FE2                     l6688:	
  8274  0FE2  2D5B               	goto	l19902
  8275                           	line	245
  8276                           	
  8277  0FE3                     l6687:	
  8278  0FE3  2D5B               	goto	l19902
  8279                           	
  8280  0FE4                     l6683:	
  8281                           	line	246
  8282                           ;uart.c: 244: }
  8283                           ;uart.c: 245: }
  8284                           ;uart.c: 246: break;
  8285  0FE4  2D5B               	goto	l19902
  8286                           	line	247
  8287                           ;uart.c: 247: default:
  8288                           	
  8289  0FE5                     l6689:	
  8290                           	line	248
  8291                           ;uart.c: 248: mode=0;
  8292  0FE5  01CB               	clrf	(UARTworker@mode)
  8293                           	line	249
  8294                           	
  8295  0FE6                     l20074:	
  8296                           ;uart.c: 249: UARTwriteString(msgMenu[0]);
  8297  0FE6  0831               	movf	(_msgMenu+1),w
  8298  0FE7  01F5               	clrf	(?_UARTwriteString+1)
  8299  0FE8  07F5               	addwf	(?_UARTwriteString+1)
  8300  0FE9  0830               	movf	(_msgMenu),w
  8301  0FEA  01F4               	clrf	(?_UARTwriteString)
  8302  0FEB  07F4               	addwf	(?_UARTwriteString)
  8303                           
  8304  0FEC  3195  25CF  318D   	fcall	_UARTwriteString
  8305                           	line	250
  8306                           ;uart.c: 250: break;
  8307  0FEF  2D5B               	goto	l19902
  8308                           	line	251
  8309                           	
  8310  0FF0                     l20076:	
  8311                           ;uart.c: 251: }
  8312  0FF0  2D5B               	goto	l19902
  8313                           	line	74
  8314                           	
  8315  0FF1                     l6630:	
  8316                           	
  8317  0FF1                     l20078:	
  8318  0FF1  0020               	movlb 0	; select bank0
  8319  0FF2  084B               	movf	(UARTworker@mode),w
  8320                           	; Switch size 1, requested type "space"
  8321                           ; Number of cases is 5, Range of values is 0 to 4
  8322                           ; switch strategies available:
  8323                           ; Name         Instructions Cycles
  8324                           ; direct_byte           16     6 (fixed)
  8325                           ; simple_byte           16     9 (average)
  8326                           ; jumptable            260     6 (fixed)
  8327                           ; rangetable             9     4 (fixed)
  8328                           ; spacedrange           15     6 (fixed)
  8329                           ; locatedrange           5     3 (fixed)
  8330                           ;	Chosen strategy is direct_byte
  8331                           
  8332  0FF3  0084               	movwf fsr0l
  8333  0FF4  3005               	movlw	5
  8334  0FF5  0204               	subwf	fsr0l,w
  8335  0FF6  1803               skipnc
  8336  0FF7  2FE5               goto l6689
  8337  0FF8  3190               movlp high(S20136)
  8338  0FF9  3504               	lslf fsr0l,w
  8339  0FFA  3E00               	addlw low(S20136)
  8340  0FFB  0082               	movwf pc
  8341                           psect	swtext1,local,class=CONST,delta=2
  8342                           global __pswtext1
  8343  1000                     __pswtext1:
  8344  1000                     S20136:
  8345  1000  318D  2D8F         	ljmp	l19916
  8346  1002  318E  2E3C         	ljmp	l19962
  8347  1004  318E  2E52         	ljmp	l19964
  8348  1006  318E  2ED5         	ljmp	l19998
  8349  1008  318F  2F33         	ljmp	l20024
  8350                           psect	text1309
  8351                           
  8352                           	line	251
  8353                           	
  8354  0FFC                     l6635:	
  8355  0FFC  2D5B               	goto	l19902
  8356                           	line	252
  8357                           	
  8358  0FFD                     l6628:	
  8359  0FFD  2D5B               	goto	l19902
  8360                           	line	253
  8361                           	
  8362  0FFE                     l6690:	
  8363                           	line	58
  8364  0FFE  2D5B               	goto	l19902
  8365                           	
  8366  0FFF                     l6691:	
  8367                           	line	254
  8368                           	
  8369  0FFF                     l6692:	
  8370  0FFF  0008               	return
  8371                           	opt stack 0
  8372                           GLOBAL	__end_of_UARTworker
  8373  1000                     	__end_of_UARTworker:
  8374 ;; =============== function _UARTworker ends ============
  8375                           
  8376                           	signat	_UARTworker,88
  8377                           	global	_doEE
  8378                           psect	text1310,local,class=CODE,delta=2
  8379                           global __ptext1310
  8380  16B4                     __ptext1310:
  8381                           
  8382 ;; *************** function _doEE *****************
  8383 ;; Defined at:
  8384 ;;		line 21 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;		None               void
  8391 ;; Registers used:
  8392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    3
  8405 ;; This function calls:
  8406 ;;		_teletype
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           psect	text1310
  8412                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
  8413                           	line	21
  8414                           	global	__size_of_doEE
  8415  0049                     	__size_of_doEE	equ	__end_of_doEE-_doEE
  8416                           	
  8417  16B4                     _doEE:	
  8418                           	opt	stack 12
  8419                           ; Regs used in _doEE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8420                           	line	22
  8421                           	
  8422  16B4                     l19314:	
  8423                           ;easteregg.c: 22: teletype("Hello, nice of you to drop by\r\n");
  8424  16B4  30EE               	movlw	low(STR_9|8000h)
  8425  16B5  00F4               	movwf	(?_teletype)
  8426  16B6  3085               	movlw	high(STR_9|8000h)
  8427  16B7  00F5               	movwf	((?_teletype))+1
  8428  16B8  3181  21C1  3196   	fcall	_teletype
  8429                           	line	23
  8430                           ;easteregg.c: 23: teletype("I'm happy to tell you my story\r\n");
  8431  16BB  30CD               	movlw	low(STR_10|8000h)
  8432  16BC  00F4               	movwf	(?_teletype)
  8433  16BD  3085               	movlw	high(STR_10|8000h)
  8434  16BE  00F5               	movwf	((?_teletype))+1
  8435  16BF  3181  21C1  3196   	fcall	_teletype
  8436                           	line	24
  8437                           ;easteregg.c: 24: teletype("They put me through endless hours of regression test..\r\n")
                                 ;
  8438  16C2  30DA               	movlw	low(STR_11|8000h)
  8439  16C3  00F4               	movwf	(?_teletype)
  8440  16C4  3084               	movlw	high(STR_11|8000h)
  8441  16C5  00F5               	movwf	((?_teletype))+1
  8442  16C6  3181  21C1  3196   	fcall	_teletype
  8443                           	line	25
  8444                           ;easteregg.c: 25: teletype(".. conducted several tests on me..\r\n");
  8445  16C9  3060               	movlw	low(STR_12|8000h)
  8446  16CA  00F4               	movwf	(?_teletype)
  8447  16CB  3085               	movlw	high(STR_12|8000h)
  8448  16CC  00F5               	movwf	((?_teletype))+1
  8449  16CD  3181  21C1  3196   	fcall	_teletype
  8450                           	line	26
  8451                           ;easteregg.c: 26: teletype(".connected me to weird prototypes...\r\n");
  8452  16D0  3013               	movlw	low(STR_13|8000h)
  8453  16D1  00F4               	movwf	(?_teletype)
  8454  16D2  3085               	movlw	high(STR_13|8000h)
  8455  16D3  00F5               	movwf	((?_teletype))+1
  8456  16D4  3181  21C1  3196   	fcall	_teletype
  8457                           	line	27
  8458                           ;easteregg.c: 27: teletype("abused me with 5V....\r\n");
  8459  16D7  305C               	movlw	low(STR_14|8000h)
  8460  16D8  00F4               	movwf	(?_teletype)
  8461  16D9  3086               	movlw	high(STR_14|8000h)
  8462  16DA  00F5               	movwf	((?_teletype))+1
  8463  16DB  3181  21C1  3196   	fcall	_teletype
  8464                           	line	28
  8465                           ;easteregg.c: 28: teletype("used HiZ on me.......\r\n");
  8466  16DE  3044               	movlw	low(STR_15|8000h)
  8467  16DF  00F4               	movwf	(?_teletype)
  8468  16E0  3086               	movlw	high(STR_15|8000h)
  8469  16E1  00F5               	movwf	((?_teletype))+1
  8470  16E2  3181  21C1  3196   	fcall	_teletype
  8471                           	line	29
  8472                           ;easteregg.c: 29: teletype("let me talk I2C, SPI, UART......\r\n");
  8473  16E5  30AA               	movlw	low(STR_16|8000h)
  8474  16E6  00F4               	movwf	(?_teletype)
  8475  16E7  3085               	movlw	high(STR_16|8000h)
  8476  16E8  00F5               	movwf	((?_teletype))+1
  8477  16E9  3181  21C1  3196   	fcall	_teletype
  8478                           	line	30
  8479                           ;easteregg.c: 30: teletype("made me do weird shit like PWM, memoryemulation, convert hig
                                 h voltages..\r\n");
  8480  16EC  308F               	movlw	low(STR_17|8000h)
  8481  16ED  00F4               	movwf	(?_teletype)
  8482  16EE  3084               	movlw	high(STR_17|8000h)
  8483  16EF  00F5               	movwf	((?_teletype))+1
  8484  16F0  3181  21C1  3196   	fcall	_teletype
  8485                           	line	31
  8486                           ;easteregg.c: 31: teletype("COULD YOU PLEASE LEAVE ME ALONE?!?!?!");
  8487  16F3  303A               	movlw	low(STR_18|8000h)
  8488  16F4  00F4               	movwf	(?_teletype)
  8489  16F5  3085               	movlw	high(STR_18|8000h)
  8490  16F6  00F5               	movwf	((?_teletype))+1
  8491  16F7  3181  21C1  3196   	fcall	_teletype
  8492  16FA  2EFB               	goto	l8307
  8493                           	line	32
  8494                           ;easteregg.c: 32: while(1);
  8495                           	
  8496  16FB                     l8306:	
  8497                           	
  8498  16FB                     l8307:	
  8499  16FB  2EFB               	goto	l8307
  8500                           	
  8501  16FC                     l8308:	
  8502                           	line	33
  8503                           	
  8504  16FC                     l8309:	
  8505  16FC  0008               	return
  8506                           	opt stack 0
  8507                           GLOBAL	__end_of_doEE
  8508  16FD                     	__end_of_doEE:
  8509 ;; =============== function _doEE ends ============
  8510                           
  8511                           	signat	_doEE,88
  8512                           	global	_teletype
  8513                           psect	text1311,local,class=CODE,delta=2
  8514                           global __ptext1311
  8515  01C1                     __ptext1311:
  8516                           
  8517 ;; *************** function _teletype *****************
  8518 ;; Defined at:
  8519 ;;		line 36 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  s               2    4[COMMON] PTR const unsigned char 
  8522 ;;		 -> STR_18(38), STR_17(75), STR_16(35), STR_15(24), 
  8523 ;;		 -> STR_14(24), STR_13(39), STR_12(37), STR_11(57), 
  8524 ;;		 -> STR_10(33), STR_9(32), 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  i               2    6[COMMON] int 
  8527 ;;  c               1    0        unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;		None               void
  8530 ;; Registers used:
  8531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8541 ;;Total ram usage:        4 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    2
  8544 ;; This function calls:
  8545 ;;		_UARTwrite
  8546 ;; This function is called by:
  8547 ;;		_doEE
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           psect	text1311
  8551                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
  8552                           	line	36
  8553                           	global	__size_of_teletype
  8554  003E                     	__size_of_teletype	equ	__end_of_teletype-_teletype
  8555                           	
  8556  01C1                     _teletype:	
  8557                           	opt	stack 12
  8558                           ; Regs used in _teletype: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8559                           	line	39
  8560                           	
  8561  01C1                     l19296:	
  8562                           ;easteregg.c: 37: char c;
  8563                           ;easteregg.c: 39: while(*s)
  8564  01C1  29F3               	goto	l19312
  8565                           	
  8566  01C2                     l8313:	
  8567                           	line	41
  8568                           	
  8569  01C2                     l19298:	
  8570                           ;easteregg.c: 40: {
  8571                           ;easteregg.c: 41: UARTwrite(*(s++));
  8572  01C2  0874               	movf	(teletype@s),w
  8573  01C3  0084               	movwf	fsr0l
  8574  01C4  0875               	movf	((teletype@s+1)),w
  8575  01C5  0085               	movwf	fsr0h
  8576  01C6  0800               	movf	indf0,w ;code access
  8577  01C7  3195  251F  3181   	fcall	_UARTwrite
  8578                           	
  8579  01CA                     l19300:	
  8580  01CA  3001               	movlw	low(01h)
  8581  01CB  07F4               	addwf	(teletype@s),f
  8582  01CC  3000               	movlw	high(01h)
  8583  01CD  3DF5               	addwfc	(teletype@s+1),f
  8584                           	line	43
  8585                           	
  8586  01CE                     l19302:	
  8587                           ;easteregg.c: 43: for(i=0; i<10000; i++) asm("nop");
  8588  01CE  01F6               	clrf	(teletype@i)
  8589  01CF  01F7               	clrf	(teletype@i+1)
  8590                           	
  8591  01D0                     l19304:	
  8592  01D0  0877               	movf	(teletype@i+1),w
  8593  01D1  3A80               	xorlw	80h
  8594  01D2  00FF               	movwf	btemp+1
  8595  01D3  30A7               	movlw	(high(02710h))^80h
  8596  01D4  027F               	subwf	btemp+1,w
  8597  01D5  1D03               	skipz
  8598  01D6  29D9               	goto	u4225
  8599  01D7  3010               	movlw	low(02710h)
  8600  01D8  0276               	subwf	(teletype@i),w
  8601  01D9                     u4225:
  8602                           
  8603  01D9  1C03               	skipc
  8604  01DA  29DC               	goto	u4221
  8605  01DB  29DD               	goto	u4220
  8606  01DC                     u4221:
  8607  01DC  29DF               	goto	l8314
  8608  01DD                     u4220:
  8609  01DD  29F3               	goto	l19312
  8610                           	
  8611  01DE                     l19306:	
  8612  01DE  29F3               	goto	l19312
  8613                           	
  8614  01DF                     l8314:	
  8615                           # 43 "C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
  8616  01DF  0000               nop ;#
  8617                           psect	text1311
  8618                           	
  8619  01E0                     l19308:	
  8620  01E0  3001               	movlw	low(01h)
  8621  01E1  07F6               	addwf	(teletype@i),f
  8622  01E2  3000               	movlw	high(01h)
  8623  01E3  3DF7               	addwfc	(teletype@i+1),f
  8624                           	
  8625  01E4                     l19310:	
  8626  01E4  0877               	movf	(teletype@i+1),w
  8627  01E5  3A80               	xorlw	80h
  8628  01E6  00FF               	movwf	btemp+1
  8629  01E7  30A7               	movlw	(high(02710h))^80h
  8630  01E8  027F               	subwf	btemp+1,w
  8631  01E9  1D03               	skipz
  8632  01EA  29ED               	goto	u4235
  8633  01EB  3010               	movlw	low(02710h)
  8634  01EC  0276               	subwf	(teletype@i),w
  8635  01ED                     u4235:
  8636                           
  8637  01ED  1C03               	skipc
  8638  01EE  29F0               	goto	u4231
  8639  01EF  29F1               	goto	u4230
  8640  01F0                     u4231:
  8641  01F0  29DF               	goto	l8314
  8642  01F1                     u4230:
  8643  01F1  29F3               	goto	l19312
  8644                           	
  8645  01F2                     l8315:	
  8646  01F2  29F3               	goto	l19312
  8647                           	line	44
  8648                           	
  8649  01F3                     l8312:	
  8650                           	line	39
  8651                           	
  8652  01F3                     l19312:	
  8653  01F3  0874               	movf	(teletype@s),w
  8654  01F4  0084               	movwf	fsr0l
  8655  01F5  0875               	movf	((teletype@s+1)),w
  8656  01F6  0085               	movwf	fsr0h
  8657  01F7  0800               	movf	indf0,w ;code access
  8658  01F8  3800               	iorlw	0
  8659  01F9  1D03               	skipz
  8660  01FA  29FC               	goto	u4241
  8661  01FB  29FD               	goto	u4240
  8662  01FC                     u4241:
  8663  01FC  29C2               	goto	l19298
  8664  01FD                     u4240:
  8665  01FD  29FE               	goto	l8317
  8666                           	
  8667  01FE                     l8316:	
  8668                           	line	45
  8669                           	
  8670  01FE                     l8317:	
  8671  01FE  0008               	return
  8672                           	opt stack 0
  8673                           GLOBAL	__end_of_teletype
  8674  01FF                     	__end_of_teletype:
  8675 ;; =============== function _teletype ends ============
  8676                           
  8677                           	signat	_teletype,4216
  8678                           	global	_UARTcharFromString
  8679                           psect	text1312,local,class=CODE,delta=2
  8680                           global __ptext1312
  8681  083B                     __ptext1312:
  8682                           
  8683 ;; *************** function _UARTcharFromString *****************
  8684 ;; Defined at:
  8685 ;;		line 295 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  c               1    wreg     unsigned char 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  c               1    2[BANK0 ] unsigned char 
  8690 ;;  rC              1    5[BANK0 ] unsigned char 
  8691 ;;  c1              1    4[BANK0 ] unsigned char 
  8692 ;;  outF            1    3[BANK0 ] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      unsigned char 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8703 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8705 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  8706 ;;Total ram usage:        6 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    2
  8709 ;; This function calls:
  8710 ;;		_UARTread
  8711 ;;		_UARTwrite
  8712 ;;		___bmul
  8713 ;; This function is called by:
  8714 ;;		_UARTworker
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           psect	text1312
  8718                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  8719                           	line	295
  8720                           	global	__size_of_UARTcharFromString
  8721  0061                     	__size_of_UARTcharFromString	equ	__end_of_UARTcharFromString-_UARTcharFromString
  8722                           	
  8723  083B                     _UARTcharFromString:	
  8724                           	opt	stack 12
  8725                           ; Regs used in _UARTcharFromString: [wreg+fsr1l-status,0+pclath+cstack]
  8726                           ;UARTcharFromString@c stored from wreg
  8727  083B  0020               	movlb 0	; select bank0
  8728  083C  00BC               	movwf	(UARTcharFromString@c)
  8729                           	line	296
  8730                           	
  8731  083D                     l19756:	
  8732                           ;uart.c: 296: unsigned char rC,outF=0,c1=c-48;
  8733  083D  01BD               	clrf	(UARTcharFromString@outF)
  8734                           	
  8735  083E                     l19758:	
  8736  083E  083C               	movf	(UARTcharFromString@c),w
  8737  083F  3ED0               	addlw	0D0h
  8738  0840  00BA               	movwf	(??_UARTcharFromString+0)+0
  8739  0841  083A               	movf	(??_UARTcharFromString+0)+0,w
  8740  0842  00BE               	movwf	(UARTcharFromString@c1)
  8741                           	line	297
  8742                           ;uart.c: 297: while(outF==0)
  8743  0843  2894               	goto	l19778
  8744                           	
  8745  0844                     l6711:	
  8746                           	line	299
  8747                           ;uart.c: 298: {
  8748                           ;uart.c: 299: while(RCIF==0);
  8749  0844  2845               	goto	l6712
  8750                           	
  8751  0845                     l6713:	
  8752                           	
  8753  0845                     l6712:	
  8754  0845  1E91               	btfss	(141/8),(141)&7
  8755  0846  2848               	goto	u4771
  8756  0847  2849               	goto	u4770
  8757  0848                     u4771:
  8758  0848  2845               	goto	l6712
  8759  0849                     u4770:
  8760  0849  284A               	goto	l19760
  8761                           	
  8762  084A                     l6714:	
  8763                           	line	300
  8764                           	
  8765  084A                     l19760:	
  8766                           ;uart.c: 300: if(!(RCSTA&0b00000110))
  8767  084A  0023               	movlb 3	; select bank3
  8768  084B  081D               	movf	(413)^0180h,w
  8769  084C  3906               	andlw	06h
  8770  084D  1D03               	btfss	status,2
  8771  084E  2850               	goto	u4781
  8772  084F  2851               	goto	u4780
  8773  0850                     u4781:
  8774  0850  2869               	goto	l19766
  8775  0851                     u4780:
  8776                           	line	301
  8777                           	
  8778  0851                     l19762:	
  8779                           ;uart.c: 301: { rhead++;
  8780  0851  3001               	movlw	(01h)
  8781  0852  0020               	movlb 0	; select bank0
  8782  0853  00BA               	movwf	(??_UARTcharFromString+0)+0
  8783  0854  083A               	movf	(??_UARTcharFromString+0)+0,w
  8784  0855  07E7               	addwf	(_rhead),f	;volatile
  8785                           	line	302
  8786                           ;uart.c: 302: rhead&=(8-1);
  8787  0856  3007               	movlw	(07h)
  8788  0857  00BA               	movwf	(??_UARTcharFromString+0)+0
  8789  0858  083A               	movf	(??_UARTcharFromString+0)+0,w
  8790  0859  05E7               	andwf	(_rhead),f	;volatile
  8791                           	line	303
  8792                           	
  8793  085A                     l19764:	
  8794                           ;uart.c: 303: ringbuff[rhead]=RCREG;
  8795  085A  0023               	movlb 3	; select bank3
  8796  085B  0819               	movf	(409)^0180h,w	;volatile
  8797  085C  0020               	movlb 0	; select bank0
  8798  085D  00BA               	movwf	(??_UARTcharFromString+0)+0
  8799  085E  01BB               	clrf	(??_UARTcharFromString+0)+0+1
  8800  085F  0867               	movf	(_rhead),w	;volatile
  8801  0860  0709               	addwf	wreg,w
  8802  0861  3E53               	addlw	_ringbuff&0ffh
  8803  0862  0086               	movwf	fsr1l
  8804  0863  0187               	clrf fsr1h	
  8805                           	
  8806  0864  083A               	movf	0+(??_UARTcharFromString+0)+0,w
  8807  0865  3FC0               	movwi	[0]fsr1
  8808  0866  083B               	movf	1+(??_UARTcharFromString+0)+0,w
  8809  0867  3FC1               	movwi	[1]fsr1
  8810  0868  2869               	goto	l19766
  8811                           	line	304
  8812                           	
  8813  0869                     l6715:	
  8814                           	line	305
  8815                           	
  8816  0869                     l19766:	
  8817                           ;uart.c: 304: }
  8818                           ;uart.c: 305: RCIF=0;
  8819  0869  0020               	movlb 0	; select bank0
  8820  086A  1291               	bcf	(141/8),(141)&7
  8821                           	line	306
  8822                           	
  8823  086B                     l19768:	
  8824                           ;uart.c: 306: rC=UARTread();
  8825  086B  3195  253F  3188   	fcall	_UARTread
  8826  086E  0020               	movlb 0	; select bank0
  8827  086F  00BA               	movwf	(??_UARTcharFromString+0)+0
  8828  0870  083A               	movf	(??_UARTcharFromString+0)+0,w
  8829  0871  00BF               	movwf	(UARTcharFromString@rC)
  8830                           	line	307
  8831                           ;uart.c: 307: UARTwrite(rC);
  8832  0872  083F               	movf	(UARTcharFromString@rC),w
  8833  0873  3195  251F  3188   	fcall	_UARTwrite
  8834                           	line	308
  8835                           	
  8836  0876                     l19770:	
  8837                           ;uart.c: 308: if(rC==13)outF=1;
  8838  0876  0020               	movlb 0	; select bank0
  8839  0877  083F               	movf	(UARTcharFromString@rC),w
  8840  0878  3A0D               	xorlw	0Dh&0ffh
  8841  0879  1D03               	skipz
  8842  087A  287C               	goto	u4791
  8843  087B  287D               	goto	u4790
  8844  087C                     u4791:
  8845  087C  2881               	goto	l19774
  8846  087D                     u4790:
  8847                           	
  8848  087D                     l19772:	
  8849  087D  01BD               	clrf	(UARTcharFromString@outF)
  8850  087E  1403               	bsf	status,0
  8851  087F  0DBD               	rlf	(UARTcharFromString@outF),f
  8852  0880  2894               	goto	l19778
  8853                           	line	309
  8854                           	
  8855  0881                     l6716:	
  8856                           	line	311
  8857                           	
  8858  0881                     l19774:	
  8859                           ;uart.c: 309: else
  8860                           ;uart.c: 310: {
  8861                           ;uart.c: 311: c1*=10;
  8862  0881  083E               	movf	(UARTcharFromString@c1),w
  8863  0882  00BA               	movwf	(??_UARTcharFromString+0)+0
  8864  0883  083A               	movf	(??_UARTcharFromString+0)+0,w
  8865  0884  00F3               	movwf	(?___bmul)
  8866  0885  300A               	movlw	(0Ah)
  8867  0886  3195  256A  3188   	fcall	___bmul
  8868  0889  0020               	movlb 0	; select bank0
  8869  088A  00BB               	movwf	(??_UARTcharFromString+1)+0
  8870  088B  083B               	movf	(??_UARTcharFromString+1)+0,w
  8871  088C  00BE               	movwf	(UARTcharFromString@c1)
  8872                           	line	312
  8873                           	
  8874  088D                     l19776:	
  8875                           ;uart.c: 312: c1+=(rC-48);
  8876  088D  083F               	movf	(UARTcharFromString@rC),w
  8877  088E  3ED0               	addlw	0D0h
  8878  088F  00BA               	movwf	(??_UARTcharFromString+0)+0
  8879  0890  083A               	movf	(??_UARTcharFromString+0)+0,w
  8880  0891  07BE               	addwf	(UARTcharFromString@c1),f
  8881  0892  2894               	goto	l19778
  8882                           	line	313
  8883                           	
  8884  0893                     l6717:	
  8885  0893  2894               	goto	l19778
  8886                           	line	314
  8887                           	
  8888  0894                     l6710:	
  8889                           	line	297
  8890                           	
  8891  0894                     l19778:	
  8892  0894  083D               	movf	(UARTcharFromString@outF),w
  8893  0895  1D03               	skipz
  8894  0896  2898               	goto	u4800
  8895  0897  2845               	goto	l6712
  8896  0898                     u4800:
  8897  0898  2899               	goto	l19780
  8898                           	
  8899  0899                     l6718:	
  8900                           	line	315
  8901                           	
  8902  0899                     l19780:	
  8903                           ;uart.c: 313: }
  8904                           ;uart.c: 314: }
  8905                           ;uart.c: 315: return c1;
  8906  0899  083E               	movf	(UARTcharFromString@c1),w
  8907  089A  289B               	goto	l6719
  8908                           	
  8909  089B                     l19782:	
  8910                           	line	316
  8911                           	
  8912  089B                     l6719:	
  8913  089B  0008               	return
  8914                           	opt stack 0
  8915                           GLOBAL	__end_of_UARTcharFromString
  8916  089C                     	__end_of_UARTcharFromString:
  8917 ;; =============== function _UARTcharFromString ends ============
  8918                           
  8919                           	signat	_UARTcharFromString,4217
  8920                           	global	_UARTwriteDecimal
  8921                           psect	text1313,local,class=CODE,delta=2
  8922                           global __ptext1313
  8923  0803                     __ptext1313:
  8924                           
  8925 ;; *************** function _UARTwriteDecimal *****************
  8926 ;; Defined at:
  8927 ;;		line 319 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  c               1    wreg     unsigned char 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  c               1    0[BANK0 ] unsigned char 
  8932 ;;  d               1    2[BANK0 ] unsigned char 
  8933 ;;  hC              1    1[BANK0 ] unsigned char 
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0, pclath, cstack
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8944 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8946 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8947 ;;Total ram usage:        5 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:    2
  8950 ;; This function calls:
  8951 ;;		___lbdiv
  8952 ;;		_UARTwrite
  8953 ;;		___bmul
  8954 ;; This function is called by:
  8955 ;;		_UARTworker
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           psect	text1313
  8959                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  8960                           	line	319
  8961                           	global	__size_of_UARTwriteDecimal
  8962  0038                     	__size_of_UARTwriteDecimal	equ	__end_of_UARTwriteDecimal-_UARTwriteDecimal
  8963                           	
  8964  0803                     _UARTwriteDecimal:	
  8965                           	opt	stack 12
  8966                           ; Regs used in _UARTwriteDecimal: [wreg+status,2+status,0+pclath+cstack]
  8967                           ;UARTwriteDecimal@c stored from wreg
  8968  0803  0020               	movlb 0	; select bank0
  8969  0804  00BA               	movwf	(UARTwriteDecimal@c)
  8970                           	line	320
  8971                           	
  8972  0805                     l19256:	
  8973                           ;uart.c: 320: unsigned char hC,d=100;
  8974  0805  3064               	movlw	(064h)
  8975  0806  00F8               	movwf	(??_UARTwriteDecimal+0)+0
  8976  0807  0878               	movf	(??_UARTwriteDecimal+0)+0,w
  8977  0808  00BC               	movwf	(UARTwriteDecimal@d)
  8978  0809  280A               	goto	l19258
  8979                           	line	321
  8980                           ;uart.c: 321: do
  8981                           	
  8982  080A                     l6722:	
  8983                           	line	323
  8984                           	
  8985  080A                     l19258:	
  8986                           ;uart.c: 322: {
  8987                           ;uart.c: 323: hC=c/d;
  8988  080A  083C               	movf	(UARTwriteDecimal@d),w
  8989  080B  00F8               	movwf	(??_UARTwriteDecimal+0)+0
  8990  080C  0878               	movf	(??_UARTwriteDecimal+0)+0,w
  8991  080D  00F3               	movwf	(?___lbdiv)
  8992  080E  083A               	movf	(UARTwriteDecimal@c),w
  8993  080F  3195  25F8  3188   	fcall	___lbdiv
  8994  0812  00F9               	movwf	(??_UARTwriteDecimal+1)+0
  8995  0813  0879               	movf	(??_UARTwriteDecimal+1)+0,w
  8996  0814  0020               	movlb 0	; select bank0
  8997  0815  00BB               	movwf	(UARTwriteDecimal@hC)
  8998                           	line	324
  8999                           	
  9000  0816                     l19260:	
  9001                           ;uart.c: 324: UARTwrite(hC+48);
  9002  0816  083B               	movf	(UARTwriteDecimal@hC),w
  9003  0817  3E30               	addlw	030h
  9004  0818  3195  251F  3188   	fcall	_UARTwrite
  9005                           	line	325
  9006                           	
  9007  081B                     l19262:	
  9008                           ;uart.c: 325: c-=hC*d;
  9009  081B  0020               	movlb 0	; select bank0
  9010  081C  083C               	movf	(UARTwriteDecimal@d),w
  9011  081D  00F8               	movwf	(??_UARTwriteDecimal+0)+0
  9012  081E  0878               	movf	(??_UARTwriteDecimal+0)+0,w
  9013  081F  00F3               	movwf	(?___bmul)
  9014  0820  083B               	movf	(UARTwriteDecimal@hC),w
  9015  0821  3195  256A  3188   	fcall	___bmul
  9016  0824  00F9               	movwf	(??_UARTwriteDecimal+1)+0
  9017  0825  0879               	movf	0+(??_UARTwriteDecimal+1)+0,w
  9018  0826  0020               	movlb 0	; select bank0
  9019  0827  02BA               	subwf	(UARTwriteDecimal@c),f
  9020                           	line	326
  9021                           	
  9022  0828                     l19264:	
  9023                           ;uart.c: 326: d/=10;
  9024  0828  300A               	movlw	(0Ah)
  9025  0829  00F8               	movwf	(??_UARTwriteDecimal+0)+0
  9026  082A  0878               	movf	(??_UARTwriteDecimal+0)+0,w
  9027  082B  00F3               	movwf	(?___lbdiv)
  9028  082C  083C               	movf	(UARTwriteDecimal@d),w
  9029  082D  3195  25F8  3188   	fcall	___lbdiv
  9030  0830  00F9               	movwf	(??_UARTwriteDecimal+1)+0
  9031  0831  0879               	movf	(??_UARTwriteDecimal+1)+0,w
  9032  0832  0020               	movlb 0	; select bank0
  9033  0833  00BC               	movwf	(UARTwriteDecimal@d)
  9034                           	line	327
  9035                           	
  9036  0834                     l19266:	
  9037                           ;uart.c: 327: }while(d);
  9038  0834  08BC               	movf	(UARTwriteDecimal@d),f
  9039  0835  1D03               	skipz
  9040  0836  2838               	goto	u4171
  9041  0837  2839               	goto	u4170
  9042  0838                     u4171:
  9043  0838  280A               	goto	l19258
  9044  0839                     u4170:
  9045  0839  283A               	goto	l6724
  9046                           	
  9047  083A                     l6723:	
  9048                           	line	328
  9049                           	
  9050  083A                     l6724:	
  9051  083A  0008               	return
  9052                           	opt stack 0
  9053                           GLOBAL	__end_of_UARTwriteDecimal
  9054  083B                     	__end_of_UARTwriteDecimal:
  9055 ;; =============== function _UARTwriteDecimal ends ============
  9056                           
  9057                           	signat	_UARTwriteDecimal,4216
  9058                           	global	_UARTwriteString
  9059                           psect	text1314,local,class=CODE,delta=2
  9060                           global __ptext1314
  9061  15CF                     __ptext1314:
  9062                           
  9063 ;; *************** function _UARTwriteString *****************
  9064 ;; Defined at:
  9065 ;;		line 286 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  str             2    4[COMMON] PTR unsigned char 
  9068 ;;		 -> msgEEaddr(28), STR_8(37), msgEEw(57), msgDACsetV(41), 
  9069 ;;		 -> STR_7(29), STR_6(25), STR_5(23), STR_4(21), 
  9070 ;;		 -> STR_3(21), STR_2(21), STR_1(14), msgMenu4(122), 
  9071 ;;		 -> msgMenu3(76), msgMenu2(93), msgMenu1(123), msgMenu0(114), 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  i               1    8[COMMON] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;		None               void
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9086 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9087 ;;Total ram usage:        5 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    2
  9090 ;; This function calls:
  9091 ;;		_UARTwrite
  9092 ;; This function is called by:
  9093 ;;		_UARTworker
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           psect	text1314
  9097                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
  9098                           	line	286
  9099                           	global	__size_of_UARTwriteString
  9100  0029                     	__size_of_UARTwriteString	equ	__end_of_UARTwriteString-_UARTwriteString
  9101                           	
  9102  15CF                     _UARTwriteString:	
  9103                           	opt	stack 12
  9104                           ; Regs used in _UARTwriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9105                           	line	287
  9106                           	
  9107  15CF                     l19248:	
  9108                           ;uart.c: 287: unsigned char i=0;
  9109  15CF  01F8               	clrf	(UARTwriteString@i)
  9110                           	line	288
  9111                           ;uart.c: 288: while(str[i])
  9112  15D0  2DE5               	goto	l19254
  9113                           	
  9114  15D1                     l6705:	
  9115                           	line	290
  9116                           	
  9117  15D1                     l19250:	
  9118                           ;uart.c: 289: {
  9119                           ;uart.c: 290: UARTwrite(str[i++]);
  9120  15D1  0875               	movf	(UARTwriteString@str+1),w
  9121  15D2  00F7               	movwf	(??_UARTwriteString+0)+0+1
  9122  15D3  0874               	movf	(UARTwriteString@str),w
  9123  15D4  00F6               	movwf	(??_UARTwriteString+0)+0
  9124  15D5  0878               	movf	(UARTwriteString@i),w
  9125  15D6  0776               	addwf	(??_UARTwriteString+0)+0,w
  9126  15D7  0084               	movwf	fsr0l
  9127  15D8  0877               	movf	(??_UARTwriteString+0)+1,w
  9128  15D9  1803               	skipnc
  9129  15DA  0A77               	incf	(??_UARTwriteString+0)+1,w
  9130  15DB  0085               	movwf	fsr0h
  9131                           
  9132  15DC  0800               	movf	indf0,w ;code access
  9133  15DD  3195  251F  3195   	fcall	_UARTwrite
  9134                           	
  9135  15E0                     l19252:	
  9136  15E0  3001               	movlw	(01h)
  9137  15E1  00F6               	movwf	(??_UARTwriteString+0)+0
  9138  15E2  0876               	movf	(??_UARTwriteString+0)+0,w
  9139  15E3  07F8               	addwf	(UARTwriteString@i),f
  9140  15E4  2DE5               	goto	l19254
  9141                           	line	291
  9142                           	
  9143  15E5                     l6704:	
  9144                           	line	288
  9145                           	
  9146  15E5                     l19254:	
  9147  15E5  0875               	movf	(UARTwriteString@str+1),w
  9148  15E6  00F7               	movwf	(??_UARTwriteString+0)+0+1
  9149  15E7  0874               	movf	(UARTwriteString@str),w
  9150  15E8  00F6               	movwf	(??_UARTwriteString+0)+0
  9151  15E9  0878               	movf	(UARTwriteString@i),w
  9152  15EA  0776               	addwf	(??_UARTwriteString+0)+0,w
  9153  15EB  0084               	movwf	fsr0l
  9154  15EC  0877               	movf	(??_UARTwriteString+0)+1,w
  9155  15ED  1803               	skipnc
  9156  15EE  0A77               	incf	(??_UARTwriteString+0)+1,w
  9157  15EF  0085               	movwf	fsr0h
  9158                           
  9159  15F0  0800               	movf	indf0,w ;code access
  9160  15F1  3800               	iorlw	0
  9161  15F2  1D03               	skipz
  9162  15F3  2DF5               	goto	u4161
  9163  15F4  2DF6               	goto	u4160
  9164  15F5                     u4161:
  9165  15F5  2DD1               	goto	l19250
  9166  15F6                     u4160:
  9167  15F6  2DF7               	goto	l6707
  9168                           	
  9169  15F7                     l6706:	
  9170                           	line	292
  9171                           	
  9172  15F7                     l6707:	
  9173  15F7  0008               	return
  9174                           	opt stack 0
  9175                           GLOBAL	__end_of_UARTwriteString
  9176  15F8                     	__end_of_UARTwriteString:
  9177 ;; =============== function _UARTwriteString ends ============
  9178                           
  9179                           	signat	_UARTwriteString,4216
  9180                           	global	_setDuty
  9181                           psect	text1315,local,class=CODE,delta=2
  9182                           global __ptext1315
  9183  090B                     __ptext1315:
  9184                           
  9185 ;; *************** function _setDuty *****************
  9186 ;; Defined at:
  9187 ;;		line 55 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  D               1    wreg     unsigned char 
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;  D               1    7[BANK0 ] unsigned char 
  9192 ;;  temp            2    8[BANK0 ] unsigned int 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;		None               void
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0, pclath, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9203 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9205 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  9206 ;;Total ram usage:        7 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    2
  9209 ;; This function calls:
  9210 ;;		___wmul
  9211 ;;		___lwdiv
  9212 ;; This function is called by:
  9213 ;;		_I2CPWMworker
  9214 ;;		_SPIPWMworker
  9215 ;;		_UARTworker
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           psect	text1315
  9219                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9220                           	line	55
  9221                           	global	__size_of_setDuty
  9222  0072                     	__size_of_setDuty	equ	__end_of_setDuty-_setDuty
  9223                           	
  9224  090B                     _setDuty:	
  9225                           	opt	stack 12
  9226                           ; Regs used in _setDuty: [wreg+status,2+status,0+pclath+cstack]
  9227                           ;setDuty@D stored from wreg
  9228                           	line	58
  9229  090B  0020               	movlb 0	; select bank0
  9230  090C  00C1               	movwf	(setDuty@D)
  9231                           	
  9232  090D                     l19742:	
  9233                           ;pwm.c: 56: unsigned int temp;
  9234                           ;pwm.c: 58: if(D<100)
  9235  090D  3064               	movlw	(064h)
  9236  090E  0241               	subwf	(setDuty@D),w
  9237  090F  1803               	skipnc
  9238  0910  2912               	goto	u4761
  9239  0911  2913               	goto	u4760
  9240  0912                     u4761:
  9241  0912  2947               	goto	l19750
  9242  0913                     u4760:
  9243                           	line	60
  9244                           	
  9245  0913                     l19744:	
  9246                           ;pwm.c: 59: {
  9247                           ;pwm.c: 60: PWMduty = D;
  9248  0913  0841               	movf	(setDuty@D),w
  9249  0914  00BD               	movwf	(??_setDuty+0)+0
  9250  0915  083D               	movf	(??_setDuty+0)+0,w
  9251  0916  00E3               	movwf	(_PWMduty)
  9252                           	line	61
  9253                           	
  9254  0917                     l19746:	
  9255                           ;pwm.c: 61: temp = PWMduty*PWMperiod;
  9256  0917  0863               	movf	(_PWMduty),w
  9257  0918  00BD               	movwf	(??_setDuty+0)+0
  9258  0919  01BE               	clrf	(??_setDuty+0)+0+1
  9259  091A  083D               	movf	0+(??_setDuty+0)+0,w
  9260  091B  00F3               	movwf	(?___wmul)
  9261  091C  083E               	movf	1+(??_setDuty+0)+0,w
  9262  091D  00F4               	movwf	(?___wmul+1)
  9263  091E  0864               	movf	(_PWMperiod),w
  9264  091F  00BF               	movwf	(??_setDuty+2)+0
  9265  0920  01C0               	clrf	(??_setDuty+2)+0+1
  9266  0921  083F               	movf	0+(??_setDuty+2)+0,w
  9267  0922  00F5               	movwf	0+(?___wmul)+02h
  9268  0923  0840               	movf	1+(??_setDuty+2)+0,w
  9269  0924  00F6               	movwf	1+(?___wmul)+02h
  9270  0925  3195  2583  3189   	fcall	___wmul
  9271  0928  0874               	movf	(1+(?___wmul)),w
  9272  0929  0020               	movlb 0	; select bank0
  9273  092A  01C3               	clrf	(setDuty@temp+1)
  9274  092B  07C3               	addwf	(setDuty@temp+1)
  9275  092C  0873               	movf	(0+(?___wmul)),w
  9276  092D  01C2               	clrf	(setDuty@temp)
  9277  092E  07C2               	addwf	(setDuty@temp)
  9278                           
  9279                           	line	62
  9280                           	
  9281  092F                     l19748:	
  9282                           ;pwm.c: 62: temp = temp/100;
  9283  092F  3064               	movlw	low(064h)
  9284  0930  00F3               	movwf	(?___lwdiv)
  9285  0931  3000               	movlw	high(064h)
  9286  0932  00F4               	movwf	((?___lwdiv))+1
  9287  0933  0843               	movf	(setDuty@temp+1),w
  9288  0934  01F6               	clrf	1+(?___lwdiv)+02h
  9289  0935  07F6               	addwf	1+(?___lwdiv)+02h
  9290  0936  0842               	movf	(setDuty@temp),w
  9291  0937  01F5               	clrf	0+(?___lwdiv)+02h
  9292  0938  07F5               	addwf	0+(?___lwdiv)+02h
  9293                           
  9294  0939  3196  266D  3189   	fcall	___lwdiv
  9295  093C  0874               	movf	(1+(?___lwdiv)),w
  9296  093D  0020               	movlb 0	; select bank0
  9297  093E  01C3               	clrf	(setDuty@temp+1)
  9298  093F  07C3               	addwf	(setDuty@temp+1)
  9299  0940  0873               	movf	(0+(?___lwdiv)),w
  9300  0941  01C2               	clrf	(setDuty@temp)
  9301  0942  07C2               	addwf	(setDuty@temp)
  9302                           
  9303                           	line	63
  9304                           ;pwm.c: 63: CCPR2L = temp;
  9305  0943  0842               	movf	(setDuty@temp),w
  9306  0944  0025               	movlb 5	; select bank5
  9307  0945  0098               	movwf	(664)^0280h	;volatile
  9308                           	line	64
  9309                           ;pwm.c: 64: }
  9310  0946  297C               	goto	l14598
  9311                           	line	65
  9312                           	
  9313  0947                     l14596:	
  9314                           	line	67
  9315                           	
  9316  0947                     l19750:	
  9317                           ;pwm.c: 65: else
  9318                           ;pwm.c: 66: {
  9319                           ;pwm.c: 67: PWMduty = 99;
  9320  0947  3063               	movlw	(063h)
  9321  0948  0020               	movlb 0	; select bank0
  9322  0949  00BD               	movwf	(??_setDuty+0)+0
  9323  094A  083D               	movf	(??_setDuty+0)+0,w
  9324  094B  00E3               	movwf	(_PWMduty)
  9325                           	line	68
  9326                           	
  9327  094C                     l19752:	
  9328                           ;pwm.c: 68: temp = PWMduty*PWMperiod;
  9329  094C  0863               	movf	(_PWMduty),w
  9330  094D  00BD               	movwf	(??_setDuty+0)+0
  9331  094E  01BE               	clrf	(??_setDuty+0)+0+1
  9332  094F  083D               	movf	0+(??_setDuty+0)+0,w
  9333  0950  00F3               	movwf	(?___wmul)
  9334  0951  083E               	movf	1+(??_setDuty+0)+0,w
  9335  0952  00F4               	movwf	(?___wmul+1)
  9336  0953  0864               	movf	(_PWMperiod),w
  9337  0954  00BF               	movwf	(??_setDuty+2)+0
  9338  0955  01C0               	clrf	(??_setDuty+2)+0+1
  9339  0956  083F               	movf	0+(??_setDuty+2)+0,w
  9340  0957  00F5               	movwf	0+(?___wmul)+02h
  9341  0958  0840               	movf	1+(??_setDuty+2)+0,w
  9342  0959  00F6               	movwf	1+(?___wmul)+02h
  9343  095A  3195  2583  3189   	fcall	___wmul
  9344  095D  0874               	movf	(1+(?___wmul)),w
  9345  095E  0020               	movlb 0	; select bank0
  9346  095F  01C3               	clrf	(setDuty@temp+1)
  9347  0960  07C3               	addwf	(setDuty@temp+1)
  9348  0961  0873               	movf	(0+(?___wmul)),w
  9349  0962  01C2               	clrf	(setDuty@temp)
  9350  0963  07C2               	addwf	(setDuty@temp)
  9351                           
  9352                           	line	69
  9353                           	
  9354  0964                     l19754:	
  9355                           ;pwm.c: 69: temp = temp/100;
  9356  0964  3064               	movlw	low(064h)
  9357  0965  00F3               	movwf	(?___lwdiv)
  9358  0966  3000               	movlw	high(064h)
  9359  0967  00F4               	movwf	((?___lwdiv))+1
  9360  0968  0843               	movf	(setDuty@temp+1),w
  9361  0969  01F6               	clrf	1+(?___lwdiv)+02h
  9362  096A  07F6               	addwf	1+(?___lwdiv)+02h
  9363  096B  0842               	movf	(setDuty@temp),w
  9364  096C  01F5               	clrf	0+(?___lwdiv)+02h
  9365  096D  07F5               	addwf	0+(?___lwdiv)+02h
  9366                           
  9367  096E  3196  266D  3189   	fcall	___lwdiv
  9368  0971  0874               	movf	(1+(?___lwdiv)),w
  9369  0972  0020               	movlb 0	; select bank0
  9370  0973  01C3               	clrf	(setDuty@temp+1)
  9371  0974  07C3               	addwf	(setDuty@temp+1)
  9372  0975  0873               	movf	(0+(?___lwdiv)),w
  9373  0976  01C2               	clrf	(setDuty@temp)
  9374  0977  07C2               	addwf	(setDuty@temp)
  9375                           
  9376                           	line	70
  9377                           ;pwm.c: 70: CCPR2L = temp;
  9378  0978  0842               	movf	(setDuty@temp),w
  9379  0979  0025               	movlb 5	; select bank5
  9380  097A  0098               	movwf	(664)^0280h	;volatile
  9381  097B  297C               	goto	l14598
  9382                           	line	71
  9383                           	
  9384  097C                     l14597:	
  9385                           	line	72
  9386                           	
  9387  097C                     l14598:	
  9388  097C  0008               	return
  9389                           	opt stack 0
  9390                           GLOBAL	__end_of_setDuty
  9391  097D                     	__end_of_setDuty:
  9392 ;; =============== function _setDuty ends ============
  9393                           
  9394                           	signat	_setDuty,4216
  9395                           	global	_setPeriod
  9396                           psect	text1316,local,class=CODE,delta=2
  9397                           global __ptext1316
  9398  16FD                     __ptext1316:
  9399                           
  9400 ;; *************** function _setPeriod *****************
  9401 ;; Defined at:
  9402 ;;		line 35 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  P               1    wreg     unsigned char 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  P               1    9[BANK0 ] unsigned char 
  9407 ;;  temp            2    7[BANK0 ] unsigned int 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;		None               void
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0, pclath, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9419 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9420 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  9421 ;;Total ram usage:        7 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:    2
  9424 ;; This function calls:
  9425 ;;		___wmul
  9426 ;;		___lwdiv
  9427 ;; This function is called by:
  9428 ;;		_I2CPWMworker
  9429 ;;		_SPIPWMworker
  9430 ;;		_UARTworker
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           psect	text1316
  9434                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9435                           	line	35
  9436                           	global	__size_of_setPeriod
  9437  004A                     	__size_of_setPeriod	equ	__end_of_setPeriod-_setPeriod
  9438                           	
  9439  16FD                     _setPeriod:	
  9440                           	opt	stack 12
  9441                           ; Regs used in _setPeriod: [wreg+status,2+status,0+pclath+cstack]
  9442                           ;setPeriod@P stored from wreg
  9443                           	line	37
  9444  16FD  0020               	movlb 0	; select bank0
  9445  16FE  00C3               	movwf	(setPeriod@P)
  9446                           	
  9447  16FF                     l19730:	
  9448                           ;pwm.c: 36: unsigned int temp;
  9449                           ;pwm.c: 37: if(P>1)
  9450  16FF  3002               	movlw	(02h)
  9451  1700  0243               	subwf	(setPeriod@P),w
  9452  1701  1C03               	skipc
  9453  1702  2F04               	goto	u4751
  9454  1703  2F05               	goto	u4750
  9455  1704                     u4751:
  9456  1704  2F3C               	goto	l19740
  9457  1705                     u4750:
  9458                           	line	39
  9459                           	
  9460  1705                     l19732:	
  9461                           ;pwm.c: 38: {
  9462                           ;pwm.c: 39: temp=P*PWMduty;
  9463  1705  0843               	movf	(setPeriod@P),w
  9464  1706  00BD               	movwf	(??_setPeriod+0)+0
  9465  1707  01BE               	clrf	(??_setPeriod+0)+0+1
  9466  1708  083D               	movf	0+(??_setPeriod+0)+0,w
  9467  1709  00F3               	movwf	(?___wmul)
  9468  170A  083E               	movf	1+(??_setPeriod+0)+0,w
  9469  170B  00F4               	movwf	(?___wmul+1)
  9470  170C  0863               	movf	(_PWMduty),w
  9471  170D  00BF               	movwf	(??_setPeriod+2)+0
  9472  170E  01C0               	clrf	(??_setPeriod+2)+0+1
  9473  170F  083F               	movf	0+(??_setPeriod+2)+0,w
  9474  1710  00F5               	movwf	0+(?___wmul)+02h
  9475  1711  0840               	movf	1+(??_setPeriod+2)+0,w
  9476  1712  00F6               	movwf	1+(?___wmul)+02h
  9477  1713  3195  2583  3196   	fcall	___wmul
  9478  1716  0874               	movf	(1+(?___wmul)),w
  9479  1717  0020               	movlb 0	; select bank0
  9480  1718  01C2               	clrf	(setPeriod@temp+1)
  9481  1719  07C2               	addwf	(setPeriod@temp+1)
  9482  171A  0873               	movf	(0+(?___wmul)),w
  9483  171B  01C1               	clrf	(setPeriod@temp)
  9484  171C  07C1               	addwf	(setPeriod@temp)
  9485                           
  9486                           	line	40
  9487                           ;pwm.c: 40: temp = temp/100;
  9488  171D  3064               	movlw	low(064h)
  9489  171E  00F3               	movwf	(?___lwdiv)
  9490  171F  3000               	movlw	high(064h)
  9491  1720  00F4               	movwf	((?___lwdiv))+1
  9492  1721  0842               	movf	(setPeriod@temp+1),w
  9493  1722  01F6               	clrf	1+(?___lwdiv)+02h
  9494  1723  07F6               	addwf	1+(?___lwdiv)+02h
  9495  1724  0841               	movf	(setPeriod@temp),w
  9496  1725  01F5               	clrf	0+(?___lwdiv)+02h
  9497  1726  07F5               	addwf	0+(?___lwdiv)+02h
  9498                           
  9499  1727  3196  266D  3196   	fcall	___lwdiv
  9500  172A  0874               	movf	(1+(?___lwdiv)),w
  9501  172B  0020               	movlb 0	; select bank0
  9502  172C  01C2               	clrf	(setPeriod@temp+1)
  9503  172D  07C2               	addwf	(setPeriod@temp+1)
  9504  172E  0873               	movf	(0+(?___lwdiv)),w
  9505  172F  01C1               	clrf	(setPeriod@temp)
  9506  1730  07C1               	addwf	(setPeriod@temp)
  9507                           
  9508                           	line	41
  9509                           	
  9510  1731                     l19734:	
  9511                           ;pwm.c: 41: CCPR2L = temp;
  9512  1731  0841               	movf	(setPeriod@temp),w
  9513  1732  0025               	movlb 5	; select bank5
  9514  1733  0098               	movwf	(664)^0280h	;volatile
  9515                           	line	42
  9516                           	
  9517  1734                     l19736:	
  9518                           ;pwm.c: 42: PWMperiod = P;
  9519  1734  0020               	movlb 0	; select bank0
  9520  1735  0843               	movf	(setPeriod@P),w
  9521  1736  00BD               	movwf	(??_setPeriod+0)+0
  9522  1737  083D               	movf	(??_setPeriod+0)+0,w
  9523  1738  00E4               	movwf	(_PWMperiod)
  9524                           	line	43
  9525                           	
  9526  1739                     l19738:	
  9527                           ;pwm.c: 43: PR2=P;
  9528  1739  0843               	movf	(setPeriod@P),w
  9529  173A  009B               	movwf	(27)	;volatile
  9530                           	line	44
  9531                           ;pwm.c: 44: }
  9532  173B  2F46               	goto	l14593
  9533                           	line	45
  9534                           	
  9535  173C                     l14591:	
  9536                           	line	47
  9537                           	
  9538  173C                     l19740:	
  9539                           ;pwm.c: 45: else
  9540                           ;pwm.c: 46: {
  9541                           ;pwm.c: 47: PWMperiod = 2;
  9542  173C  3002               	movlw	(02h)
  9543  173D  00BD               	movwf	(??_setPeriod+0)+0
  9544  173E  083D               	movf	(??_setPeriod+0)+0,w
  9545  173F  00E4               	movwf	(_PWMperiod)
  9546                           	line	48
  9547                           ;pwm.c: 48: PR2 = 2;
  9548  1740  3002               	movlw	(02h)
  9549  1741  009B               	movwf	(27)	;volatile
  9550                           	line	49
  9551                           ;pwm.c: 49: CCPR2L = 1;
  9552  1742  3001               	movlw	(01h)
  9553  1743  0025               	movlb 5	; select bank5
  9554  1744  0098               	movwf	(664)^0280h	;volatile
  9555  1745  2F46               	goto	l14593
  9556                           	line	50
  9557                           	
  9558  1746                     l14592:	
  9559                           	line	52
  9560                           	
  9561  1746                     l14593:	
  9562  1746  0008               	return
  9563                           	opt stack 0
  9564                           GLOBAL	__end_of_setPeriod
  9565  1747                     	__end_of_setPeriod:
  9566 ;; =============== function _setPeriod ends ============
  9567                           
  9568                           	signat	_setPeriod,4216
  9569                           	global	_enablePWM
  9570                           psect	text1317,local,class=CODE,delta=2
  9571                           global __ptext1317
  9572  07BC                     __ptext1317:
  9573                           
  9574 ;; *************** function _enablePWM *****************
  9575 ;; Defined at:
  9576 ;;		line 9 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;		None
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  tempP           2    6[BANK0 ] unsigned int 
  9581 ;; Return value:  Size  Location     Type
  9582 ;;		None               void
  9583 ;; Registers used:
  9584 ;;		wreg, status,2, status,0, pclath, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9592 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9593 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9594 ;;Total ram usage:        5 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:    2
  9597 ;; This function calls:
  9598 ;;		___wmul
  9599 ;;		___lwdiv
  9600 ;; This function is called by:
  9601 ;;		_I2CPWMworker
  9602 ;;		_SPIPWMworker
  9603 ;;		_UARTworker
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           psect	text1317
  9607                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
  9608                           	line	9
  9609                           	global	__size_of_enablePWM
  9610  0044                     	__size_of_enablePWM	equ	__end_of_enablePWM-_enablePWM
  9611                           	
  9612  07BC                     _enablePWM:	
  9613                           	opt	stack 12
  9614                           ; Regs used in _enablePWM: [wreg+status,2+status,0+pclath+cstack]
  9615                           	line	11
  9616                           	
  9617  07BC                     l19712:	
  9618                           ;pwm.c: 10: unsigned int tempP;
  9619                           ;pwm.c: 11: TRISAbits.TRISA5 =1;
  9620  07BC  0021               	movlb 1	; select bank1
  9621  07BD  168C               	bsf	(140)^080h,5	;volatile
  9622                           	line	12
  9623                           ;pwm.c: 12: APFCON1bits.CCP2SEL=1;
  9624  07BE  0022               	movlb 2	; select bank2
  9625  07BF  141E               	bsf	(286)^0100h,0	;volatile
  9626                           	line	13
  9627                           	
  9628  07C0                     l19714:	
  9629                           ;pwm.c: 13: PR2 = 0x02;
  9630  07C0  3002               	movlw	(02h)
  9631  07C1  0020               	movlb 0	; select bank0
  9632  07C2  009B               	movwf	(27)	;volatile
  9633                           	line	15
  9634                           ;pwm.c: 15: PWMperiod = PR2;
  9635  07C3  081B               	movf	(27),w	;volatile
  9636  07C4  00BD               	movwf	(??_enablePWM+0)+0
  9637  07C5  083D               	movf	(??_enablePWM+0)+0,w
  9638  07C6  00E4               	movwf	(_PWMperiod)
  9639                           	line	17
  9640                           ;pwm.c: 17: CCP2CON =0b00001100;
  9641  07C7  300C               	movlw	(0Ch)
  9642  07C8  0025               	movlb 5	; select bank5
  9643  07C9  009A               	movwf	(666)^0280h	;volatile
  9644                           	line	20
  9645                           ;pwm.c: 20: CCPR2L =0x01;
  9646  07CA  3001               	movlw	(01h)
  9647  07CB  0098               	movwf	(664)^0280h	;volatile
  9648                           	line	22
  9649                           	
  9650  07CC                     l19716:	
  9651                           ;pwm.c: 22: tempP=(unsigned int)CCPR2L*100;
  9652  07CC  0818               	movf	(664)^0280h,w	;volatile
  9653  07CD  0020               	movlb 0	; select bank0
  9654  07CE  00BD               	movwf	(??_enablePWM+0)+0
  9655  07CF  01BE               	clrf	(??_enablePWM+0)+0+1
  9656  07D0  083D               	movf	0+(??_enablePWM+0)+0,w
  9657  07D1  00F3               	movwf	(?___wmul)
  9658  07D2  083E               	movf	1+(??_enablePWM+0)+0,w
  9659  07D3  00F4               	movwf	(?___wmul+1)
  9660  07D4  3064               	movlw	low(064h)
  9661  07D5  00F5               	movwf	0+(?___wmul)+02h
  9662  07D6  3000               	movlw	high(064h)
  9663  07D7  00F6               	movwf	(0+(?___wmul)+02h)+1
  9664  07D8  3195  2583  3187   	fcall	___wmul
  9665  07DB  0874               	movf	(1+(?___wmul)),w
  9666  07DC  0020               	movlb 0	; select bank0
  9667  07DD  01C1               	clrf	(enablePWM@tempP+1)
  9668  07DE  07C1               	addwf	(enablePWM@tempP+1)
  9669  07DF  0873               	movf	(0+(?___wmul)),w
  9670  07E0  01C0               	clrf	(enablePWM@tempP)
  9671  07E1  07C0               	addwf	(enablePWM@tempP)
  9672                           
  9673                           	line	23
  9674                           	
  9675  07E2                     l19718:	
  9676                           ;pwm.c: 23: PWMduty = tempP/PWMperiod;
  9677  07E2  0864               	movf	(_PWMperiod),w
  9678  07E3  00BD               	movwf	(??_enablePWM+0)+0
  9679  07E4  01BE               	clrf	(??_enablePWM+0)+0+1
  9680  07E5  083D               	movf	0+(??_enablePWM+0)+0,w
  9681  07E6  00F3               	movwf	(?___lwdiv)
  9682  07E7  083E               	movf	1+(??_enablePWM+0)+0,w
  9683  07E8  00F4               	movwf	(?___lwdiv+1)
  9684  07E9  0841               	movf	(enablePWM@tempP+1),w
  9685  07EA  01F6               	clrf	1+(?___lwdiv)+02h
  9686  07EB  07F6               	addwf	1+(?___lwdiv)+02h
  9687  07EC  0840               	movf	(enablePWM@tempP),w
  9688  07ED  01F5               	clrf	0+(?___lwdiv)+02h
  9689  07EE  07F5               	addwf	0+(?___lwdiv)+02h
  9690                           
  9691  07EF  3196  266D  3187   	fcall	___lwdiv
  9692  07F2  0873               	movf	(0+(?___lwdiv)),w
  9693  07F3  0020               	movlb 0	; select bank0
  9694  07F4  00BF               	movwf	(??_enablePWM+2)+0
  9695  07F5  083F               	movf	(??_enablePWM+2)+0,w
  9696  07F6  00E3               	movwf	(_PWMduty)
  9697                           	line	26
  9698                           	
  9699  07F7                     l19720:	
  9700                           ;pwm.c: 26: CCPTMRS=0;
  9701  07F7  0025               	movlb 5	; select bank5
  9702  07F8  019E               	clrf	(670)^0280h	;volatile
  9703                           	line	27
  9704                           	
  9705  07F9                     l19722:	
  9706                           ;pwm.c: 27: TMR2IF=0;
  9707  07F9  0020               	movlb 0	; select bank0
  9708  07FA  1091               	bcf	(137/8),(137)&7
  9709                           	line	29
  9710                           	
  9711  07FB                     l19724:	
  9712                           ;pwm.c: 29: T2CON = 0;
  9713  07FB  019C               	clrf	(28)	;volatile
  9714                           	line	30
  9715                           	
  9716  07FC                     l19726:	
  9717                           ;pwm.c: 30: T2CONbits.TMR2ON =1;
  9718  07FC  151C               	bsf	(28),2	;volatile
  9719                           	line	31
  9720                           	
  9721  07FD                     l19728:	
  9722                           ;pwm.c: 31: TRISAbits.TRISA5 =0;
  9723  07FD  0021               	movlb 1	; select bank1
  9724  07FE  128C               	bcf	(140)^080h,5	;volatile
  9725                           	line	32
  9726                           	
  9727  07FF                     l14588:	
  9728  07FF  0008               	return
  9729                           	opt stack 0
  9730                           GLOBAL	__end_of_enablePWM
  9731  0800                     	__end_of_enablePWM:
  9732 ;; =============== function _enablePWM ends ============
  9733                           
  9734                           	signat	_enablePWM,88
  9735                           	global	_init
  9736                           psect	text1318,local,class=CODE,delta=2
  9737                           global __ptext1318
  9738  089C                     __ptext1318:
  9739                           
  9740 ;; *************** function _init *****************
  9741 ;; Defined at:
  9742 ;;		line 109 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;		None               void
  9749 ;; Registers used:
  9750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9760 ;;Total ram usage:        1 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    2
  9763 ;; This function calls:
  9764 ;;		_initSPI
  9765 ;;		_initI2C
  9766 ;;		_initUART
  9767 ;; This function is called by:
  9768 ;;		_main
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           psect	text1318
  9772                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
  9773                           	line	109
  9774                           	global	__size_of_init
  9775  006F                     	__size_of_init	equ	__end_of_init-_init
  9776                           	
  9777  089C                     _init:	
  9778                           	opt	stack 13
  9779                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9780                           	line	111
  9781                           	
  9782  089C                     l18792:	
  9783                           ;main.c: 111: OSCCONbits.SPLLEN=1;
  9784  089C  0021               	movlb 1	; select bank1
  9785  089D  1799               	bsf	(153)^080h,7	;volatile
  9786                           	line	112
  9787                           	
  9788  089E                     l18794:	
  9789                           ;main.c: 112: OSCCONbits.IRCF = 14;
  9790  089E  0819               	movf	(153)^080h,w	;volatile
  9791  089F  3987               	andlw	not (((1<<4)-1)<<3)
  9792  08A0  3870               	iorlw	(0Eh & ((1<<4)-1))<<3
  9793  08A1  0099               	movwf	(153)^080h	;volatile
  9794                           	line	113
  9795                           ;main.c: 113: OSCCONbits.SCS =0;
  9796  08A2  30FC               	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  9797  08A3  0599               	andwf	(153)^080h,f	;volatile
  9798                           	line	116
  9799                           	
  9800  08A4                     l18796:	
  9801                           ;main.c: 116: PORTA=0x00;
  9802  08A4  0020               	movlb 0	; select bank0
  9803  08A5  018C               	clrf	(12)	;volatile
  9804                           	line	117
  9805                           	
  9806  08A6                     l18798:	
  9807                           ;main.c: 117: LATA=0x00;
  9808  08A6  0022               	movlb 2	; select bank2
  9809  08A7  018C               	clrf	(268)^0100h	;volatile
  9810                           	line	118
  9811                           	
  9812  08A8                     l18800:	
  9813                           ;main.c: 118: ANSELA=0x00;
  9814  08A8  0023               	movlb 3	; select bank3
  9815  08A9  018C               	clrf	(396)^0180h	;volatile
  9816                           	line	119
  9817                           	
  9818  08AA                     l18802:	
  9819                           ;main.c: 119: TRISA=0xFF;
  9820  08AA  30FF               	movlw	(0FFh)
  9821  08AB  0021               	movlb 1	; select bank1
  9822  08AC  008C               	movwf	(140)^080h	;volatile
  9823                           	line	120
  9824                           	
  9825  08AD                     l18804:	
  9826                           ;main.c: 120: WPUA=0x00;
  9827  08AD  0024               	movlb 4	; select bank4
  9828  08AE  018C               	clrf	(524)^0200h	;volatile
  9829                           	line	123
  9830                           	
  9831  08AF                     l18806:	
  9832                           ;main.c: 123: PORTB=0x00;
  9833  08AF  0020               	movlb 0	; select bank0
  9834  08B0  018D               	clrf	(13)	;volatile
  9835                           	line	124
  9836                           	
  9837  08B1                     l18808:	
  9838                           ;main.c: 124: LATB=0x00;
  9839  08B1  0022               	movlb 2	; select bank2
  9840  08B2  018D               	clrf	(269)^0100h	;volatile
  9841                           	line	125
  9842                           	
  9843  08B3                     l18810:	
  9844                           ;main.c: 125: ANSELB=0x00;
  9845  08B3  0023               	movlb 3	; select bank3
  9846  08B4  018D               	clrf	(397)^0180h	;volatile
  9847                           	line	126
  9848                           	
  9849  08B5                     l18812:	
  9850                           ;main.c: 126: TRISB=0xFF;
  9851  08B5  30FF               	movlw	(0FFh)
  9852  08B6  0021               	movlb 1	; select bank1
  9853  08B7  008D               	movwf	(141)^080h	;volatile
  9854                           	line	127
  9855                           	
  9856  08B8                     l18814:	
  9857                           ;main.c: 127: WPUB=0x50;
  9858  08B8  3050               	movlw	(050h)
  9859  08B9  0024               	movlb 4	; select bank4
  9860  08BA  008D               	movwf	(525)^0200h	;volatile
  9861                           	line	130
  9862                           	
  9863  08BB                     l18816:	
  9864                           ;main.c: 130: PORTC=0x00;
  9865  08BB  0020               	movlb 0	; select bank0
  9866  08BC  018E               	clrf	(14)	;volatile
  9867                           	line	131
  9868                           	
  9869  08BD                     l18818:	
  9870                           ;main.c: 131: LATC=0x00;
  9871  08BD  0022               	movlb 2	; select bank2
  9872  08BE  018E               	clrf	(270)^0100h	;volatile
  9873                           	line	132
  9874                           	
  9875  08BF                     l18820:	
  9876                           ;main.c: 132: ANSELC=0x00;
  9877  08BF  0023               	movlb 3	; select bank3
  9878  08C0  018E               	clrf	(398)^0180h	;volatile
  9879                           	line	133
  9880                           	
  9881  08C1                     l18822:	
  9882                           ;main.c: 133: TRISC=0xD7;
  9883  08C1  30D7               	movlw	(0D7h)
  9884  08C2  0021               	movlb 1	; select bank1
  9885  08C3  008E               	movwf	(142)^080h	;volatile
  9886                           	line	134
  9887                           	
  9888  08C4                     l18824:	
  9889                           ;main.c: 134: WPUC=0x05;
  9890  08C4  3005               	movlw	(05h)
  9891  08C5  0024               	movlb 4	; select bank4
  9892  08C6  008E               	movwf	(526)^0200h	;volatile
  9893                           	line	136
  9894                           	
  9895  08C7                     l18826:	
  9896                           ;main.c: 136: nWPUEN=0;
  9897  08C7  0021               	movlb 1	; select bank1
  9898  08C8  1395               	bcf	(1199/8)^080h,(1199)&7
  9899                           	line	139
  9900                           	
  9901  08C9                     l18828:	
  9902                           ;main.c: 139: APFCON0=0x00;
  9903  08C9  0022               	movlb 2	; select bank2
  9904  08CA  019D               	clrf	(285)^0100h	;volatile
  9905                           	line	140
  9906                           	
  9907  08CB                     l18830:	
  9908                           ;main.c: 140: APFCON1=0x00;
  9909  08CB  019E               	clrf	(286)^0100h	;volatile
  9910                           	line	142
  9911                           	
  9912  08CC                     l18832:	
  9913                           ;main.c: 142: RC5=1;;
  9914  08CC  0020               	movlb 0	; select bank0
  9915  08CD  168E               	bsf	(117/8),(117)&7
  9916                           	line	143
  9917                           	
  9918  08CE                     l18834:	
  9919                           ;main.c: 143: RC3=1;;
  9920  08CE  158E               	bsf	(115/8),(115)&7
  9921                           	line	149
  9922                           	
  9923  08CF                     l18836:	
  9924                           ;main.c: 149: mode_device=0x00;
  9925  08CF  01E5               	clrf	(_mode_device)
  9926                           	line	150
  9927                           	
  9928  08D0                     l18838:	
  9929                           ;main.c: 150: mode_protocol=0x00;
  9930  08D0  01E6               	clrf	(_mode_protocol)
  9931                           	line	151
  9932                           	
  9933  08D1                     l18840:	
  9934                           ;main.c: 151: mode_device|=(RC2<<1);
  9935  08D1  3000               	movlw	0
  9936  08D2  190E               	btfsc	(114/8),(114)&7
  9937  08D3  3002               	movlw	(1 << (01h))
  9938  08D4  00F4               	movwf	(??_init+0)+0
  9939  08D5  0874               	movf	(??_init+0)+0,w
  9940  08D6  04E5               	iorwf	(_mode_device),f
  9941                           	line	152
  9942                           	
  9943  08D7                     l18842:	
  9944                           ;main.c: 152: mode_device|=(RA2);
  9945  08D7  3000               	movlw	0
  9946  08D8  190C               	btfsc	(98/8),(98)&7
  9947  08D9  3001               	movlw	1
  9948  08DA  00F4               	movwf	(??_init+0)+0
  9949  08DB  0874               	movf	(??_init+0)+0,w
  9950  08DC  04E5               	iorwf	(_mode_device),f
  9951                           	line	153
  9952                           	
  9953  08DD                     l18844:	
  9954                           ;main.c: 153: mode_protocol|=(RB6<<1);
  9955  08DD  3000               	movlw	0
  9956  08DE  1B0D               	btfsc	(110/8),(110)&7
  9957  08DF  3002               	movlw	(1 << (01h))
  9958  08E0  00F4               	movwf	(??_init+0)+0
  9959  08E1  0874               	movf	(??_init+0)+0,w
  9960  08E2  04E6               	iorwf	(_mode_protocol),f
  9961                           	line	154
  9962                           	
  9963  08E3                     l18846:	
  9964                           ;main.c: 154: mode_protocol|=(RB4);
  9965  08E3  3000               	movlw	0
  9966  08E4  1A0D               	btfsc	(108/8),(108)&7
  9967  08E5  3001               	movlw	1
  9968  08E6  00F4               	movwf	(??_init+0)+0
  9969  08E7  0874               	movf	(??_init+0)+0,w
  9970  08E8  04E6               	iorwf	(_mode_protocol),f
  9971                           	line	158
  9972                           ;main.c: 158: switch(mode_protocol)
  9973  08E9  28F9               	goto	l18856
  9974                           	line	159
  9975                           ;main.c: 159: { case 0x01: initSPI();
  9976                           	
  9977  08EA                     l1643:	
  9978                           	
  9979  08EA                     l18848:	
  9980  08EA  3194  24E4  3188   	fcall	_initSPI
  9981                           	line	160
  9982                           ;main.c: 160: break;
  9983  08ED  2908               	goto	l1644
  9984                           	line	161
  9985                           ;main.c: 161: case 0x03: initI2C();
  9986                           	
  9987  08EE                     l1645:	
  9988                           	
  9989  08EE                     l18850:	
  9990  08EE  3195  2512  3188   	fcall	_initI2C
  9991                           	line	162
  9992                           ;main.c: 162: break;
  9993  08F1  2908               	goto	l1644
  9994                           	line	163
  9995                           ;main.c: 163: case 0x02: initUART();
  9996                           	
  9997  08F2                     l1646:	
  9998                           	
  9999  08F2                     l18852:	
 10000  08F2  3195  252E  3188   	fcall	_initUART
 10001                           	line	164
 10002                           ;main.c: 164: break;
 10003  08F5  2908               	goto	l1644
 10004                           	line	165
 10005                           ;main.c: 165: case 0x00: break;
 10006                           	
 10007  08F6                     l1647:	
 10008  08F6  2908               	goto	l1644
 10009                           	line	166
 10010                           ;main.c: 166: default: break;
 10011                           	
 10012  08F7                     l1648:	
 10013  08F7  2908               	goto	l1644
 10014                           	line	167
 10015                           	
 10016  08F8                     l18854:	
 10017                           ;main.c: 167: }
 10018  08F8  2908               	goto	l1644
 10019                           	line	158
 10020                           	
 10021  08F9                     l1642:	
 10022                           	
 10023  08F9                     l18856:	
 10024  08F9  0020               	movlb 0	; select bank0
 10025  08FA  0866               	movf	(_mode_protocol),w
 10026                           	; Switch size 1, requested type "space"
 10027                           ; Number of cases is 4, Range of values is 0 to 3
 10028                           ; switch strategies available:
 10029                           ; Name         Instructions Cycles
 10030                           ; simple_byte           13     7 (average)
 10031                           ; direct_byte           14     6 (fixed)
 10032                           ; jumptable            260     6 (fixed)
 10033                           ; rangetable             8     4 (fixed)
 10034                           ; spacedrange           13     6 (fixed)
 10035                           ; locatedrange           4     3 (fixed)
 10036                           ;	Chosen strategy is simple_byte
 10037                           
 10038                           	opt asmopt_off
 10039  08FB  3A00               	xorlw	0^0	; case 0
 10040  08FC  1903               	skipnz
 10041  08FD  2908               	goto	l1644
 10042  08FE  3A01               	xorlw	1^0	; case 1
 10043  08FF  1903               	skipnz
 10044  0900  28EA               	goto	l18848
 10045  0901  3A03               	xorlw	2^1	; case 2
 10046  0902  1903               	skipnz
 10047  0903  28F2               	goto	l18852
 10048  0904  3A01               	xorlw	3^2	; case 3
 10049  0905  1903               	skipnz
 10050  0906  28EE               	goto	l18850
 10051  0907  2908               	goto	l1644
 10052                           	opt asmopt_on
 10053                           
 10054                           	line	167
 10055                           	
 10056  0908                     l1644:	
 10057                           	line	169
 10058                           ;main.c: 169: RC5=0;;
 10059  0908  0020               	movlb 0	; select bank0
 10060  0909  128E               	bcf	(117/8),(117)&7
 10061                           	line	176
 10062                           	
 10063  090A                     l1649:	
 10064  090A  0008               	return
 10065                           	opt stack 0
 10066                           GLOBAL	__end_of_init
 10067  090B                     	__end_of_init:
 10068 ;; =============== function _init ends ============
 10069                           
 10070                           	signat	_init,88
 10071                           	global	___lbdiv
 10072                           psect	text1319,local,class=CODE,delta=2
 10073                           global __ptext1319
 10074  15F8                     __ptext1319:
 10075                           
 10076 ;; *************** function ___lbdiv *****************
 10077 ;; Defined at:
 10078 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  dividend        1    wreg     unsigned char 
 10081 ;;  divisor         1    3[COMMON] unsigned char 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  dividend        1    5[COMMON] unsigned char 
 10084 ;;  quotient        1    7[COMMON] unsigned char 
 10085 ;;  counter         1    6[COMMON] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      unsigned char 
 10088 ;; Registers used:
 10089 ;;		wreg, status,2, status,0
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10098 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10099 ;;Total ram usage:        5 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    1
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_UARTwriteDecimal
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           psect	text1319
 10109                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
 10110                           	line	5
 10111                           	global	__size_of___lbdiv
 10112  0030                     	__size_of___lbdiv	equ	__end_of___lbdiv-___lbdiv
 10113                           	
 10114  15F8                     ___lbdiv:	
 10115                           	opt	stack 12
 10116                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 10117                           ;___lbdiv@dividend stored from wreg
 10118                           	line	9
 10119  15F8  00F5               	movwf	(___lbdiv@dividend)
 10120                           	
 10121  15F9                     l18768:	
 10122  15F9  01F7               	clrf	(___lbdiv@quotient)
 10123                           	line	10
 10124  15FA  0873               	movf	(___lbdiv@divisor),w
 10125  15FB  1D03               	skipz
 10126  15FC  2DFE               	goto	u3620
 10127  15FD  2E25               	goto	l18788
 10128  15FE                     u3620:
 10129                           	line	11
 10130                           	
 10131  15FE                     l18770:	
 10132  15FE  01F6               	clrf	(___lbdiv@counter)
 10133  15FF  1403               	bsf	status,0
 10134  1600  0DF6               	rlf	(___lbdiv@counter),f
 10135                           	line	12
 10136  1601  2E09               	goto	l18776
 10137                           	
 10138  1602                     l16056:	
 10139                           	line	13
 10140                           	
 10141  1602                     l18772:	
 10142  1602  1003               	clrc
 10143  1603  0DF3               	rlf	(___lbdiv@divisor),f
 10144                           
 10145                           	line	14
 10146                           	
 10147  1604                     l18774:	
 10148  1604  3001               	movlw	(01h)
 10149  1605  00F4               	movwf	(??___lbdiv+0)+0
 10150  1606  0874               	movf	(??___lbdiv+0)+0,w
 10151  1607  07F6               	addwf	(___lbdiv@counter),f
 10152  1608  2E09               	goto	l18776
 10153                           	line	15
 10154                           	
 10155  1609                     l16055:	
 10156                           	line	12
 10157                           	
 10158  1609                     l18776:	
 10159  1609  1FF3               	btfss	(___lbdiv@divisor),(7)&7
 10160  160A  2E0C               	goto	u3631
 10161  160B  2E0D               	goto	u3630
 10162  160C                     u3631:
 10163  160C  2E02               	goto	l18772
 10164  160D                     u3630:
 10165  160D  2E0F               	goto	l18778
 10166                           	
 10167  160E                     l16057:	
 10168  160E  2E0F               	goto	l18778
 10169                           	line	16
 10170                           	
 10171  160F                     l16058:	
 10172                           	line	17
 10173                           	
 10174  160F                     l18778:	
 10175  160F  1003               	clrc
 10176  1610  0DF7               	rlf	(___lbdiv@quotient),f
 10177                           
 10178                           	line	18
 10179  1611  0873               	movf	(___lbdiv@divisor),w
 10180  1612  0275               	subwf	(___lbdiv@dividend),w
 10181  1613  1C03               	skipc
 10182  1614  2E16               	goto	u3641
 10183  1615  2E17               	goto	u3640
 10184  1616                     u3641:
 10185  1616  2E1B               	goto	l18784
 10186  1617                     u3640:
 10187                           	line	19
 10188                           	
 10189  1617                     l18780:	
 10190  1617  0873               	movf	(___lbdiv@divisor),w
 10191  1618  02F5               	subwf	(___lbdiv@dividend),f
 10192                           	line	20
 10193                           	
 10194  1619                     l18782:	
 10195  1619  1477               	bsf	(___lbdiv@quotient)+(0/8),(0)&7
 10196  161A  2E1B               	goto	l18784
 10197                           	line	21
 10198                           	
 10199  161B                     l16059:	
 10200                           	line	22
 10201                           	
 10202  161B                     l18784:	
 10203  161B  1003               	clrc
 10204  161C  0CF3               	rrf	(___lbdiv@divisor),f
 10205                           
 10206                           	line	23
 10207                           	
 10208  161D                     l18786:	
 10209  161D  3001               	movlw	low(01h)
 10210  161E  02F6               	subwf	(___lbdiv@counter),f
 10211  161F  1D03               	btfss	status,2
 10212  1620  2E22               	goto	u3651
 10213  1621  2E23               	goto	u3650
 10214  1622                     u3651:
 10215  1622  2E0F               	goto	l18778
 10216  1623                     u3650:
 10217  1623  2E25               	goto	l18788
 10218                           	
 10219  1624                     l16060:	
 10220  1624  2E25               	goto	l18788
 10221                           	line	24
 10222                           	
 10223  1625                     l16054:	
 10224                           	line	25
 10225                           	
 10226  1625                     l18788:	
 10227  1625  0877               	movf	(___lbdiv@quotient),w
 10228  1626  2E27               	goto	l16061
 10229                           	
 10230  1627                     l18790:	
 10231                           	line	26
 10232                           	
 10233  1627                     l16061:	
 10234  1627  0008               	return
 10235                           	opt stack 0
 10236                           GLOBAL	__end_of___lbdiv
 10237  1628                     	__end_of___lbdiv:
 10238 ;; =============== function ___lbdiv ends ============
 10239                           
 10240                           	signat	___lbdiv,8313
 10241                           	global	___lwdiv
 10242                           psect	text1320,local,class=CODE,delta=2
 10243                           global __ptext1320
 10244  166D                     __ptext1320:
 10245                           
 10246 ;; *************** function ___lwdiv *****************
 10247 ;; Defined at:
 10248 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;  divisor         2    3[COMMON] unsigned int 
 10251 ;;  dividend        2    5[COMMON] unsigned int 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  quotient        2    1[BANK0 ] unsigned int 
 10254 ;;  counter         1    0[BANK0 ] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  2    3[COMMON] unsigned int 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10267 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10268 ;;Total ram usage:        8 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    1
 10271 ;; This function calls:
 10272 ;;		Nothing
 10273 ;; This function is called by:
 10274 ;;		_enablePWM
 10275 ;;		_setPeriod
 10276 ;;		_setDuty
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           psect	text1320
 10280                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
 10281                           	line	5
 10282                           	global	__size_of___lwdiv
 10283  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 10284                           	
 10285  166D                     ___lwdiv:	
 10286                           	opt	stack 12
 10287                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10288                           	line	9
 10289                           	
 10290  166D                     l19686:	
 10291  166D  0020               	movlb 0	; select bank0
 10292  166E  01BB               	clrf	(___lwdiv@quotient)
 10293  166F  01BC               	clrf	(___lwdiv@quotient+1)
 10294                           	line	10
 10295                           	
 10296  1670                     l19688:	
 10297  1670  0874               	movf	(___lwdiv@divisor+1),w
 10298  1671  0473               	iorwf	(___lwdiv@divisor),w
 10299  1672  1903               	skipnz
 10300  1673  2E75               	goto	u4681
 10301  1674  2E76               	goto	u4680
 10302  1675                     u4681:
 10303  1675  2EAC               	goto	l19708
 10304  1676                     u4680:
 10305                           	line	11
 10306                           	
 10307  1676                     l19690:	
 10308  1676  01BA               	clrf	(___lwdiv@counter)
 10309  1677  1403               	bsf	status,0
 10310  1678  0DBA               	rlf	(___lwdiv@counter),f
 10311                           	line	12
 10312  1679  2E84               	goto	l19696
 10313                           	
 10314  167A                     l16036:	
 10315                           	line	13
 10316                           	
 10317  167A                     l19692:	
 10318  167A  3001               	movlw	01h
 10319                           	
 10320  167B                     u4695:
 10321  167B  35F3               	lslf	(___lwdiv@divisor),f
 10322  167C  0DF4               	rlf	(___lwdiv@divisor+1),f
 10323  167D  0B89               	decfsz	wreg,f
 10324  167E  2E7B               	goto	u4695
 10325                           	line	14
 10326                           	
 10327  167F                     l19694:	
 10328  167F  3001               	movlw	(01h)
 10329  1680  00F7               	movwf	(??___lwdiv+0)+0
 10330  1681  0877               	movf	(??___lwdiv+0)+0,w
 10331  1682  07BA               	addwf	(___lwdiv@counter),f
 10332  1683  2E84               	goto	l19696
 10333                           	line	15
 10334                           	
 10335  1684                     l16035:	
 10336                           	line	12
 10337                           	
 10338  1684                     l19696:	
 10339  1684  1FF4               	btfss	(___lwdiv@divisor+1),(15)&7
 10340  1685  2E87               	goto	u4701
 10341  1686  2E88               	goto	u4700
 10342  1687                     u4701:
 10343  1687  2E7A               	goto	l19692
 10344  1688                     u4700:
 10345  1688  2E8A               	goto	l19698
 10346                           	
 10347  1689                     l16037:	
 10348  1689  2E8A               	goto	l19698
 10349                           	line	16
 10350                           	
 10351  168A                     l16038:	
 10352                           	line	17
 10353                           	
 10354  168A                     l19698:	
 10355  168A  3001               	movlw	01h
 10356                           	
 10357  168B                     u4715:
 10358  168B  35BB               	lslf	(___lwdiv@quotient),f
 10359  168C  0DBC               	rlf	(___lwdiv@quotient+1),f
 10360  168D  0B89               	decfsz	wreg,f
 10361  168E  2E8B               	goto	u4715
 10362                           	line	18
 10363  168F  0874               	movf	(___lwdiv@divisor+1),w
 10364  1690  0276               	subwf	(___lwdiv@dividend+1),w
 10365  1691  1D03               	skipz
 10366  1692  2E95               	goto	u4725
 10367  1693  0873               	movf	(___lwdiv@divisor),w
 10368  1694  0275               	subwf	(___lwdiv@dividend),w
 10369  1695                     u4725:
 10370  1695  1C03               	skipc
 10371  1696  2E98               	goto	u4721
 10372  1697  2E99               	goto	u4720
 10373  1698                     u4721:
 10374  1698  2E9F               	goto	l19704
 10375  1699                     u4720:
 10376                           	line	19
 10377                           	
 10378  1699                     l19700:	
 10379  1699  0873               	movf	(___lwdiv@divisor),w
 10380  169A  02F5               	subwf	(___lwdiv@dividend),f
 10381  169B  0874               	movf	(___lwdiv@divisor+1),w
 10382  169C  3BF6               	subwfb	(___lwdiv@dividend+1),f
 10383                           	line	20
 10384                           	
 10385  169D                     l19702:	
 10386  169D  143B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 10387  169E  2E9F               	goto	l19704
 10388                           	line	21
 10389                           	
 10390  169F                     l16039:	
 10391                           	line	22
 10392                           	
 10393  169F                     l19704:	
 10394  169F  3001               	movlw	01h
 10395                           	
 10396  16A0                     u4735:
 10397  16A0  36F4               	lsrf	(___lwdiv@divisor+1),f
 10398  16A1  0CF3               	rrf	(___lwdiv@divisor),f
 10399  16A2  0B89               	decfsz	wreg,f
 10400  16A3  2EA0               	goto	u4735
 10401                           	line	23
 10402                           	
 10403  16A4                     l19706:	
 10404  16A4  3001               	movlw	low(01h)
 10405  16A5  02BA               	subwf	(___lwdiv@counter),f
 10406  16A6  1D03               	btfss	status,2
 10407  16A7  2EA9               	goto	u4741
 10408  16A8  2EAA               	goto	u4740
 10409  16A9                     u4741:
 10410  16A9  2E8A               	goto	l19698
 10411  16AA                     u4740:
 10412  16AA  2EAC               	goto	l19708
 10413                           	
 10414  16AB                     l16040:	
 10415  16AB  2EAC               	goto	l19708
 10416                           	line	24
 10417                           	
 10418  16AC                     l16034:	
 10419                           	line	25
 10420                           	
 10421  16AC                     l19708:	
 10422  16AC  083C               	movf	(___lwdiv@quotient+1),w
 10423  16AD  01F4               	clrf	(?___lwdiv+1)
 10424  16AE  07F4               	addwf	(?___lwdiv+1)
 10425  16AF  083B               	movf	(___lwdiv@quotient),w
 10426  16B0  01F3               	clrf	(?___lwdiv)
 10427  16B1  07F3               	addwf	(?___lwdiv)
 10428                           
 10429  16B2  2EB3               	goto	l16041
 10430                           	
 10431  16B3                     l19710:	
 10432                           	line	26
 10433                           	
 10434  16B3                     l16041:	
 10435  16B3  0008               	return
 10436                           	opt stack 0
 10437                           GLOBAL	__end_of___lwdiv
 10438  16B4                     	__end_of___lwdiv:
 10439 ;; =============== function ___lwdiv ends ============
 10440                           
 10441                           	signat	___lwdiv,8314
 10442                           	global	___wmul
 10443                           psect	text1321,local,class=CODE,delta=2
 10444                           global __ptext1321
 10445  1583                     __ptext1321:
 10446                           
 10447 ;; *************** function ___wmul *****************
 10448 ;; Defined at:
 10449 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  multiplier      2    3[COMMON] unsigned int 
 10452 ;;  multiplicand    2    5[COMMON] unsigned int 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  product         2    7[COMMON] unsigned int 
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  2    3[COMMON] unsigned int 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2, status,0
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10468 ;;Total ram usage:        6 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    1
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_enablePWM
 10475 ;;		_setPeriod
 10476 ;;		_setDuty
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           psect	text1321
 10480                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 10481                           	line	3
 10482                           	global	__size_of___wmul
 10483  0024                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10484                           	
 10485  1583                     ___wmul:	
 10486                           	opt	stack 12
 10487                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10488                           	line	4
 10489                           	
 10490  1583                     l18730:	
 10491  1583  01F7               	clrf	(___wmul@product)
 10492  1584  01F8               	clrf	(___wmul@product+1)
 10493  1585  2D86               	goto	l18732
 10494                           	line	6
 10495                           	
 10496  1586                     l16028:	
 10497                           	line	7
 10498                           	
 10499  1586                     l18732:	
 10500  1586  1C73               	btfss	(___wmul@multiplier),(0)&7
 10501  1587  2D89               	goto	u3511
 10502  1588  2D8A               	goto	u3510
 10503  1589                     u3511:
 10504  1589  2D8E               	goto	l16029
 10505  158A                     u3510:
 10506                           	line	8
 10507                           	
 10508  158A                     l18734:	
 10509  158A  0875               	movf	(___wmul@multiplicand),w
 10510  158B  07F7               	addwf	(___wmul@product),f
 10511  158C  0876               	movf	(___wmul@multiplicand+1),w
 10512  158D  3DF8               	addwfc	(___wmul@product+1),f
 10513                           	
 10514  158E                     l16029:	
 10515                           	line	9
 10516  158E  3001               	movlw	01h
 10517                           	
 10518  158F                     u3525:
 10519  158F  35F5               	lslf	(___wmul@multiplicand),f
 10520  1590  0DF6               	rlf	(___wmul@multiplicand+1),f
 10521  1591  0B89               	decfsz	wreg,f
 10522  1592  2D8F               	goto	u3525
 10523                           	line	10
 10524                           	
 10525  1593                     l18736:	
 10526  1593  3001               	movlw	01h
 10527                           	
 10528  1594                     u3535:
 10529  1594  36F4               	lsrf	(___wmul@multiplier+1),f
 10530  1595  0CF3               	rrf	(___wmul@multiplier),f
 10531  1596  0B89               	decfsz	wreg,f
 10532  1597  2D94               	goto	u3535
 10533                           	line	11
 10534  1598  0874               	movf	((___wmul@multiplier+1)),w
 10535  1599  0473               	iorwf	((___wmul@multiplier)),w
 10536  159A  1D03               	skipz
 10537  159B  2D9D               	goto	u3541
 10538  159C  2D9E               	goto	u3540
 10539  159D                     u3541:
 10540  159D  2D86               	goto	l18732
 10541  159E                     u3540:
 10542  159E  2D9F               	goto	l18738
 10543                           	
 10544  159F                     l16030:	
 10545                           	line	12
 10546                           	
 10547  159F                     l18738:	
 10548  159F  0878               	movf	(___wmul@product+1),w
 10549  15A0  01F4               	clrf	(?___wmul+1)
 10550  15A1  07F4               	addwf	(?___wmul+1)
 10551  15A2  0877               	movf	(___wmul@product),w
 10552  15A3  01F3               	clrf	(?___wmul)
 10553  15A4  07F3               	addwf	(?___wmul)
 10554                           
 10555  15A5  2DA6               	goto	l16031
 10556                           	
 10557  15A6                     l18740:	
 10558                           	line	13
 10559                           	
 10560  15A6                     l16031:	
 10561  15A6  0008               	return
 10562                           	opt stack 0
 10563                           GLOBAL	__end_of___wmul
 10564  15A7                     	__end_of___wmul:
 10565 ;; =============== function ___wmul ends ============
 10566                           
 10567                           	signat	___wmul,8314
 10568                           	global	___bmul
 10569                           psect	text1322,local,class=CODE,delta=2
 10570                           global __ptext1322
 10571  156A                     __ptext1322:
 10572                           
 10573 ;; *************** function ___bmul *****************
 10574 ;; Defined at:
 10575 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  multiplier      1    wreg     unsigned char 
 10578 ;;  multiplicand    1    3[COMMON] unsigned char 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  multiplier      1    6[COMMON] unsigned char 
 10581 ;;  product         1    5[COMMON] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      unsigned char 
 10584 ;; Registers used:
 10585 ;;		wreg, status,2, status,0
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10595 ;;Total ram usage:        4 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    1
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_UARTcharFromString
 10602 ;;		_UARTwriteDecimal
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           psect	text1322
 10606                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
 10607                           	line	3
 10608                           	global	__size_of___bmul
 10609  0019                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 10610                           	
 10611  156A                     ___bmul:	
 10612                           	opt	stack 12
 10613                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10614                           ;___bmul@multiplier stored from wreg
 10615  156A  00F6               	movwf	(___bmul@multiplier)
 10616                           	line	4
 10617                           	
 10618  156B                     l18714:	
 10619  156B  01F5               	clrf	(___bmul@product)
 10620  156C  2D6D               	goto	l18716
 10621                           	line	6
 10622                           	
 10623  156D                     l16022:	
 10624                           	line	7
 10625                           	
 10626  156D                     l18716:	
 10627  156D  1C76               	btfss	(___bmul@multiplier),(0)&7
 10628  156E  2D70               	goto	u3491
 10629  156F  2D71               	goto	u3490
 10630  1570                     u3491:
 10631  1570  2D76               	goto	l18720
 10632  1571                     u3490:
 10633                           	line	8
 10634                           	
 10635  1571                     l18718:	
 10636  1571  0873               	movf	(___bmul@multiplicand),w
 10637  1572  00F4               	movwf	(??___bmul+0)+0
 10638  1573  0874               	movf	(??___bmul+0)+0,w
 10639  1574  07F5               	addwf	(___bmul@product),f
 10640  1575  2D76               	goto	l18720
 10641                           	
 10642  1576                     l16023:	
 10643                           	line	9
 10644                           	
 10645  1576                     l18720:	
 10646  1576  1003               	clrc
 10647  1577  0DF3               	rlf	(___bmul@multiplicand),f
 10648                           
 10649                           	line	10
 10650                           	
 10651  1578                     l18722:	
 10652  1578  1003               	clrc
 10653  1579  0CF6               	rrf	(___bmul@multiplier),f
 10654                           
 10655                           	line	11
 10656                           	
 10657  157A                     l18724:	
 10658  157A  08F6               	movf	(___bmul@multiplier),f
 10659  157B  1D03               	skipz
 10660  157C  2D7E               	goto	u3501
 10661  157D  2D7F               	goto	u3500
 10662  157E                     u3501:
 10663  157E  2D6D               	goto	l18716
 10664  157F                     u3500:
 10665  157F  2D80               	goto	l18726
 10666                           	
 10667  1580                     l16024:	
 10668                           	line	12
 10669                           	
 10670  1580                     l18726:	
 10671  1580  0875               	movf	(___bmul@product),w
 10672  1581  2D82               	goto	l16025
 10673                           	
 10674  1582                     l18728:	
 10675                           	line	13
 10676                           	
 10677  1582                     l16025:	
 10678  1582  0008               	return
 10679                           	opt stack 0
 10680                           GLOBAL	__end_of___bmul
 10681  1583                     	__end_of___bmul:
 10682 ;; =============== function ___bmul ends ============
 10683                           
 10684                           	signat	___bmul,8313
 10685                           	global	_disableDAC
 10686                           psect	text1323,local,class=CODE,delta=2
 10687                           global __ptext1323
 10688  0800                     __ptext1323:
 10689                           
 10690 ;; *************** function _disableDAC *****************
 10691 ;; Defined at:
 10692 ;;		line 16 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;		None
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;		None               void
 10699 ;; Registers used:
 10700 ;;		status,2
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10710 ;;Total ram usage:        0 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:    1
 10713 ;; This function calls:
 10714 ;;		Nothing
 10715 ;; This function is called by:
 10716 ;;		_UARTworker
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           psect	text1323
 10720                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 10721                           	line	16
 10722                           	global	__size_of_disableDAC
 10723  0003                     	__size_of_disableDAC	equ	__end_of_disableDAC-_disableDAC
 10724                           	
 10725  0800                     _disableDAC:	
 10726                           	opt	stack 13
 10727                           ; Regs used in _disableDAC: [status,2]
 10728                           	line	17
 10729                           	
 10730  0800                     l18712:	
 10731                           ;dac.c: 17: DACCON1=0x00;
 10732  0800  0022               	movlb 2	; select bank2
 10733  0801  0199               	clrf	(281)^0100h	;volatile
 10734                           	line	18
 10735                           	
 10736  0802                     l13024:	
 10737  0802  0008               	return
 10738                           	opt stack 0
 10739                           GLOBAL	__end_of_disableDAC
 10740  0803                     	__end_of_disableDAC:
 10741 ;; =============== function _disableDAC ends ============
 10742                           
 10743                           	signat	_disableDAC,88
 10744                           	global	_disablePWM
 10745                           psect	text1324,local,class=CODE,delta=2
 10746                           global __ptext1324
 10747  14C8                     __ptext1324:
 10748                           
 10749 ;; *************** function _disablePWM *****************
 10750 ;; Defined at:
 10751 ;;		line 75 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;		None
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;		None
 10756 ;; Return value:  Size  Location     Type
 10757 ;;		None               void
 10758 ;; Registers used:
 10759 ;;		None
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10769 ;;Total ram usage:        0 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:    1
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_UARTworker
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           psect	text1324
 10779                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\pwm.c"
 10780                           	line	75
 10781                           	global	__size_of_disablePWM
 10782  0005                     	__size_of_disablePWM	equ	__end_of_disablePWM-_disablePWM
 10783                           	
 10784  14C8                     _disablePWM:	
 10785                           	opt	stack 13
 10786                           ; Regs used in _disablePWM: []
 10787                           	line	76
 10788                           	
 10789  14C8                     l18710:	
 10790                           ;pwm.c: 76: TRISAbits.TRISA5=1;
 10791  14C8  0021               	movlb 1	; select bank1
 10792  14C9  168C               	bsf	(140)^080h,5	;volatile
 10793                           	line	77
 10794                           ;pwm.c: 77: T2CONbits.TMR2ON =0;
 10795  14CA  0020               	movlb 0	; select bank0
 10796  14CB  111C               	bcf	(28),2	;volatile
 10797                           	line	78
 10798                           	
 10799  14CC                     l14601:	
 10800  14CC  0008               	return
 10801                           	opt stack 0
 10802                           GLOBAL	__end_of_disablePWM
 10803  14CD                     	__end_of_disablePWM:
 10804 ;; =============== function _disablePWM ends ============
 10805                           
 10806                           	signat	_disablePWM,88
 10807                           	global	_UARTread
 10808                           psect	text1325,local,class=CODE,delta=2
 10809                           global __ptext1325
 10810  153F                     __ptext1325:
 10811                           
 10812 ;; *************** function _UARTread *****************
 10813 ;; Defined at:
 10814 ;;		line 258 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;		None
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;  temp            1    4[COMMON] unsigned char 
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      unsigned char 
 10821 ;; Registers used:
 10822 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10832 ;;Total ram usage:        2 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:    1
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_UARTworker
 10839 ;;		_UARTcharFromString
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           psect	text1325
 10843                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 10844                           	line	258
 10845                           	global	__size_of_UARTread
 10846  0014                     	__size_of_UARTread	equ	__end_of_UARTread-_UARTread
 10847                           	
 10848  153F                     _UARTread:	
 10849                           	opt	stack 12
 10850                           ; Regs used in _UARTread: [wreg+fsr1l-status,0]
 10851                           	line	265
 10852                           	
 10853  153F                     l18702:	
 10854                           ;uart.c: 259: unsigned char temp;
 10855                           ;uart.c: 265: rtail++;
 10856  153F  3001               	movlw	(01h)
 10857  1540  00F3               	movwf	(??_UARTread+0)+0
 10858  1541  0873               	movf	(??_UARTread+0)+0,w
 10859  1542  07FA               	addwf	(_rtail),f	;volatile
 10860                           	line	266
 10861                           ;uart.c: 266: rtail&=(8-1);
 10862  1543  3007               	movlw	(07h)
 10863  1544  00F3               	movwf	(??_UARTread+0)+0
 10864  1545  0873               	movf	(??_UARTread+0)+0,w
 10865  1546  05FA               	andwf	(_rtail),f	;volatile
 10866                           	line	267
 10867                           	
 10868  1547                     l18704:	
 10869                           ;uart.c: 267: temp=ringbuff[rtail];
 10870  1547  087A               	movf	(_rtail),w	;volatile
 10871  1548  0709               	addwf	wreg,w
 10872  1549  3E53               	addlw	_ringbuff&0ffh
 10873  154A  0086               	movwf	fsr1l
 10874  154B  0187               	clrf fsr1h	
 10875                           	
 10876  154C  0801               	movf	indf1,w
 10877  154D  00F3               	movwf	(??_UARTread+0)+0
 10878  154E  0873               	movf	(??_UARTread+0)+0,w
 10879  154F  00F4               	movwf	(UARTread@temp)
 10880                           	line	270
 10881                           	
 10882  1550                     l18706:	
 10883                           ;uart.c: 270: return temp;
 10884  1550  0874               	movf	(UARTread@temp),w
 10885  1551  2D52               	goto	l6695
 10886                           	
 10887  1552                     l18708:	
 10888                           	line	271
 10889                           	
 10890  1552                     l6695:	
 10891  1552  0008               	return
 10892                           	opt stack 0
 10893                           GLOBAL	__end_of_UARTread
 10894  1553                     	__end_of_UARTread:
 10895 ;; =============== function _UARTread ends ============
 10896                           
 10897                           	signat	_UARTread,89
 10898                           	global	_UARTwrite
 10899                           psect	text1326,local,class=CODE,delta=2
 10900                           global __ptext1326
 10901  151F                     __ptext1326:
 10902                           
 10903 ;; *************** function _UARTwrite *****************
 10904 ;; Defined at:
 10905 ;;		line 275 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  c               1    wreg     unsigned char 
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;  c               1    3[COMMON] unsigned char 
 10910 ;; Return value:  Size  Location     Type
 10911 ;;		None               void
 10912 ;; Registers used:
 10913 ;;		wreg
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10923 ;;Total ram usage:        1 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_UARTworker
 10930 ;;		_UARTwriteString
 10931 ;;		_UARTcharFromString
 10932 ;;		_UARTwriteDecimal
 10933 ;;		_teletype
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           psect	text1326
 10937                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 10938                           	line	275
 10939                           	global	__size_of_UARTwrite
 10940  000F                     	__size_of_UARTwrite	equ	__end_of_UARTwrite-_UARTwrite
 10941                           	
 10942  151F                     _UARTwrite:	
 10943                           	opt	stack 12
 10944                           ; Regs used in _UARTwrite: [wreg]
 10945                           ;UARTwrite@c stored from wreg
 10946  151F  00F3               	movwf	(UARTwrite@c)
 10947                           	line	276
 10948                           	
 10949  1520                     l18696:	
 10950                           ;uart.c: 276: RC3=1;;
 10951  1520  0020               	movlb 0	; select bank0
 10952  1521  158E               	bsf	(115/8),(115)&7
 10953                           	line	278
 10954                           ;uart.c: 278: while(!TRMT);
 10955  1522  2D23               	goto	l6698
 10956                           	
 10957  1523                     l6699:	
 10958                           	
 10959  1523                     l6698:	
 10960  1523  0023               	movlb 3	; select bank3
 10961  1524  1C9E               	btfss	(3313/8)^0180h,(3313)&7
 10962  1525  2D27               	goto	u3481
 10963  1526  2D28               	goto	u3480
 10964  1527                     u3481:
 10965  1527  2D23               	goto	l6698
 10966  1528                     u3480:
 10967  1528  2D29               	goto	l18698
 10968                           	
 10969  1529                     l6700:	
 10970                           	line	280
 10971                           	
 10972  1529                     l18698:	
 10973                           ;uart.c: 280: TXREG=c;
 10974  1529  0873               	movf	(UARTwrite@c),w
 10975  152A  009A               	movwf	(410)^0180h	;volatile
 10976                           	line	282
 10977                           	
 10978  152B                     l18700:	
 10979                           ;uart.c: 282: RC3=0;;
 10980  152B  0020               	movlb 0	; select bank0
 10981  152C  118E               	bcf	(115/8),(115)&7
 10982                           	line	283
 10983                           	
 10984  152D                     l6701:	
 10985  152D  0008               	return
 10986                           	opt stack 0
 10987                           GLOBAL	__end_of_UARTwrite
 10988  152E                     	__end_of_UARTwrite:
 10989 ;; =============== function _UARTwrite ends ============
 10990                           
 10991                           	signat	_UARTwrite,4216
 10992                           	global	_getADC
 10993                           psect	text1327,local,class=CODE,delta=2
 10994                           global __ptext1327
 10995  0A03                     __ptext1327:
 10996                           
 10997 ;; *************** function _getADC *****************
 10998 ;; Defined at:
 10999 ;;		line 16 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  adc             1    wreg     unsigned char 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  adc             1    3[BANK0 ] unsigned char 
 11004 ;;  i               2    1[BANK0 ] int 
 11005 ;;  temp            1    0[BANK0 ] unsigned char 
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  2    3[COMMON] unsigned int 
 11008 ;; Registers used:
 11009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11016 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11017 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11018 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11019 ;;Total ram usage:        9 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    1
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_SPIADCworker
 11026 ;;		_UARTworker
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           psect	text1327
 11030                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11031                           	line	16
 11032                           	global	__size_of_getADC
 11033  008A                     	__size_of_getADC	equ	__end_of_getADC-_getADC
 11034                           	
 11035  0A03                     _getADC:	
 11036                           	opt	stack 13
 11037                           ; Regs used in _getADC: [wreg-fsr0h+status,2+status,0+btemp+1]
 11038                           ;getADC@adc stored from wreg
 11039  0A03  0020               	movlb 0	; select bank0
 11040  0A04  00BD               	movwf	(getADC@adc)
 11041                           	line	19
 11042                           	
 11043  0A05                     l18656:	
 11044                           ;adc.c: 17: unsigned char temp;
 11045                           ;adc.c: 18: int i;
 11046                           ;adc.c: 19: switch (adc)
 11047  0A05  2A1F               	goto	l18672
 11048                           	line	21
 11049                           ;adc.c: 20: {
 11050                           ;adc.c: 21: case 0:
 11051                           	
 11052  0A06                     l11438:	
 11053                           	line	22
 11054                           	
 11055  0A06                     l18658:	
 11056                           ;adc.c: 22: adc=3;
 11057  0A06  3003               	movlw	(03h)
 11058  0A07  00F5               	movwf	(??_getADC+0)+0
 11059  0A08  0875               	movf	(??_getADC+0)+0,w
 11060  0A09  00BD               	movwf	(getADC@adc)
 11061                           	line	23
 11062                           ;adc.c: 23: break;
 11063  0A0A  2A2D               	goto	l18674
 11064                           	line	24
 11065                           ;adc.c: 24: case 1:
 11066                           	
 11067  0A0B                     l11440:	
 11068                           	line	25
 11069                           	
 11070  0A0B                     l18660:	
 11071                           ;adc.c: 25: adc=8;
 11072  0A0B  3008               	movlw	(08h)
 11073  0A0C  00F5               	movwf	(??_getADC+0)+0
 11074  0A0D  0875               	movf	(??_getADC+0)+0,w
 11075  0A0E  00BD               	movwf	(getADC@adc)
 11076                           	line	26
 11077                           ;adc.c: 26: break;
 11078  0A0F  2A2D               	goto	l18674
 11079                           	line	27
 11080                           ;adc.c: 27: case 2:
 11081                           	
 11082  0A10                     l11441:	
 11083                           	line	28
 11084                           	
 11085  0A10                     l18662:	
 11086                           ;adc.c: 28: adc =9;
 11087  0A10  3009               	movlw	(09h)
 11088  0A11  00F5               	movwf	(??_getADC+0)+0
 11089  0A12  0875               	movf	(??_getADC+0)+0,w
 11090  0A13  00BD               	movwf	(getADC@adc)
 11091                           	line	29
 11092                           ;adc.c: 29: break;
 11093  0A14  2A2D               	goto	l18674
 11094                           	line	30
 11095                           ;adc.c: 30: case 3:
 11096                           	
 11097  0A15                     l11442:	
 11098                           	line	31
 11099                           	
 11100  0A15                     l18664:	
 11101                           ;adc.c: 31: adc=0b11101;
 11102  0A15  301D               	movlw	(01Dh)
 11103  0A16  00F5               	movwf	(??_getADC+0)+0
 11104  0A17  0875               	movf	(??_getADC+0)+0,w
 11105  0A18  00BD               	movwf	(getADC@adc)
 11106                           	line	32
 11107                           ;adc.c: 32: break;
 11108  0A19  2A2D               	goto	l18674
 11109                           	line	33
 11110                           ;adc.c: 33: default:
 11111                           	
 11112  0A1A                     l11443:	
 11113                           	line	34
 11114                           	
 11115  0A1A                     l18666:	
 11116                           ;adc.c: 34: return 0;
 11117  0A1A  01F3               	clrf	(?_getADC)
 11118  0A1B  01F4               	clrf	(?_getADC+1)
 11119  0A1C  2A8C               	goto	l11444
 11120                           	
 11121  0A1D                     l18668:	
 11122  0A1D  2A8C               	goto	l11444
 11123                           	line	35
 11124                           	
 11125  0A1E                     l18670:	
 11126                           ;adc.c: 35: }
 11127  0A1E  2A2D               	goto	l18674
 11128                           	line	19
 11129                           	
 11130  0A1F                     l11437:	
 11131                           	
 11132  0A1F                     l18672:	
 11133  0A1F  083D               	movf	(getADC@adc),w
 11134                           	; Switch size 1, requested type "space"
 11135                           ; Number of cases is 4, Range of values is 0 to 3
 11136                           ; switch strategies available:
 11137                           ; Name         Instructions Cycles
 11138                           ; simple_byte           13     7 (average)
 11139                           ; direct_byte           14     6 (fixed)
 11140                           ; jumptable            260     6 (fixed)
 11141                           ; rangetable             8     4 (fixed)
 11142                           ; spacedrange           13     6 (fixed)
 11143                           ; locatedrange           4     3 (fixed)
 11144                           ;	Chosen strategy is simple_byte
 11145                           
 11146                           	opt asmopt_off
 11147  0A20  3A00               	xorlw	0^0	; case 0
 11148  0A21  1903               	skipnz
 11149  0A22  2A06               	goto	l18658
 11150  0A23  3A01               	xorlw	1^0	; case 1
 11151  0A24  1903               	skipnz
 11152  0A25  2A0B               	goto	l18660
 11153  0A26  3A03               	xorlw	2^1	; case 2
 11154  0A27  1903               	skipnz
 11155  0A28  2A10               	goto	l18662
 11156  0A29  3A01               	xorlw	3^2	; case 3
 11157  0A2A  1903               	skipnz
 11158  0A2B  2A15               	goto	l18664
 11159  0A2C  2A1A               	goto	l18666
 11160                           	opt asmopt_on
 11161                           
 11162                           	line	35
 11163                           	
 11164  0A2D                     l11439:	
 11165                           	line	38
 11166                           	
 11167  0A2D                     l18674:	
 11168                           ;adc.c: 38: ADCON1=0b11000000;
 11169  0A2D  30C0               	movlw	(0C0h)
 11170  0A2E  0021               	movlb 1	; select bank1
 11171  0A2F  009E               	movwf	(158)^080h	;volatile
 11172                           	line	39
 11173                           	
 11174  0A30                     l18676:	
 11175                           ;adc.c: 39: adc&=0x1F;
 11176  0A30  301F               	movlw	(01Fh)
 11177  0A31  00F5               	movwf	(??_getADC+0)+0
 11178  0A32  0875               	movf	(??_getADC+0)+0,w
 11179  0A33  0020               	movlb 0	; select bank0
 11180  0A34  05BD               	andwf	(getADC@adc),f
 11181                           	line	40
 11182                           	
 11183  0A35                     l18678:	
 11184                           ;adc.c: 40: ADCON0=0x01|(adc<<2);
 11185  0A35  083D               	movf	(getADC@adc),w
 11186  0A36  00F5               	movwf	(??_getADC+0)+0
 11187  0A37  3001               	movlw	(02h)-1
 11188  0A38                     u3425:
 11189  0A38  35F5               	lslf	(??_getADC+0)+0,f
 11190  0A39  3EFF               	addlw	-1
 11191  0A3A  1D03               	skipz
 11192  0A3B  2A38               	goto	u3425
 11193  0A3C  3575               	lslf	(??_getADC+0)+0,w
 11194  0A3D  3801               	iorlw	01h
 11195  0A3E  0021               	movlb 1	; select bank1
 11196  0A3F  009D               	movwf	(157)^080h	;volatile
 11197                           	line	42
 11198                           	
 11199  0A40                     l18680:	
 11200                           ;adc.c: 42: for(i=0; i<4; i++) asm("nop");
 11201  0A40  0020               	movlb 0	; select bank0
 11202  0A41  01BB               	clrf	(getADC@i)
 11203  0A42  01BC               	clrf	(getADC@i+1)
 11204                           	
 11205  0A43                     l18682:	
 11206  0A43  083C               	movf	(getADC@i+1),w
 11207  0A44  3A80               	xorlw	80h
 11208  0A45  00FF               	movwf	btemp+1
 11209  0A46  3080               	movlw	(high(04h))^80h
 11210  0A47  027F               	subwf	btemp+1,w
 11211  0A48  1D03               	skipz
 11212  0A49  2A4C               	goto	u3435
 11213  0A4A  3004               	movlw	low(04h)
 11214  0A4B  023B               	subwf	(getADC@i),w
 11215  0A4C                     u3435:
 11216                           
 11217  0A4C  1C03               	skipc
 11218  0A4D  2A4F               	goto	u3431
 11219  0A4E  2A50               	goto	u3430
 11220  0A4F                     u3431:
 11221  0A4F  2A52               	goto	l11445
 11222  0A50                     u3430:
 11223  0A50  2A65               	goto	l11446
 11224                           	
 11225  0A51                     l18684:	
 11226  0A51  2A65               	goto	l11446
 11227                           	
 11228  0A52                     l11445:	
 11229                           # 42 "C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11230  0A52  0000               nop ;#
 11231                           psect	text1327
 11232                           	
 11233  0A53                     l18686:	
 11234  0A53  3001               	movlw	low(01h)
 11235  0A54  0020               	movlb 0	; select bank0
 11236  0A55  07BB               	addwf	(getADC@i),f
 11237  0A56  3000               	movlw	high(01h)
 11238  0A57  3DBC               	addwfc	(getADC@i+1),f
 11239                           	
 11240  0A58                     l18688:	
 11241  0A58  083C               	movf	(getADC@i+1),w
 11242  0A59  3A80               	xorlw	80h
 11243  0A5A  00FF               	movwf	btemp+1
 11244  0A5B  3080               	movlw	(high(04h))^80h
 11245  0A5C  027F               	subwf	btemp+1,w
 11246  0A5D  1D03               	skipz
 11247  0A5E  2A61               	goto	u3445
 11248  0A5F  3004               	movlw	low(04h)
 11249  0A60  023B               	subwf	(getADC@i),w
 11250  0A61                     u3445:
 11251                           
 11252  0A61  1C03               	skipc
 11253  0A62  2A64               	goto	u3441
 11254  0A63  2A65               	goto	u3440
 11255  0A64                     u3441:
 11256  0A64  2A52               	goto	l11445
 11257  0A65                     u3440:
 11258                           	
 11259  0A65                     l11446:	
 11260                           	line	44
 11261                           ;adc.c: 44: ADCON0bits.ADGO=1;
 11262  0A65  0021               	movlb 1	; select bank1
 11263  0A66  149D               	bsf	(157)^080h,1	;volatile
 11264                           	line	45
 11265                           ;adc.c: 45: while(ADCON0bits.ADGO);
 11266  0A67  2A68               	goto	l11447
 11267                           	
 11268  0A68                     l11448:	
 11269                           	
 11270  0A68                     l11447:	
 11271  0A68  189D               	btfsc	(157)^080h,1	;volatile
 11272  0A69  2A6B               	goto	u3451
 11273  0A6A  2A6C               	goto	u3450
 11274  0A6B                     u3451:
 11275  0A6B  2A68               	goto	l11447
 11276  0A6C                     u3450:
 11277  0A6C  2A6D               	goto	l18690
 11278                           	
 11279  0A6D                     l11449:	
 11280                           	line	47
 11281                           	
 11282  0A6D                     l18690:	
 11283                           ;adc.c: 47: ADCON0&=0xFE;
 11284  0A6D  30FE               	movlw	(0FEh)
 11285  0A6E  00F5               	movwf	(??_getADC+0)+0
 11286  0A6F  0875               	movf	(??_getADC+0)+0,w
 11287  0A70  059D               	andwf	(157)^080h,f	;volatile
 11288                           	line	48
 11289                           ;adc.c: 48: temp = (ADRESH<<6)|(ADRESL>>2);
 11290  0A71  081B               	movf	(155)^080h,w	;volatile
 11291  0A72  00F5               	movwf	(??_getADC+0)+0
 11292  0A73  3002               	movlw	02h
 11293  0A74                     u3465:
 11294  0A74  36F5               	lsrf	(??_getADC+0)+0,f
 11295  0A75  0B89               	decfsz	wreg,f
 11296  0A76  2A74               	goto	u3465
 11297  0A77  081C               	movf	(156)^080h,w	;volatile
 11298  0A78  00F6               	movwf	(??_getADC+1)+0
 11299  0A79  3005               	movlw	(06h)-1
 11300  0A7A                     u3475:
 11301  0A7A  35F6               	lslf	(??_getADC+1)+0,f
 11302  0A7B  3EFF               	addlw	-1
 11303  0A7C  1D03               	skipz
 11304  0A7D  2A7A               	goto	u3475
 11305  0A7E  3576               	lslf	(??_getADC+1)+0,w
 11306  0A7F  0475               	iorwf	0+(??_getADC+0)+0,w
 11307  0A80  00F7               	movwf	(??_getADC+2)+0
 11308  0A81  0877               	movf	(??_getADC+2)+0,w
 11309  0A82  0020               	movlb 0	; select bank0
 11310  0A83  00BA               	movwf	(getADC@temp)
 11311                           	line	49
 11312                           	
 11313  0A84                     l18692:	
 11314                           ;adc.c: 49: return temp;
 11315  0A84  083A               	movf	(getADC@temp),w
 11316  0A85  00F5               	movwf	(??_getADC+0)+0
 11317  0A86  01F6               	clrf	(??_getADC+0)+0+1
 11318  0A87  0875               	movf	0+(??_getADC+0)+0,w
 11319  0A88  00F3               	movwf	(?_getADC)
 11320  0A89  0876               	movf	1+(??_getADC+0)+0,w
 11321  0A8A  00F4               	movwf	(?_getADC+1)
 11322  0A8B  2A8C               	goto	l11444
 11323                           	
 11324  0A8C                     l18694:	
 11325                           	line	50
 11326                           	
 11327  0A8C                     l11444:	
 11328  0A8C  0008               	return
 11329                           	opt stack 0
 11330                           GLOBAL	__end_of_getADC
 11331  0A8D                     	__end_of_getADC:
 11332 ;; =============== function _getADC ends ============
 11333                           
 11334                           	signat	_getADC,4218
 11335                           	global	_setDAC
 11336                           psect	text1328,local,class=CODE,delta=2
 11337                           global __ptext1328
 11338  14CD                     __ptext1328:
 11339                           
 11340 ;; *************** function _setDAC *****************
 11341 ;; Defined at:
 11342 ;;		line 21 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;  dac             1    wreg     unsigned char 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  dac             1    3[COMMON] unsigned char 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;		None               void
 11349 ;; Registers used:
 11350 ;;		wreg, status,2
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11360 ;;Total ram usage:        1 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    1
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_I2CDACworker
 11367 ;;		_SPIDACworker
 11368 ;;		_UARTworker
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           psect	text1328
 11372                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 11373                           	line	21
 11374                           	global	__size_of_setDAC
 11375  0006                     	__size_of_setDAC	equ	__end_of_setDAC-_setDAC
 11376                           	
 11377  14CD                     _setDAC:	
 11378                           	opt	stack 13
 11379                           ; Regs used in _setDAC: [wreg+status,2]
 11380                           ;setDAC@dac stored from wreg
 11381  14CD  00F3               	movwf	(setDAC@dac)
 11382                           	line	22
 11383                           	
 11384  14CE                     l18648:	
 11385                           ;dac.c: 22: DACCON1=dac&0x1F;
 11386  14CE  0873               	movf	(setDAC@dac),w
 11387  14CF  391F               	andlw	01Fh
 11388  14D0  0022               	movlb 2	; select bank2
 11389  14D1  0099               	movwf	(281)^0100h	;volatile
 11390                           	line	23
 11391                           	
 11392  14D2                     l13027:	
 11393  14D2  0008               	return
 11394                           	opt stack 0
 11395                           GLOBAL	__end_of_setDAC
 11396  14D3                     	__end_of_setDAC:
 11397 ;; =============== function _setDAC ends ============
 11398                           
 11399                           	signat	_setDAC,4216
 11400                           	global	_enableDAC
 11401                           psect	text1329,local,class=CODE,delta=2
 11402                           global __ptext1329
 11403  14C4                     __ptext1329:
 11404                           
 11405 ;; *************** function _enableDAC *****************
 11406 ;; Defined at:
 11407 ;;		line 8 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;		None               void
 11414 ;; Registers used:
 11415 ;;		wreg
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11425 ;;Total ram usage:        0 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    1
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_I2CDACworker
 11432 ;;		_SPIDACworker
 11433 ;;		_UARTworker
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           psect	text1329
 11437                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\dac.c"
 11438                           	line	8
 11439                           	global	__size_of_enableDAC
 11440  0004                     	__size_of_enableDAC	equ	__end_of_enableDAC-_enableDAC
 11441                           	
 11442  14C4                     _enableDAC:	
 11443                           	opt	stack 13
 11444                           ; Regs used in _enableDAC: [wreg]
 11445                           	line	9
 11446                           	
 11447  14C4                     l18646:	
 11448                           ;dac.c: 9: DACCON0=0b11100000;
 11449  14C4  30E0               	movlw	(0E0h)
 11450  14C5  0022               	movlb 2	; select bank2
 11451  14C6  0098               	movwf	(280)^0100h	;volatile
 11452                           	line	13
 11453                           	
 11454  14C7                     l13021:	
 11455  14C7  0008               	return
 11456                           	opt stack 0
 11457                           GLOBAL	__end_of_enableDAC
 11458  14C8                     	__end_of_enableDAC:
 11459 ;; =============== function _enableDAC ends ============
 11460                           
 11461                           	signat	_enableDAC,88
 11462                           	global	_startADC16
 11463                           psect	text1330,local,class=CODE,delta=2
 11464                           global __ptext1330
 11465  1747                     __ptext1330:
 11466                           
 11467 ;; *************** function _startADC16 *****************
 11468 ;; Defined at:
 11469 ;;		line 60 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  adc             1    wreg     unsigned char 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  adc             1    6[COMMON] unsigned char 
 11474 ;;  i               2    4[COMMON] int 
 11475 ;;  temp            1    0        unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2  3223[COMMON] unsigned int 
 11478 ;; Registers used:
 11479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11489 ;;Total ram usage:        4 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_I2CADCworker
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           psect	text1330
 11499                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11500                           	line	60
 11501                           	global	__size_of_startADC16
 11502  005C                     	__size_of_startADC16	equ	__end_of_startADC16-_startADC16
 11503                           	
 11504  1747                     _startADC16:	
 11505                           	opt	stack 13
 11506                           ; Regs used in _startADC16: [wreg-fsr0h+status,2+status,0+btemp+1]
 11507                           ;startADC16@adc stored from wreg
 11508  1747  00F6               	movwf	(startADC16@adc)
 11509                           	line	63
 11510                           	
 11511  1748                     l18616:	
 11512                           ;adc.c: 61: unsigned char temp;
 11513                           ;adc.c: 62: int i;
 11514                           ;adc.c: 63: switch (adc)
 11515  1748  2F5F               	goto	l18628
 11516                           	line	65
 11517                           ;adc.c: 64: {
 11518                           ;adc.c: 65: case 0:
 11519                           	
 11520  1749                     l11456:	
 11521                           	line	66
 11522                           	
 11523  1749                     l18618:	
 11524                           ;adc.c: 66: adc=3;
 11525  1749  3003               	movlw	(03h)
 11526  174A  00F3               	movwf	(??_startADC16+0)+0
 11527  174B  0873               	movf	(??_startADC16+0)+0,w
 11528  174C  00F6               	movwf	(startADC16@adc)
 11529                           	line	67
 11530                           ;adc.c: 67: break;
 11531  174D  2F6D               	goto	l18630
 11532                           	line	68
 11533                           ;adc.c: 68: case 1:
 11534                           	
 11535  174E                     l11458:	
 11536                           	line	69
 11537                           	
 11538  174E                     l18620:	
 11539                           ;adc.c: 69: adc=8;
 11540  174E  3008               	movlw	(08h)
 11541  174F  00F3               	movwf	(??_startADC16+0)+0
 11542  1750  0873               	movf	(??_startADC16+0)+0,w
 11543  1751  00F6               	movwf	(startADC16@adc)
 11544                           	line	70
 11545                           ;adc.c: 70: break;
 11546  1752  2F6D               	goto	l18630
 11547                           	line	71
 11548                           ;adc.c: 71: case 2:
 11549                           	
 11550  1753                     l11459:	
 11551                           	line	72
 11552                           	
 11553  1753                     l18622:	
 11554                           ;adc.c: 72: adc =9;
 11555  1753  3009               	movlw	(09h)
 11556  1754  00F3               	movwf	(??_startADC16+0)+0
 11557  1755  0873               	movf	(??_startADC16+0)+0,w
 11558  1756  00F6               	movwf	(startADC16@adc)
 11559                           	line	73
 11560                           ;adc.c: 73: break;
 11561  1757  2F6D               	goto	l18630
 11562                           	line	74
 11563                           ;adc.c: 74: case 3:
 11564                           	
 11565  1758                     l11460:	
 11566                           	line	75
 11567                           	
 11568  1758                     l18624:	
 11569                           ;adc.c: 75: adc=0b11101;
 11570  1758  301D               	movlw	(01Dh)
 11571  1759  00F3               	movwf	(??_startADC16+0)+0
 11572  175A  0873               	movf	(??_startADC16+0)+0,w
 11573  175B  00F6               	movwf	(startADC16@adc)
 11574                           	line	76
 11575                           ;adc.c: 76: break;
 11576  175C  2F6D               	goto	l18630
 11577                           	line	77
 11578                           ;adc.c: 77: default:
 11579                           	
 11580  175D                     l11461:	
 11581                           	line	78
 11582                           ;adc.c: 78: return 0;
 11583                           ;	Return value of _startADC16 is never used
 11584  175D  2FA2               	goto	l11462
 11585                           	line	79
 11586                           	
 11587  175E                     l18626:	
 11588                           ;adc.c: 79: }
 11589  175E  2F6D               	goto	l18630
 11590                           	line	63
 11591                           	
 11592  175F                     l11455:	
 11593                           	
 11594  175F                     l18628:	
 11595  175F  0876               	movf	(startADC16@adc),w
 11596                           	; Switch size 1, requested type "space"
 11597                           ; Number of cases is 4, Range of values is 0 to 3
 11598                           ; switch strategies available:
 11599                           ; Name         Instructions Cycles
 11600                           ; simple_byte           13     7 (average)
 11601                           ; direct_byte           14     6 (fixed)
 11602                           ; jumptable            260     6 (fixed)
 11603                           ; rangetable             8     4 (fixed)
 11604                           ; spacedrange           13     6 (fixed)
 11605                           ; locatedrange           4     3 (fixed)
 11606                           ;	Chosen strategy is simple_byte
 11607                           
 11608                           	opt asmopt_off
 11609  1760  3A00               	xorlw	0^0	; case 0
 11610  1761  1903               	skipnz
 11611  1762  2F49               	goto	l18618
 11612  1763  3A01               	xorlw	1^0	; case 1
 11613  1764  1903               	skipnz
 11614  1765  2F4E               	goto	l18620
 11615  1766  3A03               	xorlw	2^1	; case 2
 11616  1767  1903               	skipnz
 11617  1768  2F53               	goto	l18622
 11618  1769  3A01               	xorlw	3^2	; case 3
 11619  176A  1903               	skipnz
 11620  176B  2F58               	goto	l18624
 11621  176C  2FA2               	goto	l11462
 11622                           	opt asmopt_on
 11623                           
 11624                           	line	79
 11625                           	
 11626  176D                     l11457:	
 11627                           	line	82
 11628                           	
 11629  176D                     l18630:	
 11630                           ;adc.c: 82: ADCON1=0b11000000;
 11631  176D  30C0               	movlw	(0C0h)
 11632  176E  0021               	movlb 1	; select bank1
 11633  176F  009E               	movwf	(158)^080h	;volatile
 11634                           	line	83
 11635                           	
 11636  1770                     l18632:	
 11637                           ;adc.c: 83: adc&=0x1F;
 11638  1770  301F               	movlw	(01Fh)
 11639  1771  00F3               	movwf	(??_startADC16+0)+0
 11640  1772  0873               	movf	(??_startADC16+0)+0,w
 11641  1773  05F6               	andwf	(startADC16@adc),f
 11642                           	line	84
 11643                           	
 11644  1774                     l18634:	
 11645                           ;adc.c: 84: ADCON0=0x01|(adc<<2);
 11646  1774  0876               	movf	(startADC16@adc),w
 11647  1775  00F3               	movwf	(??_startADC16+0)+0
 11648  1776  3001               	movlw	(02h)-1
 11649  1777                     u3385:
 11650  1777  35F3               	lslf	(??_startADC16+0)+0,f
 11651  1778  3EFF               	addlw	-1
 11652  1779  1D03               	skipz
 11653  177A  2F77               	goto	u3385
 11654  177B  3573               	lslf	(??_startADC16+0)+0,w
 11655  177C  3801               	iorlw	01h
 11656  177D  009D               	movwf	(157)^080h	;volatile
 11657                           	line	86
 11658                           	
 11659  177E                     l18636:	
 11660                           ;adc.c: 86: for(i=0; i<4; i++) asm("nop");
 11661  177E  01F4               	clrf	(startADC16@i)
 11662  177F  01F5               	clrf	(startADC16@i+1)
 11663                           	
 11664  1780                     l18638:	
 11665  1780  0875               	movf	(startADC16@i+1),w
 11666  1781  3A80               	xorlw	80h
 11667  1782  00FF               	movwf	btemp+1
 11668  1783  3080               	movlw	(high(04h))^80h
 11669  1784  027F               	subwf	btemp+1,w
 11670  1785  1D03               	skipz
 11671  1786  2F89               	goto	u3395
 11672  1787  3004               	movlw	low(04h)
 11673  1788  0274               	subwf	(startADC16@i),w
 11674  1789                     u3395:
 11675                           
 11676  1789  1C03               	skipc
 11677  178A  2F8C               	goto	u3391
 11678  178B  2F8D               	goto	u3390
 11679  178C                     u3391:
 11680  178C  2F8F               	goto	l11463
 11681  178D                     u3390:
 11682  178D  2FA2               	goto	l11462
 11683                           	
 11684  178E                     l18640:	
 11685  178E  2FA2               	goto	l11462
 11686                           	
 11687  178F                     l11463:	
 11688                           # 86 "C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11689  178F  0000               nop ;#
 11690                           psect	text1330
 11691                           	
 11692  1790                     l18642:	
 11693  1790  3001               	movlw	low(01h)
 11694  1791  07F4               	addwf	(startADC16@i),f
 11695  1792  3000               	movlw	high(01h)
 11696  1793  3DF5               	addwfc	(startADC16@i+1),f
 11697                           	
 11698  1794                     l18644:	
 11699  1794  0875               	movf	(startADC16@i+1),w
 11700  1795  3A80               	xorlw	80h
 11701  1796  00FF               	movwf	btemp+1
 11702  1797  3080               	movlw	(high(04h))^80h
 11703  1798  027F               	subwf	btemp+1,w
 11704  1799  1D03               	skipz
 11705  179A  2F9D               	goto	u3405
 11706  179B  3004               	movlw	low(04h)
 11707  179C  0274               	subwf	(startADC16@i),w
 11708  179D                     u3405:
 11709                           
 11710  179D  1C03               	skipc
 11711  179E  2FA0               	goto	u3401
 11712  179F  2FA1               	goto	u3400
 11713  17A0                     u3401:
 11714  17A0  2F8F               	goto	l11463
 11715  17A1                     u3400:
 11716  17A1  2FA2               	goto	l11462
 11717                           	
 11718  17A2                     l11464:	
 11719                           	line	87
 11720                           	
 11721  17A2                     l11462:	
 11722  17A2  0008               	return
 11723                           	opt stack 0
 11724                           GLOBAL	__end_of_startADC16
 11725  17A3                     	__end_of_startADC16:
 11726 ;; =============== function _startADC16 ends ============
 11727                           
 11728                           	signat	_startADC16,4218
 11729                           	global	_I2CWrite
 11730                           psect	text1331,local,class=CODE,delta=2
 11731                           global __ptext1331
 11732  14EF                     __ptext1331:
 11733                           
 11734 ;; *************** function _I2CWrite *****************
 11735 ;; Defined at:
 11736 ;;		line 303 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  c               1    wreg     unsigned char 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;  c               1    3[COMMON] unsigned char 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;		None               void
 11743 ;; Registers used:
 11744 ;;		wreg
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11754 ;;Total ram usage:        1 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    1
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_I2CADCworker
 11761 ;;		_I2CDACworker
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           psect	text1331
 11765                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
 11766                           	line	303
 11767                           	global	__size_of_I2CWrite
 11768  000B                     	__size_of_I2CWrite	equ	__end_of_I2CWrite-_I2CWrite
 11769                           	
 11770  14EF                     _I2CWrite:	
 11771                           	opt	stack 13
 11772                           ; Regs used in _I2CWrite: [wreg]
 11773                           ;I2CWrite@c stored from wreg
 11774                           	line	306
 11775  14EF  00F3               	movwf	(I2CWrite@c)
 11776                           	line	304
 11777                           ;i2c.c: 304: do
 11778                           	
 11779  14F0                     l3330:	
 11780                           	line	306
 11781                           ;i2c.c: 305: {
 11782                           ;i2c.c: 306: SSP2CON1bits.WCOL=0;
 11783  14F0  0024               	movlb 4	; select bank4
 11784  14F1  139D               	bcf	(541)^0200h,7	;volatile
 11785                           	line	307
 11786                           	
 11787  14F2                     l18612:	
 11788                           ;i2c.c: 307: SSP2BUF=c;
 11789  14F2  0873               	movf	(I2CWrite@c),w
 11790  14F3  0099               	movwf	(537)^0200h	;volatile
 11791                           	line	308
 11792                           	
 11793  14F4                     l18614:	
 11794                           ;i2c.c: 308: } while(SSP2CON1bits.WCOL);
 11795  14F4  1B9D               	btfsc	(541)^0200h,7	;volatile
 11796  14F5  2CF7               	goto	u3371
 11797  14F6  2CF8               	goto	u3370
 11798  14F7                     u3371:
 11799  14F7  2CF0               	goto	l3330
 11800  14F8                     u3370:
 11801                           	
 11802  14F8                     l3331:	
 11803                           	line	309
 11804                           ;i2c.c: 309: SSP2CON1bits.CKP=1;
 11805  14F8  161D               	bsf	(541)^0200h,4	;volatile
 11806                           	line	310
 11807                           	
 11808  14F9                     l3332:	
 11809  14F9  0008               	return
 11810                           	opt stack 0
 11811                           GLOBAL	__end_of_I2CWrite
 11812  14FA                     	__end_of_I2CWrite:
 11813 ;; =============== function _I2CWrite ends ============
 11814                           
 11815                           	signat	_I2CWrite,4216
 11816                           	global	_enableTS
 11817                           psect	text1332,local,class=CODE,delta=2
 11818                           global __ptext1332
 11819  14D3                     __ptext1332:
 11820                           
 11821 ;; *************** function _enableTS *****************
 11822 ;; Defined at:
 11823 ;;		line 54 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;		None
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;		None
 11828 ;; Return value:  Size  Location     Type
 11829 ;;		None               void
 11830 ;; Registers used:
 11831 ;;		wreg, status,2, status,0
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11841 ;;Total ram usage:        1 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:    1
 11844 ;; This function calls:
 11845 ;;		Nothing
 11846 ;; This function is called by:
 11847 ;;		_I2CADCworker
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           psect	text1332
 11851                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\adc.c"
 11852                           	line	54
 11853                           	global	__size_of_enableTS
 11854  0007                     	__size_of_enableTS	equ	__end_of_enableTS-_enableTS
 11855                           	
 11856  14D3                     _enableTS:	
 11857                           	opt	stack 13
 11858                           ; Regs used in _enableTS: [wreg+status,2+status,0]
 11859                           	line	55
 11860                           	
 11861  14D3                     l18608:	
 11862                           ;adc.c: 55: FVRCON|=0b00100000;
 11863  14D3  0022               	movlb 2	; select bank2
 11864  14D4  1697               	bsf	(279)^0100h+(5/8),(5)&7	;volatile
 11865                           	line	56
 11866                           	
 11867  14D5                     l18610:	
 11868                           ;adc.c: 56: FVRCON&=0b11101111;
 11869  14D5  30EF               	movlw	(0EFh)
 11870  14D6  00F3               	movwf	(??_enableTS+0)+0
 11871  14D7  0873               	movf	(??_enableTS+0)+0,w
 11872  14D8  0597               	andwf	(279)^0100h,f	;volatile
 11873                           	line	57
 11874                           	
 11875  14D9                     l11452:	
 11876  14D9  0008               	return
 11877                           	opt stack 0
 11878                           GLOBAL	__end_of_enableTS
 11879  14DA                     	__end_of_enableTS:
 11880 ;; =============== function _enableTS ends ============
 11881                           
 11882                           	signat	_enableTS,88
 11883                           	global	_EEPROMwrite
 11884                           psect	text1333,local,class=CODE,delta=2
 11885                           global __ptext1333
 11886  1553                     __ptext1333:
 11887                           
 11888 ;; *************** function _EEPROMwrite *****************
 11889 ;; Defined at:
 11890 ;;		line 8 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\eeprom.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;  addr            1    wreg     unsigned char 
 11893 ;;  data            1    7[COMMON] unsigned char 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  addr            1    8[COMMON] unsigned char 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;		None               void
 11898 ;; Registers used:
 11899 ;;		wreg
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11909 ;;Total ram usage:        2 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:    1
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_I2CEEworker
 11916 ;;		_SPIEEworker
 11917 ;;		_UARTworker
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           psect	text1333
 11921                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\eeprom.c"
 11922                           	line	8
 11923                           	global	__size_of_EEPROMwrite
 11924  0017                     	__size_of_EEPROMwrite	equ	__end_of_EEPROMwrite-_EEPROMwrite
 11925                           	
 11926  1553                     _EEPROMwrite:	
 11927                           	opt	stack 13
 11928                           ; Regs used in _EEPROMwrite: [wreg]
 11929                           ;EEPROMwrite@addr stored from wreg
 11930  1553  00F8               	movwf	(EEPROMwrite@addr)
 11931                           	line	9
 11932                           	
 11933  1554                     l18594:	
 11934                           ;eeprom.c: 9: EEADRL=addr;
 11935  1554  0878               	movf	(EEPROMwrite@addr),w
 11936  1555  0023               	movlb 3	; select bank3
 11937  1556  0091               	movwf	(401)^0180h	;volatile
 11938                           	line	10
 11939                           ;eeprom.c: 10: EEDATL=data;
 11940  1557  0877               	movf	(EEPROMwrite@data),w
 11941  1558  0093               	movwf	(403)^0180h	;volatile
 11942                           	line	11
 11943                           	
 11944  1559                     l18596:	
 11945                           ;eeprom.c: 11: EECON1bits.CFGS=0;
 11946  1559  1315               	bcf	(405)^0180h,6	;volatile
 11947                           	line	12
 11948                           	
 11949  155A                     l18598:	
 11950                           ;eeprom.c: 12: EECON1bits.EEPGD=0;
 11951  155A  1395               	bcf	(405)^0180h,7	;volatile
 11952                           	line	13
 11953                           	
 11954  155B                     l18600:	
 11955                           ;eeprom.c: 13: EECON1bits.WREN=1;
 11956  155B  1515               	bsf	(405)^0180h,2	;volatile
 11957                           	line	15
 11958                           	
 11959  155C                     l18602:	
 11960                           ;eeprom.c: 15: GIE=0;
 11961  155C  138B               	bcf	(95/8),(95)&7
 11962                           	line	16
 11963                           ;eeprom.c: 16: EECON2=0x55;
 11964  155D  3055               	movlw	(055h)
 11965  155E  0096               	movwf	(406)^0180h	;volatile
 11966                           	line	17
 11967                           ;eeprom.c: 17: EECON2=0xAA;
 11968  155F  30AA               	movlw	(0AAh)
 11969  1560  0096               	movwf	(406)^0180h	;volatile
 11970                           	line	18
 11971                           	
 11972  1561                     l18604:	
 11973                           ;eeprom.c: 18: EECON1bits.WR=1;
 11974  1561  1495               	bsf	(405)^0180h,1	;volatile
 11975                           	line	19
 11976                           	
 11977  1562                     l18606:	
 11978                           ;eeprom.c: 19: GIE=1;
 11979  1562  178B               	bsf	(95/8),(95)&7
 11980                           	line	20
 11981                           ;eeprom.c: 20: while(EECON1bits.WR);
 11982  1563  2D64               	goto	l9874
 11983                           	
 11984  1564                     l9875:	
 11985                           	
 11986  1564                     l9874:	
 11987  1564  1895               	btfsc	(405)^0180h,1	;volatile
 11988  1565  2D67               	goto	u3361
 11989  1566  2D68               	goto	u3360
 11990  1567                     u3361:
 11991  1567  2D64               	goto	l9874
 11992  1568                     u3360:
 11993  1568  2D69               	goto	l9877
 11994                           	
 11995  1569                     l9876:	
 11996                           	line	21
 11997                           	
 11998  1569                     l9877:	
 11999  1569  0008               	return
 12000                           	opt stack 0
 12001                           GLOBAL	__end_of_EEPROMwrite
 12002  156A                     	__end_of_EEPROMwrite:
 12003 ;; =============== function _EEPROMwrite ends ============
 12004                           
 12005                           	signat	_EEPROMwrite,8312
 12006                           	global	_initUART
 12007                           psect	text1334,local,class=CODE,delta=2
 12008                           global __ptext1334
 12009  152E                     __ptext1334:
 12010                           
 12011 ;; *************** function _initUART *****************
 12012 ;; Defined at:
 12013 ;;		line 17 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;  i               1    0        unsigned char 
 12018 ;; Return value:  Size  Location     Type
 12019 ;;		None               void
 12020 ;; Registers used:
 12021 ;;		wreg, status,2
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    1
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_init
 12038 ;;		_UARTworker
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           psect	text1334
 12042                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\uart.c"
 12043                           	line	17
 12044                           	global	__size_of_initUART
 12045  0011                     	__size_of_initUART	equ	__end_of_initUART-_initUART
 12046                           	
 12047  152E                     _initUART:	
 12048                           	opt	stack 13
 12049                           ; Regs used in _initUART: [wreg+status,2]
 12050                           	line	19
 12051                           	
 12052  152E                     l18562:	
 12053                           ;uart.c: 19: APFCON0|=0x04;
 12054  152E  0022               	movlb 2	; select bank2
 12055  152F  151D               	bsf	(285)^0100h+(2/8),(2)&7	;volatile
 12056                           	line	20
 12057                           ;uart.c: 20: TRISB5=1;
 12058  1530  0021               	movlb 1	; select bank1
 12059  1531  168D               	bsf	(1133/8)^080h,(1133)&7
 12060                           	line	21
 12061                           ;uart.c: 21: TRISC4=0;
 12062  1532  120E               	bcf	(1140/8)^080h,(1140)&7
 12063                           	line	25
 12064                           ;uart.c: 25: BRGH=1;
 12065  1533  0023               	movlb 3	; select bank3
 12066  1534  151E               	bsf	(3314/8)^0180h,(3314)&7
 12067                           	line	26
 12068                           	
 12069  1535                     l18564:	
 12070                           ;uart.c: 26: SPBRGH=0x00;
 12071  1535  019C               	clrf	(412)^0180h	;volatile
 12072                           	line	27
 12073                           	
 12074  1536                     l18566:	
 12075                           ;uart.c: 27: SPBRGL=207;
 12076  1536  30CF               	movlw	(0CFh)
 12077  1537  009B               	movwf	(411)^0180h	;volatile
 12078                           	line	30
 12079                           	
 12080  1538                     l18568:	
 12081                           ;uart.c: 30: SYNC=0;
 12082  1538  121E               	bcf	(3316/8)^0180h,(3316)&7
 12083                           	line	31
 12084                           	
 12085  1539                     l18570:	
 12086                           ;uart.c: 31: SPEN=1;
 12087  1539  179D               	bsf	(3311/8)^0180h,(3311)&7
 12088                           	line	32
 12089                           	
 12090  153A                     l18572:	
 12091                           ;uart.c: 32: TXEN=1;
 12092  153A  169E               	bsf	(3317/8)^0180h,(3317)&7
 12093                           	line	33
 12094                           	
 12095  153B                     l18574:	
 12096                           ;uart.c: 33: CREN=1;
 12097  153B  161D               	bsf	(3308/8)^0180h,(3308)&7
 12098                           	line	48
 12099                           	
 12100  153C                     l18576:	
 12101                           ;uart.c: 48: RC5=1;;
 12102  153C  0020               	movlb 0	; select bank0
 12103  153D  168E               	bsf	(117/8),(117)&7
 12104                           	line	49
 12105                           	
 12106  153E                     l6624:	
 12107  153E  0008               	return
 12108                           	opt stack 0
 12109                           GLOBAL	__end_of_initUART
 12110  153F                     	__end_of_initUART:
 12111 ;; =============== function _initUART ends ============
 12112                           
 12113                           	signat	_initUART,88
 12114                           	global	_initI2C
 12115                           psect	text1335,local,class=CODE,delta=2
 12116                           global __ptext1335
 12117  1512                     __ptext1335:
 12118                           
 12119 ;; *************** function _initI2C *****************
 12120 ;; Defined at:
 12121 ;;		line 15 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;		None
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;		None
 12126 ;; Return value:  Size  Location     Type
 12127 ;;		None               void
 12128 ;; Registers used:
 12129 ;;		wreg, status,2, status,0
 12130 ;; Tracked objects:
 12131 ;;		On entry : 0/0
 12132 ;;		On exit  : 0/0
 12133 ;;		Unchanged: 0/0
 12134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12139 ;;Total ram usage:        1 bytes
 12140 ;; Hardware stack levels used:    1
 12141 ;; Hardware stack levels required when called:    1
 12142 ;; This function calls:
 12143 ;;		Nothing
 12144 ;; This function is called by:
 12145 ;;		_init
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           psect	text1335
 12149                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\i2c.c"
 12150                           	line	15
 12151                           	global	__size_of_initI2C
 12152  000D                     	__size_of_initI2C	equ	__end_of_initI2C-_initI2C
 12153                           	
 12154  1512                     _initI2C:	
 12155                           	opt	stack 13
 12156                           ; Regs used in _initI2C: [wreg+status,2+status,0]
 12157                           	line	18
 12158                           	
 12159  1512                     l18552:	
 12160                           ;i2c.c: 18: SSP2BUF=0x00;
 12161  1512  0024               	movlb 4	; select bank4
 12162  1513  0199               	clrf	(537)^0200h	;volatile
 12163                           	line	19
 12164                           	
 12165  1514                     l18554:	
 12166                           ;i2c.c: 19: SSP2STAT=0x80;
 12167  1514  3080               	movlw	(080h)
 12168  1515  009C               	movwf	(540)^0200h	;volatile
 12169                           	line	20
 12170                           	
 12171  1516                     l18556:	
 12172                           ;i2c.c: 20: SSP2MSK=0xFE;
 12173  1516  30FE               	movlw	(0FEh)
 12174  1517  009B               	movwf	(539)^0200h	;volatile
 12175                           	line	21
 12176                           	
 12177  1518                     l18558:	
 12178                           ;i2c.c: 21: SSP2CON1=0x36;
 12179  1518  3036               	movlw	(036h)
 12180  1519  009D               	movwf	(541)^0200h	;volatile
 12181                           	line	22
 12182                           	
 12183  151A                     l18560:	
 12184                           ;i2c.c: 22: SSP2CON3|=0b11000000;
 12185  151A  30C0               	movlw	(0C0h)
 12186  151B  00F3               	movwf	(??_initI2C+0)+0
 12187  151C  0873               	movf	(??_initI2C+0)+0,w
 12188  151D  049F               	iorwf	(543)^0200h,f	;volatile
 12189                           	line	23
 12190                           	
 12191  151E                     l3240:	
 12192  151E  0008               	return
 12193                           	opt stack 0
 12194                           GLOBAL	__end_of_initI2C
 12195  151F                     	__end_of_initI2C:
 12196 ;; =============== function _initI2C ends ============
 12197                           
 12198                           	signat	_initI2C,88
 12199                           	global	_initSPI
 12200                           psect	text1336,local,class=CODE,delta=2
 12201                           global __ptext1336
 12202  14E4                     __ptext1336:
 12203                           
 12204 ;; *************** function _initSPI *****************
 12205 ;; Defined at:
 12206 ;;		line 11 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;		None               void
 12213 ;; Registers used:
 12214 ;;		wreg, status,2
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12224 ;;Total ram usage:        0 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    1
 12227 ;; This function calls:
 12228 ;;		Nothing
 12229 ;; This function is called by:
 12230 ;;		_init
 12231 ;;		_SPIEEworker
 12232 ;;		_SPIPWMworker
 12233 ;;		_SPIDACworker
 12234 ;;		_SPIADCworker
 12235 ;;		_SPIworker
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           psect	text1336
 12239                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\spi.c"
 12240                           	line	11
 12241                           	global	__size_of_initSPI
 12242  000B                     	__size_of_initSPI	equ	__end_of_initSPI-_initSPI
 12243                           	
 12244  14E4                     _initSPI:	
 12245                           	opt	stack 13
 12246                           ; Regs used in _initSPI: [wreg+status,2]
 12247                           	line	13
 12248                           	
 12249  14E4                     l18544:	
 12250                           ;spi.c: 13: TRISCbits.TRISC1 = 0;
 12251  14E4  0021               	movlb 1	; select bank1
 12252  14E5  108E               	bcf	(142)^080h,1	;volatile
 12253                           	line	14
 12254                           	
 12255  14E6                     l18546:	
 12256                           ;spi.c: 14: SSP2STAT=0x40;
 12257  14E6  3040               	movlw	(040h)
 12258  14E7  0024               	movlb 4	; select bank4
 12259  14E8  009C               	movwf	(540)^0200h	;volatile
 12260                           	line	15
 12261                           ;spi.c: 15: SSP2CON1=0x24;
 12262  14E9  3024               	movlw	(024h)
 12263  14EA  009D               	movwf	(541)^0200h	;volatile
 12264                           	line	16
 12265                           	
 12266  14EB                     l18548:	
 12267                           ;spi.c: 16: SSP2CON3=0x00;
 12268  14EB  019F               	clrf	(543)^0200h	;volatile
 12269                           	line	18
 12270                           	
 12271  14EC                     l18550:	
 12272                           ;spi.c: 18: SSP2BUF=0xAA;
 12273  14EC  30AA               	movlw	(0AAh)
 12274  14ED  0099               	movwf	(537)^0200h	;volatile
 12275                           	line	20
 12276                           	
 12277  14EE                     l4911:	
 12278  14EE  0008               	return
 12279                           	opt stack 0
 12280                           GLOBAL	__end_of_initSPI
 12281  14EF                     	__end_of_initSPI:
 12282 ;; =============== function _initSPI ends ============
 12283                           
 12284                           	signat	_initSPI,88
 12285                           	global	_isEE
 12286                           psect	text1337,local,class=CODE,delta=2
 12287                           global __ptext1337
 12288  14C1                     __ptext1337:
 12289                           
 12290 ;; *************** function _isEE *****************
 12291 ;; Defined at:
 12292 ;;		line 16 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
 12293 ;; Parameters:    Size  Location     Type
 12294 ;;		None
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;		None
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      unsigned char 
 12299 ;; Registers used:
 12300 ;;		wreg
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12310 ;;Total ram usage:        0 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:    1
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		_main
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           psect	text1337
 12320                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\easteregg.c"
 12321                           	line	16
 12322                           	global	__size_of_isEE
 12323  0003                     	__size_of_isEE	equ	__end_of_isEE-_isEE
 12324                           	
 12325  14C1                     _isEE:	
 12326                           	opt	stack 14
 12327                           ; Regs used in _isEE: [wreg]
 12328                           	line	17
 12329                           	
 12330  14C1                     l18540:	
 12331                           ;easteregg.c: 17: return 0;
 12332  14C1  3000               	movlw	(0)
 12333  14C2  2CC3               	goto	l8303
 12334                           	
 12335  14C3                     l18542:	
 12336                           	line	18
 12337                           	
 12338  14C3                     l8303:	
 12339  14C3  0008               	return
 12340                           	opt stack 0
 12341                           GLOBAL	__end_of_isEE
 12342  14C4                     	__end_of_isEE:
 12343 ;; =============== function _isEE ends ============
 12344                           
 12345                           	signat	_isEE,89
 12346                           	global	_EEPROMread
 12347                           psect	text1338,local,class=CODE,delta=2
 12348                           global __ptext1338
 12349  14DA                     __ptext1338:
 12350                           
 12351 ;; *************** function _EEPROMread *****************
 12352 ;; Defined at:
 12353 ;;		line 24 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\eeprom.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  addr            1    wreg     unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  addr            1    3[COMMON] unsigned char 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  1    wreg      unsigned char 
 12360 ;; Registers used:
 12361 ;;		wreg
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12371 ;;Total ram usage:        1 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    1
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		_main
 12378 ;;		_UARTworker
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           psect	text1338
 12382                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\eeprom.c"
 12383                           	line	24
 12384                           	global	__size_of_EEPROMread
 12385  000A                     	__size_of_EEPROMread	equ	__end_of_EEPROMread-_EEPROMread
 12386                           	
 12387  14DA                     _EEPROMread:	
 12388                           	opt	stack 13
 12389                           ; Regs used in _EEPROMread: [wreg]
 12390                           ;EEPROMread@addr stored from wreg
 12391  14DA  00F3               	movwf	(EEPROMread@addr)
 12392                           	line	25
 12393                           	
 12394  14DB                     l18530:	
 12395                           ;eeprom.c: 25: EEADRL=addr;
 12396  14DB  0873               	movf	(EEPROMread@addr),w
 12397  14DC  0023               	movlb 3	; select bank3
 12398  14DD  0091               	movwf	(401)^0180h	;volatile
 12399                           	line	26
 12400                           	
 12401  14DE                     l18532:	
 12402                           ;eeprom.c: 26: EECON1bits.CFGS=0;
 12403  14DE  1315               	bcf	(405)^0180h,6	;volatile
 12404                           	line	27
 12405                           	
 12406  14DF                     l18534:	
 12407                           ;eeprom.c: 27: EECON1bits.EEPGD=0;
 12408  14DF  1395               	bcf	(405)^0180h,7	;volatile
 12409                           	line	28
 12410                           	
 12411  14E0                     l18536:	
 12412                           ;eeprom.c: 28: EECON1bits.RD=1;
 12413  14E0  1415               	bsf	(405)^0180h,0	;volatile
 12414                           	line	30
 12415                           ;eeprom.c: 30: return EEDATL;
 12416  14E1  0813               	movf	(403)^0180h,w	;volatile
 12417  14E2  2CE3               	goto	l9880
 12418                           	
 12419  14E3                     l18538:	
 12420                           	line	31
 12421                           	
 12422  14E3                     l9880:	
 12423  14E3  0008               	return
 12424                           	opt stack 0
 12425                           GLOBAL	__end_of_EEPROMread
 12426  14E4                     	__end_of_EEPROMread:
 12427 ;; =============== function _EEPROMread ends ============
 12428                           
 12429                           	signat	_EEPROMread,4217
 12430                           	global	_isr
 12431                           psect	intentry,class=CODE,delta=2
 12432                           global __pintentry
 12433  0004                     __pintentry:
 12434                           
 12435 ;; *************** function _isr *****************
 12436 ;; Defined at:
 12437 ;;		line 181 in file "C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
 12438 ;; Parameters:    Size  Location     Type
 12439 ;;		None
 12440 ;; Auto vars:     Size  Location     Type
 12441 ;;		None
 12442 ;; Return value:  Size  Location     Type
 12443 ;;		None               void
 12444 ;; Registers used:
 12445 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12455 ;;Total ram usage:        3 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		Interrupt level 1
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           psect	intentry
 12464                           	file	"C:\Users\Filip\Documents\MPLAB\Demo Board\main.c"
 12465                           	line	181
 12466                           	global	__size_of_isr
 12467  0038                     	__size_of_isr	equ	__end_of_isr-_isr
 12468                           	
 12469  0004                     _isr:	
 12470                           	opt	stack 12
 12471                           ; Regs used in _isr: [wreg+fsr1l-status,0]
 12472                           psect	intentry
 12473  0004  3180               	pagesel	$
 12474  0005  0020               	movlb 0	; select bank0
 12475  0006  087F               	movf	btemp+1,w
 12476  0007  00F2               	movwf	(??_isr+2)
 12477                           	line	182
 12478                           ;main.c: 182: do { if(RCIF) { RC3=1;; if(!(RCSTA&0b00000110)) { rhead++; rhead&=(8-1); r
                                 ingbuff[rhead]=RCREG; } RCIF=0; RC3=0;; } if(TXIF) { TXIF=0; } } while(0);;
 12479                           	
 12480  0008                     i1l1652:	
 12481  0008  1E91               	btfss	(141/8),(141)&7
 12482  0009  280B               	goto	u333_21
 12483  000A  280C               	goto	u333_20
 12484  000B                     u333_21:
 12485  000B  2830               	goto	i1l18590
 12486  000C                     u333_20:
 12487                           	
 12488  000C                     i1l18578:	
 12489  000C  158E               	bsf	(115/8),(115)&7
 12490                           	
 12491  000D                     i1l18580:	
 12492  000D  0023               	movlb 3	; select bank3
 12493  000E  081D               	movf	(413)^0180h,w
 12494  000F  3906               	andlw	06h
 12495  0010  1D03               	btfss	status,2
 12496  0011  2813               	goto	u334_21
 12497  0012  2814               	goto	u334_20
 12498  0013                     u334_21:
 12499  0013  282C               	goto	i1l18586
 12500  0014                     u334_20:
 12501                           	
 12502  0014                     i1l18582:	
 12503  0014  3001               	movlw	(01h)
 12504  0015  00F0               	movwf	(??_isr+0)+0
 12505  0016  0870               	movf	(??_isr+0)+0,w
 12506  0017  0020               	movlb 0	; select bank0
 12507  0018  07E7               	addwf	(_rhead),f	;volatile
 12508  0019  3007               	movlw	(07h)
 12509  001A  00F0               	movwf	(??_isr+0)+0
 12510  001B  0870               	movf	(??_isr+0)+0,w
 12511  001C  05E7               	andwf	(_rhead),f	;volatile
 12512                           	
 12513  001D                     i1l18584:	
 12514  001D  0023               	movlb 3	; select bank3
 12515  001E  0819               	movf	(409)^0180h,w	;volatile
 12516  001F  00F0               	movwf	(??_isr+0)+0
 12517  0020  01F1               	clrf	(??_isr+0)+0+1
 12518  0021  0020               	movlb 0	; select bank0
 12519  0022  0867               	movf	(_rhead),w	;volatile
 12520  0023  0709               	addwf	wreg,w
 12521  0024  3E53               	addlw	_ringbuff&0ffh
 12522  0025  0086               	movwf	fsr1l
 12523  0026  0187               	clrf fsr1h	
 12524                           	
 12525  0027  0870               	movf	0+(??_isr+0)+0,w
 12526  0028  3FC0               	movwi	[0]fsr1
 12527  0029  0871               	movf	1+(??_isr+0)+0,w
 12528  002A  3FC1               	movwi	[1]fsr1
 12529  002B  282C               	goto	i1l18586
 12530                           	
 12531  002C                     i1l1654:	
 12532                           	
 12533  002C                     i1l18586:	
 12534  002C  0020               	movlb 0	; select bank0
 12535  002D  1291               	bcf	(141/8),(141)&7
 12536                           	
 12537  002E                     i1l18588:	
 12538  002E  118E               	bcf	(115/8),(115)&7
 12539  002F  2830               	goto	i1l18590
 12540                           	
 12541  0030                     i1l1653:	
 12542                           	
 12543  0030                     i1l18590:	
 12544  0030  1E11               	btfss	(140/8),(140)&7
 12545  0031  2833               	goto	u335_21
 12546  0032  2834               	goto	u335_20
 12547  0033                     u335_21:
 12548  0033  2839               	goto	i1l1659
 12549  0034                     u335_20:
 12550                           	
 12551  0034                     i1l18592:	
 12552  0034  1211               	bcf	(140/8),(140)&7
 12553  0035  2839               	goto	i1l1659
 12554                           	
 12555  0036                     i1l1655:	
 12556  0036  2839               	goto	i1l1659
 12557                           	
 12558  0037                     i1l1656:	
 12559  0037  2839               	goto	i1l1659
 12560                           	line	183
 12561                           ;main.c: 183: do { ;} while(0);;
 12562                           	
 12563  0038                     i1l1657:	
 12564  0038  2839               	goto	i1l1659
 12565                           	
 12566  0039                     i1l1658:	
 12567                           	line	186
 12568                           	
 12569  0039                     i1l1659:	
 12570  0039  0872               	movf	(??_isr+2),w
 12571  003A  00FF               	movwf	btemp+1
 12572  003B  0009               	retfie
 12573                           	opt stack 0
 12574                           GLOBAL	__end_of_isr
 12575  003C                     	__end_of_isr:
 12576 ;; =============== function _isr ends ============
 12577                           
 12578                           	signat	_isr,88
 12579                           	global	fptotal
 12580  001A                     fptotal equ 26
 12581                           	file ""
 12582                           	line	#
 12583                           psect	functab,class=CODE,delta=2,reloc=256
 12584                           global __pfunctab
 12585  0100                     __pfunctab:
 12586                           	global	fptable
 12587  0100                     fptable:
 12588  0100  3181               	movlp high(fptable)
 12589  0101  0782               	addwf pc
 12590                           	global	fpbase
 12591  0102                     fpbase:
 12592  0102  2902               	goto fpbase	; Call via a null pointer and you will get stuck here.
 12593                           	file ""
 12594                           	line	#
 12595  0103                     fp__UARTworker:
 12596  0103  318D  2D42         	ljmp	_UARTworker
 12597                           	file ""
 12598                           	line	#
 12599  0105                     fp__nullfunc1:
 12600  0105  3181  29FF         	ljmp	_nullfunc1
 12601                           	file ""
 12602                           	line	#
 12603  0107                     fp__SPIPWMworker:
 12604  0107  3189  297D         	ljmp	_SPIPWMworker
 12605                           	file ""
 12606                           	line	#
 12607  0109                     fp__I2CPWMworker:
 12608  0109  3180  283F         	ljmp	_I2CPWMworker
 12609                           	file ""
 12610                           	line	#
 12611  010B                     fp__SPIEEworker:
 12612  010B  318B  2BB3         	ljmp	_SPIEEworker
 12613                           	file ""
 12614                           	line	#
 12615  010D                     fp__I2CEEworker:
 12616  010D  3186  2ED8         	ljmp	_I2CEEworker
 12617                           	file ""
 12618                           	line	#
 12619  010F                     fp__SPIDACworker:
 12620  010F  3196  2E28         	ljmp	_SPIDACworker
 12621                           	file ""
 12622                           	line	#
 12623  0111                     fp__I2CDACworker:
 12624  0111  318B  2B1F         	ljmp	_I2CDACworker
 12625                           	file ""
 12626                           	line	#
 12627  0113                     fp__SPIADCworker:
 12628  0113  3197  2FA3         	ljmp	_SPIADCworker
 12629                           	file ""
 12630                           	line	#
 12631  0115                     fp__I2CADCworker:
 12632  0115  318A  2A8D         	ljmp	_I2CADCworker
 12633                           	global	btemp
 12634  007E                     	btemp set 07Eh
 12635                           
 12636                           	DABS	1,126,2	;btemp
 12637                           	global	wtemp0
 12638  007E                     	wtemp0 set btemp
 12639                           global __pbssBIGRAM
 12640  22F0                     __pbssBIGRAM	equ	8944


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Aug 16 16:15:03 2012

                          pc 0002               ___bmul@product 0075                           _RD 0CA8  
                         _WR 0CA9  __size_of_UARTcharFromString 0061          ___wmul@multiplicand 0075  
             I2CDACworker@fb 0076                          _GIE 005F                          _RA2 0062  
                        _RC2 0072                          _RB4 006C                          _RC3 0073  
                        _RB6 006E                          _RC5 0075                          _PR2 001B  
                        _isr 0004                          wreg 0009              I2CDACworker@dac 0079  
            I2CEEworker@addr 0042              I2CEEworker@temp 003D                         l3300 0B90  
                       l3301 0BAA                         l3310 00BB                         l3302 0BAA  
                       l1630 01AE                         l1623 01FF                         l3311 00AB  
                       l3303 0BB1                         l1631 0165                         l3240 151E  
                       l3320 00A0                         l3312 0061                         l3304 0BB2  
                       l1632 01BD                         l3321 00DF                         l3313 00BA  
                       l3305 0BB2                         l5001 17AE                         l1633 0176  
               _I2CPWMworker 003F                         l3330 14F0                         l1642 08F9  
                       l3322 00DE                         l3314 0068                         l3250 070D  
                       l5010 17FD                         l5002 17F0                         l1634 0188  
                       l1626 0131                         l3331 14F8                         l1643 08EA  
                       l3323 00CD                         l3315 0077                         l3251 0727  
                       l3243 06E2                         l5011 17FE                         l5003 17AF  
                       l1635 019A                         l1627 0157                         l3332 14F9  
                       l1644 0908                         l3324 00D7                         l3316 0095  
                       l3308 004C                         l3244 07B9                         l3260 07B2  
                       l3252 0728                         l5012 17FF                         l5004 17EF  
                       l1636 01AC                         l1628 0158                         l1645 08EE  
                       l3325 00E3                         l3309 00E2                         l3317 0089  
                       l3261 07BA                         l3253 0742                         l3245 0773  
                       l5013 17FF                         l5005 17CD                         l1637 01BE  
                       l1629 0164                         l1646 08F2                         l3326 00E4  
                       l3318 0094                         l3262 07BB                         l3246 0764  
                       l3254 0762                         l5006 17CA                         l3270 0AAD  
                       l1638 01BF                         l1647 08F6                         l3327 00E4  
                       l3319 0096                         l3263 07BB                         l3255 07B6  
                       l3247 06F7                         l5007 17EE                         l3271 0AFC  
                       l1639 01BF                         l1648 08F7                         l3256 07B6  
                       l3248 0772                         l5008 17ED                         l3280 0B1E  
                       l3272 0AB4                         l1649 090A                         l3257 07B2  
                       l3249 06FE                         l5009 17F6                         l3281 0B1E  
                       l3273 0ABB                         l3258 079F                         l3290 0B41  
                       l3274 0AC7                         l3266 0A99                         l3259 0785  
                       l3291 0B4C                         l3267 0B1C                         l3275 0ADB  
                       l3292 0B64                         l3284 0B29                         l3276 0AEB  
                       l3268 0AFD                         l3285 0BB0                         l3293 0B5D  
                       l3277 0B14                         l3269 0AED                         l3294 0B63  
                       l3286 0BA1                         l3278 0B13                         l3287 0B92  
                       l3295 0B65                         l3279 0B1D                         l3296 0B75  
                       l3288 0B3B                         l3289 0BA0                         l3297 0B7A  
                       l3298 0B7B                         l3299 0B8B                         l4911 14EE  
                       l4921 0BC6                         l4930 0C1F                         l4922 0CF8  
                       l4931 0C27                         l4923 0BC7                         l6700 1529  
                       l4924 0CF8                         l4932 0CF7                         l4940 0C64  
                       l6701 152D                         l4941 0CA9                         l4933 0C28  
                       l4925 0BE1                         l6710 0894                         l6630 0FF1  
                       l4926 0CE3                         l4950 0CD2                         l4934 0CBB  
                       l4942 0C8D                         l8303 14C3                         l6711 0844  
                       l6631 0D8F                         l4951 0CDE                         l4935 0CB6  
                       l4943 0C8C                         l4927 0BE5                         l6624 153E  
                       l6704 15E5                         l6712 0845                         l8312 01F3  
                       l6640 0DDB                         l6632 0DAD                         l4960 0D41  
                       l4952 0CFE                         l4936 0CAB                         l4944 0CA8  
                       l4928 0C20                         l6705 15D1                         l6713 0845  
                       l8313 01C2                         l6641 0DEE                         l6633 0DB9  
                       l4961 0D41                         l4953 0D3F                         l4945 0CB5  
                       l4937 0C3D                         l4929 0C0B                         l6706 15F7  
                       l6722 080A                         l6714 084A                         l8314 01DF  
                       l8306 16FB                         l6650 0E96                         l6642 0E03  
                       l6634 0DB8                         l4970 09AA                         l4954 0D0F  
                       l4946 0CBA                         l4938 0CAA                         l6707 15F7  
                       l6723 083A                         l6715 0869                         l8315 01F2  
                       l8307 16FB                         l6635 0FFC                         l6651 0E6A  
                       l6643 0E19                         l6627 0D5B                         l4971 09C0  
                       l4955 0D3A                         l4947 0CBF                         l4939 0C65  
                       l6724 083A                         l6716 0881                         l8316 01FE  
                       l8308 16FC                         l6628 0FFD                         l6660 0ED5  
                       l6652 0E7D                         l6644 0E2F                         l6636 0DBA  
                       l4980 0A00                         l4972 09BA                         l4964 098B  
                       l4956 0D33                         l4948 0CC5                         ?_isr 0070  
                       l6717 0893                         l8317 01FE                         l8309 16FC  
                       l6661 0F07                         l6653 0E88                         l6637 0E3C  
                       l6645 0E3A                         l6629 0D81                         l4981 0A01  
                       l4973 09C4                         l4965 09F2                         l4957 0D1A  
                       l4949 0CCD                         l6718 0899                         l6670 0F30  
                       l6662 0EFB                         l6654 0ED4                         l6646 0E52  
                       l6638 0DBB                         l4982 0A02                         l4974 09F1  
                       l4966 098C                         l4958 0D3A                         l4990 1647  
                       l6719 089B                         l6671 0F33                         l6663 0EDC  
                       l6655 0EAB                         l6647 0E99                         l6639 0E51  
                       l4983 0A02                         l4967 09F2                         l4975 09C8  
                       l4959 0D40                         l4991 1656                         l6672 0FB5  
                       l6680 0FA3                         l6664 0F04                         l6656 0ED3  
                       l6648 0E8A                         l4976 09DF                         l4968 09A6  
                       l4992 1652                         l6681 0FB3                         l6673 0F8A  
                       l6665 0EEE                         l6657 0EBA                         l6649 0E58  
                       l4969 09E8                         l4977 09D9                         l4993 1655  
                       l6690 0FFE                         l6682 0FB2                         l6674 0F59  
                       l6666 0EF9                         l6658 0ED2                         l4978 09E3  
                       l4994 1663                         l4986 1635                         l6691 0FFF  
                       l6683 0FE4                         l6675 0F86                         l6667 0F32  
                       l6659 0ED1                         l4979 09F8                         l4995 166A  
                       l4987 165D                         l6692 0FFF                         l6684 0FCF  
                       l6676 0F72                         l6668 0F19                         l4996 166B  
                       l4988 1636                         l6677 0F85                         l6669 0F31  
                       l4997 166C                         l4989 165C                         l6686 0FC7  
                       l6678 0F84                         l4998 166C                         l6695 1552  
                       l6687 0FE3                         l6679 0FB4                         l6688 0FE2  
                       l6689 0FE5                         l6698 1523                         l6699 1523  
                       STR_1 06CA                         l9880 14E3                         STR_2 068B  
                       STR_3 06A0                         l9874 1564                         STR_4 06B5  
                       l9875 1564                         STR_5 0674                         l9876 1569  
                       STR_6 062B                         l9877 1569                         STR_7 060E  
                       STR_8 0585                         STR_9 05EE                         _BRGH 0CF2  
                       _CREN 0CEC                         _LATA 010C                         _LATB 010D  
                       _LATC 010E                         u4000 0D02                         u4010 0D09  
                       u4011 0D08                         u4020 0D13                         u4100 17BE  
                       u4101 17BD                         u4030 0D39                         u4110 17C5  
                       u4031 0D38                         u4111 17C4                         u3400 17A1  
                       u5000 0E56                         u4040 163B                         u4120 17D4  
                       u3401 17A0                         u4041 163A                         u4121 17D3  
                       u5010 0EA3                         u4050 1642                         u5011 0EA2  
                       u3500 157F                         u4220 01DD                         u5100 0F60  
                       u5020 0EB2                         u4060 164F                         u4140 17F5  
                       u3405 179D                         u3501 157E                         u4221 01DC  
                       u5101 0F5F                         u5021 0EB1                         u4061 164E  
                       u4141 17F4                         u3430 0A50                         u3510 158A  
                       u4230 01F1                         u5110 0F79                         u5030 0EC1  
                       u4070 1662                         u4150 17FA                         u3431 0A4F  
                       u3511 1589                         u4231 01F0                         u5111 0F78  
                       u5031 0EC0                         u4071 1661                         u4135 17DE  
                       u3360 1568                         u3440 0A65                         u4160 15F6  
                       u4240 01FD                         u5120 0F9B                         u5040 0EDA  
                       u4080 1667                         u3361 1567                         u3441 0A64  
                       u3425 0A38                         u4161 15F5                         u4241 01FC  
                       u4225 01D9                         u5121 0F9A                         u3370 14F8  
                       u3450 0A6C                         u4170 0839                         u5130 0FAA  
                       u5050 0F11                         u4090 17B4                         u3371 14F7  
                       u3451 0A6B                         u3435 0A4C                         u4171 0838  
                       u4235 01ED                         u5131 0FA9                         u5051 0F10  
                       u4091 17B3                         u3540 159E                         u3620 15FE  
                       u5140 0FC0                         u5060 0F20                         u3700 0777  
                       u3445 0A61                         u3541 159D                         u3525 158F  
                       u5141 0FBF                         u5061 0F1F                         u3701 0776  
                       u5205 0169                         u3390 178D                         u3630 160D  
                       u5150 0FC6                         u5070 0F38                         u3710 077E  
                       u3391 178C                         u3535 1594                         u3631 160C  
                       u5151 0FC5                         u5215 017A                         u3480 1528  
                       u3640 1617                         u5160 0FD6                         u5080 0F3C  
                       u3720 07B1                         u3800 0B51                         u3385 1777  
                       u3465 0A74                         u3481 1527                         u3641 1616  
                       u5161 0FD5                         u3721 07B0                         u3801 0B50  
                       u5225 018C                         u3490 1571                         u3650 1623  
                       u5090 0F42                         u3810 0B6F                         u3730 0A9E  
                       u5170 012F                         u3395 1789                         u3475 0A7A  
                       u3491 1570                         u3651 1622                         u5091 0F41  
                       u3811 0B6E                         u3731 0A9D                         u5235 019E  
                       u5171 012E                         u4700 1688                         u3900 0C2D  
                       u3660 06E7                         u3820 0B85                         u3740 0AAA  
                       u5180 0156                         u4701 1687                         u3725 07AD  
                       u3661 06E6                         u3821 0B84                         u3741 0AA9  
                       u5181 0155                         u3910 0C31                         u3670 06F4  
                       u3830 0BA5                         u3750 0AD2                         u5190 0160  
                       u3671 06F3                         u3831 0BA4                         u3751 0AD1  
                       u5191 015F                         u5175 012B                         u4720 1699  
                       u4800 0898                         u3920 0C35                         u3680 0703  
                       u4721 1698                         u3681 0702                         u5185 0152  
                       u4810 0051                         u3930 0C3B                         u3690 074D  
                       u3770 0B01                         u4715 168B                         u4811 0050  
                       u3931 0C3A                         u3691 074C                         u3771 0B00  
                       u4740 16AA                         u4900 09AE                         u4820 005E  
                       u3940 0C43                         u3860 0BCC                         u3780 0B2E  
                       _RCIF 008D                         u4741 16A9                         u4725 1695  
                       u4821 005D                         u3941 0C42                         u3861 0BCB  
                       u3781 0B2D                         u3765 0AE0                         u4750 1705  
                       u4910 09B4                         u4830 006D                         u3950 0C49  
                       u3870 0BD5                         u3790 0B38                         u4735 16A0  
                       u4751 1704                         u4911 09B3                         u4831 006C  
                       u3951 0C48                         u3871 0BD4                         u3791 0B37  
                       u4680 1676                         u4760 0913                         u4920 09CD  
                       u4840 007C                         u3960 0C6B                         u3880 0BE9  
                       u4681 1675                         u4761 0912                         u4841 007B  
                       u3961 0C6A                         u4770 0849                         u4930 09D3  
                       u4850 00BF                         u3970 0C71                         u3890 0BEE  
                       u4771 0848                         u4931 09D2                         u4851 00BE  
                       u3971 0C70                         u3891 0BED                         u4780 0851  
                       u4940 09F7                         u4860 00C8                         u3980 0CD7  
                       u4781 0850                         u4941 09F6                         u4790 087D  
                       u4950 09FC                         u4870 00D2                         u3990 0CFD  
                       u4695 167B                         u4791 087C                         u3991 0CFC  
                       u4960 0D60                         u4880 0991                         u4961 0D5F  
                       u4881 0990                         u4970 0D69                         u4890 099A  
                       u4971 0D68                         u4891 0999                         u4980 0DA9  
                       u4981 0DA8                         u4990 0DB4                         u4991 0DB3  
          I2CPWMworker@tempD 0047            I2CPWMworker@tempP 0046                         _SPEN 0CEF  
                       _TRMT 0CF1                         _WREN 0CAA                         _TXEN 0CF5  
                       _TXIF 008C                         _SYNC 0CF4                         _WPUA 020C  
                       _WPUB 020D                         _WPUC 020E            I2CPWMworker@token 0045  
               fp__nullfunc1 0105                         _doEE 16B4                         _isEE 14C1  
                       _main 0117                         _init 089C                         _mode 0068  
                       fsr0h 0005                         fsr1h 0007                         fsr0l 0004  
                       indf0 0000                         indf1 0001                         fsr1l 0006  
                       btemp 007E             __end_of_I2CWrite 14FA               SPIPWMworker@bf 0047  
             SPIPWMworker@fb 0046                         start 003C            ___bmul@multiplier 0076  
        __size_of_EEPROMread 000A             I2CDACworker@temp 0075                        S20136 1000  
                      ??_isr 0070                        l20000 0EDB                        l20002 0EDC  
                      l20010 0EFB                        l20020 0F22                        l20004 0EE3  
                      l20012 0F07                        l20100 0158                        l20030 0F42  
                      l20022 0F25                        l20014 0F11                        l20006 0EEF  
                      l20110 019A                        l20102 0160                        l20040 0F72  
                      l20032 0F4E                        l20024 0F33                        l20016 0F19  
                      l20008 0EFA                        l20112 01AD                        l20104 0165  
                      l20042 0F79                        l20034 0F59                        l20050 0F8A  
                      l20026 0F38                        l20018 0F20                        l20106 0176  
                      l20114 01AE                        ?_doEE 0070                        l20060 0FAA  
                      l20052 0F8D                        l20044 0F7A                        l20036 0F60  
                      l20028 0F3C                        l20108 0188                        l13021 14C7  
                      l20070 0FD6                        l20054 0F95                        l20038 0F67  
                      l20046 0F86                        l20062 0FB5                        l11440 0A0B  
                      l13024 0802                        l20072 0FD8                        l20064 0FC0  
                      l20056 0F9B                        l20048 0F88                        l11441 0A10  
                      l11442 0A15                        l20074 0FE6                        l20066 0FC7  
                      l20058 0FA3                        l20090 0122                        l13027 14D2  
                      l11443 0A1A                        l11452 14D9                        l11460 1758  
                      l11444 0A8C                        l20076 0FF0                        l20068 0FCF  
                      l20092 0130                        l20084 0117                        l11461 175D  
                      l11445 0A52                        l11437 0A1F                        l11462 17A2  
                      l11446 0A65                        l11438 0A06                        l20078 0FF1  
                      l20094 0131                        l20086 011C                        l11463 178F  
                      l11455 175F                        l11447 0A68                        l11439 0A2D  
                      l11464 17A2                        l11456 1749                        l11448 0A68  
                      l20096 0145                        l20088 011F                        l11457 176D  
                      l11449 0A6D                        l11458 174E                        l20098 0149  
                      l11459 1753                        l16022 156D                        l16030 159F  
                      l16023 1576                        l16031 15A6                        l16024 1580  
                      l16040 16AB                        l14601 14CC                        l16025 1582  
                      l16041 16B3                        l16034 16AC                        l16035 1684  
                      l16028 1586                        l16036 167A                        l16060 1624  
                      l16029 158E                        l16037 1689                        l16061 1627  
                      l16038 168A                        l16054 1625                        l16039 169F  
                      l16055 1609                        l16056 1602                        l16057 160E  
                      l16058 160F                        l16059 161B                        l14591 173C  
                      l14592 1746                        l19000 0B65                        l14593 1746  
                      l19010 0B80                        l19002 0B6A                        l14588 07FF  
                      l14596 0947                        l19100 0C28                        l19020 0BA5  
                      l19012 0B85                        l19004 0B6F                        l14597 097C  
                      l14598 097C                        l19110 0C3D                        l19102 0C2D  
                      l19014 0B8B                        l19006 0B75                        l19120 0C5F  
                      l19112 0C43                        l19104 0C31                        l19200 163E  
                      l19016 0B91                        l19008 0B7B                        l19130 0C86  
                      l19114 0C49                        l19122 0C65                        l19106 0C35  
                      l19210 1656                        l19202 1642                        l19018 0B92  
           I2CEEworker@token 003E                        ?_isEE 0070                        l19300 01CA  
                      l19140 0CA6                        l19132 0C87                        l19124 0C6B  
                      l19116 0C5A                        l19108 0C3C                        l19204 1647  
                      l19212 165D                        l19220 17A7                        l19310 01E4  
                      l19302 01CE                        l19150 0CC0                        l19126 0C71  
                      l19134 0C8D                        l19118 0C5E                        l19142 0CAB  
                      l19070 0BC2                        l19214 1663                        l19206 164A  
                      l19230 17C5                        l19222 17AA                        l18600 155B  
                      l19304 01D0                        l19312 01F3                        l19160 0CD2  
                      l19152 0CC5                        l19144 0CB1                        l19136 0C9E  
                      l19128 0C82                        l19080 0BE5                        l19072 0BCC  
                      l19216 1667                        l19208 164F                        l19240 17E5  
                      l19232 17CA                        l19224 17B4                        l18530 14DB  
                      l18602 155C                        l18610 14D5                        l19250 15D1  
                      l19306 01DE                        l19314 16B4                        l19170 0CFE  
                      l19162 0CD7                        l19154 0CC8                        l19138 0CA2  
                      l19146 0CB6                        l19090 0C05                        l19082 0BE9  
                      l19074 0BD5                        l19066 0BB3                        l19234 17CD  
                      l19226 17B5                        l19242 17F0                        l19218 17A3  
                      l18532 14DE                        l18540 14C1                        l18604 1561  
                      l18612 14F2                        l18620 174E                        l18700 152B  
                      l19252 15E0                        l19260 0816                        l19308 01E0  
                      l19180 0D0F                        l19172 0D02                        l19164 0CDE  
                      l19156 0CC9                        l19148 0CBB                        l19084 0BEE  
                      l19092 0C0B                        l19076 0BDB                        l19068 0BBF  
                      l19244 17F6                        l19236 17D4                        l19228 17BE  
                      l18534 14DF                        l18542 14C3                        l18550 14EC  
                      l18606 1562                        l18614 14F4                        l18622 1753  
                      l18630 176D                        l18702 153F                        l18710 14C8  
                      l19254 15E5                        l19262 081B                        l19182 0D13  
                      l19174 0D03                        l19166 0CE2                        l19158 0CCD  
                      l19094 0C19                        l19086 0BF4                        l19078 0BE1  
                      l19190 1628                        l19246 17FA                        l19238 17DB  
                      l18536 14E0                        l18544 14E4                        l18560 151A  
                      l18552 1512                        l18608 14D3                        l18640 178E  
                      l18632 1770                        l18624 1758                        l18616 1748  
                      l18704 1547                        l18712 0800                        l18720 1576  
                      l18800 08A8                        l19248 15CF                        l19264 0828  
                      l19256 0805                        l19184 0D1A                        l19176 0D09  
                      l19088 0BF7                        l19096 0C20                        l19168 0CE3  
                      l19192 162B                        l18538 14E3                        l18546 14E6  
                      l18554 1514                        l18570 1539                        l18562 152E  
                      l18642 1790                        l18634 1774                        l18626 175E  
                      l18618 1749                        l18706 1550                        l18722 1578  
                      l18714 156B                        l18730 1583                        l18810 08B3  
                      l18802 08AA                        l19266 0834                        l19258 080A  
                      l19186 0D2D                        l19178 0D0A                        l19098 0C23  
                      l19194 162E                        l18548 14EB                        l18556 1516  
                      l18572 153A                        l18564 1535                        l18644 1794  
                      l18636 177E                        l18628 175F                        l18660 0A0B  
                      l18708 1552                        l18724 157A                        l18716 156D  
                      l18740 15A6                        l18732 1586                        l19700 1699  
                      l18820 08BF                        l18812 08B5                        l18804 08AD  
                      l19188 0D33                        l18900 075C                        l19196 1631  
                      l18558 1518                        l18574 153B                        l18566 1536  
                      l18638 1780                        l18646 14C4                        l18670 0A1E  
                      l18662 0A10                        l18726 1580                        l18718 1571  
                      l18734 158A                        l19710 16B3                        l19702 169D  
                      l18830 08CB                        l18822 08C1                        l18814 08B8  
                      l18806 08AF                        l18910 077E                        l18902 0763  
                      l19198 163B                        l18576 153C                        l18568 1538  
                      l18648 14CE                        l18680 0A40                        l18664 0A15  
                      l18672 0A1F                        l18656 0A05                        l18728 1582  
                      l18736 1593                        l19704 169F                        l18840 08D1  
                      l18832 08CC                        l18824 08C4                        l18816 08BB  
                      l18808 08B1                        l19720 07F7                        l19712 07BC  
                      l19296 01C1                        l19800 005E                        l18912 0785  
                      l18904 0764                        l18920 0A92                        l18594 1554  
                      l18690 0A6D                        l18682 0A43                        l18666 0A1A  
                      l18674 0A2D                        l18658 0A06                        l18738 159F  
                      l19706 16A4                        l18770 15FE                        l18850 08EE  
                      l18842 08D7                        l18834 08CE                        l18826 08C7  
                      l18818 08BD                        l19722 07F9                        l19714 07C0  
                      l19730 16FF                        l19298 01C2                        l19810 0077  
                      l19802 0061                        l18914 0799                        l18906 0777  
                      l18930 0AAA                        l18922 0A95                        l18596 1559  
                      l18692 0A84                        l18684 0A51                        l18676 0A30  
                      l18668 0A1D                        l19708 16AC                        l18780 1617  
                      l18772 1602                        l18852 08F2                        l18844 08DD  
                      l18836 08CF                        l18828 08C9                        l19724 07FB  
                      l19716 07CC                        l19732 1705                        l19740 173C  
                      l19900 0D56                        l19820 008F                        l19812 007C  
                      l19804 0068                        l18916 079F                        l18908 077A  
                      l18860 06DD                        l18940 0AC7                        l18932 0AAD  
                      l18924 0A99                        l18598 155A                        l18694 0A8C  
                      l18686 0A53                        l18678 0A35                        l18790 1627  
                      l18782 1619                        l18774 1604                        l18854 08F8  
                      l18846 08E3                        l18838 08D0                        l19726 07FC  
                      l19718 07E2                        l19734 1731                        l19750 0947  
                      l19742 090D                        l19910 0D72                        l19902 0D5B  
                      l19822 0090                        l19814 0082                        l19806 006D  
                      l19830 00AB                        l18870 06EF                        l18862 06E0  
                      l18950 0AEC                        l18942 0ACD                        l18934 0AB4  
                      l18926 0A9E                        l18918 0A8D                        l18688 0A58  
                      l18696 1520                        l18784 161B                        l18776 1609  
                      l18768 15F9                        l18848 08EA                        l18856 08F9  
                      l18792 089C                        l19728 07FD                        l19736 1734  
                      l19752 094C                        l19744 0913                        l19760 084A  
                      l19920 0DA2                        l19912 0D81                        l19904 0D60  
                      l19840 00D2                        l19832 00BF                        l19824 0096  
                      l19816 0085                        l19808 0073                        l18880 0709  
                      l18872 06F4                        l18864 06E2                        l18960 0B0D  
                      l18944 0AD2                        l18936 0ABB                        l18952 0AED  
                      l18928 0AA5                        l18698 1529                        l19690 1676  
                      l18786 161D                        l18778 160F                        l18794 089E  
                      l19738 1739                        l19754 0964                        l19746 0917  
                      l19770 0876                        l19762 0851                        l19930 0DC2  
                      l19922 0DA9                        l19914 0D83                        l19906 0D62  
                      l19850 0984                        l19842 00D7                        l19834 00C3  
                      l19826 00A0                        l19818 0089                        l18890 072E  
                      l18882 070D                        l18874 06F7                        l18866 06E7  
                      l18858 06D8                        l18970 0B1A                        l18962 0B11  
                      l18954 0B01                        l18946 0AD5                        l18938 0AC1  
                      l19692 167A                        l18788 1625                        l18796 08A4  
                      l19748 092F                        l19780 0899                        l19772 087D  
                      l19764 085A                        l19756 083D                        l19940 0DEE  
                      l19932 0DCC                        l19924 0DAD                        l19916 0D8F  
                      l19908 0D69                        l19860 09A6                        l19852 0987  
                      l19836 00C8                        l19828 00AA                        l19844 00DF  
                      l18892 073C                        l18884 071E                        l18876 06FE  
                      l18868 06E8                        l18980 0B2E                        l18972 0B1F  
                      l18956 0B04                        l18948 0ADB                        l18964 0B14  
                      l19694 167F                        l19686 166D                        l18798 08A6  
                      l19782 089B                        l19774 0881                        l19766 0869  
                      l19758 083E                        l19950 0E0F                        l19942 0DF5  
                      l19934 0DD0                        l19926 0DB4                        l19918 0D95  
                      l19870 09C0                        l19862 09AA                        l19854 0991  
                      l19846 097D                        l19838 00CD                        l19790 004A  
                      l18894 0742                        l18886 0722                        l18878 0703  
                      l18990 0B48                        l18982 0B34                        l18974 0B22  
                      l18966 0B16                        l18958 0B09                        l19696 1684  
                      l19688 1670                        l19776 088D                        l19768 086B  
                      l19960 0E3B                        l19952 0E19                        l19944 0DF9  
                      l19936 0DDB                        l19928 0DBB                        l19880 09D9  
                      l19872 09C4                        l19864 09AE                        l19856 099A  
                      l19848 0981                        l19792 004C                        l19784 003F  
                      l18896 0748                        l18888 0728                        l18992 0B4C  
                      l18984 0B38                        l18976 0B25                        l18968 0B18  
                      l19698 168A                        l19778 0894                        l19970 0E5F  
                      l19954 0E20                        l19946 0E03                        l19938 0DE2  
                      l19962 0E3C                        l19890 09F8                        l19882 09DF  
                      l19874 09C8                        l19866 09B4                        l19858 09A0  
                      l19794 0051                        l19786 0044                        l18898 074D  
                      l18994 0B51                        l18986 0B3B                        l18978 0B29  
                      l19972 0E6A                        l19980 0E8A                        l19964 0E52  
                      l19956 0E25                        l19948 0E0A                        l19892 09FC  
                      l19884 09E3                        l19876 09CD                        l19868 09BA  
                      l19796 0052                        l19788 0047                        l18996 0B58  
                      l18988 0B43                        l19990 0EBA                        l19974 0E72  
                      l19966 0E57                        l19982 0E99                        l19958 0E30  
                      l19894 0D42                        l19886 09E7                        l19878 09D3  
                      l19798 0059                        l18998 0B5D                        l19992 0EC1  
                      l19984 0EA3                        l19976 0E7E                        l19968 0E58  
                      l19896 0D49                        l19888 09E8                        l19994 0EC3  
                      l19986 0EAB                        l19978 0E89                        l19898 0D4C  
                      l19996 0EC6                        l19988 0EB2                        l19998 0ED5  
                      ?_main 0070                        ?_init 0070                        _DACOE 08C5  
            __end_of___lbdiv 1628                        _EEADR 0191                        STR_10 05CD  
                      STR_11 04DA                        STR_12 0560                        STR_13 0513  
                      STR_14 065C                        STR_15 0644                        STR_16 05AA  
                      STR_17 048F                        STR_18 053A                        _CARRY 0018  
                      _T2CON 001C              __end_of___lwdiv 16B4             _UARTwriteDecimal 0803  
                      _RCREG 0199                        _RCSTA 019D               UARTworker@adcc 0049  
                      _PORTA 000C                        _PORTB 000D                        _PORTC 000E  
             UARTworker@addr 0046                        _TRISA 008C                        _TRISB 008D  
                      _TRISC 008E                        _TXREG 019A               UARTworker@mode 004B  
                      _eeBuf 22F0              __end_of_initI2C 151F              __end_of_initSPI 14EF  
           __end_of_UARTread 1553                        _rhead 0067               EEPROMread@addr 0073  
                      _rtail 007A                        main@i 0051                        fpbase 0102  
            __end_of_setDuty 097D           __size_of_UARTwrite 000F                  ?_UARTworker 0070  
                      status 0003                        wtemp0 007E              ___lbdiv@divisor 0073  
            ___lbdiv@counter 0076                 I2CEEworker@i 0041                 I2CEEworker@w 0040  
               __end_of_doEE 16FD                 __end_of_isEE 14C4                 __end_of_main 01C1  
               __end_of_init 090B         __size_of_EEPROMwrite 0017            I2CDACworker@token 0077  
             SPIADCworker@bf 003F               SPIADCworker@fb 0041            SPIADCworker@fInst 003E  
                     ??_doEE 0078                       ??_isEE 0073                       ??_main 004E  
                     ??_init 0074     __size_of_UARTwriteString 0029                       _ADCON0 009D  
                     _ADCON1 009E               fp__SPIEEworker 010B                       _ADRESH 009C  
                     _ADRESL 009B                       _EEADRL 0191                       _EEDATA 0193  
                     _CCPR2L 0298                       _EEDATL 0193                       _EECON1 0195  
                     _EECON2 0196                startADC16@adc 0076                       _ANSELA 018C  
                     _ANSELB 018D                       _ANSELC 018E                    I2CWrite@c 0073  
                     i1l1652 0008                       i1l1653 0030                       i1l1654 002C  
                     i1l1655 0036                       i1l1656 0037                       i1l1657 0038  
                     i1l1658 0039                       i1l1659 0039                       _FVRCON 0117  
                     u333_20 000C                       u333_21 000B                       u334_20 0014  
                     u334_21 0013                       u335_20 0034                       u335_21 0033  
                     _TMR2IF 0089                       _SPBRGH 019C                       _SPBRGL 019B  
                     _SSP2IF 00A0                       _TRISB5 046D                       _TRISC4 0474  
            UARTworker@helpC 0047               SPIDACworker@bf 0076               SPIDACworker@fb 0075  
           __end_of_enableTS 14DA                       _nWPUEN 04AF                       ___bmul 156A  
                     ___wmul 1583                       _getADC 0A03                    ??___lbdiv 0074  
           __end_of_initUART 153F                    ??___lwdiv 0077                       _msgEEw 0411  
                     _setDAC 14CD                 ?_SPIEEworker 0070            __end_of_UARTwrite 152E  
      UARTworker@instruction 004D                       _protos 0020                       clrloop 1507  
                  ??_initI2C 0073          __size_of_UARTworker 02BE                       fptable 0100  
                  ??_initSPI 0073                       fptotal 001A             __end_of_teletype 01FF  
               ??_EEPROMread 0073                    ?_I2CWrite 0070                    ??_setDuty 003D  
           ___lbdiv@dividend 0075         I2CEEworker@addressed 003F          ___bmul@multiplicand 0073  
             __pcstackCOMMON 0070           __end_of_EEPROMread 14E4                 __pidataBANK0 00E5  
            fp__SPIADCworker 0113                    ?_UARTread 0070              fp__SPIDACworker 010F  
           ___lbdiv@quotient 0077           __size_of_enableDAC 0004           __size_of_enablePWM 0044  
         SPIADCworker@chanel 0040                ??_I2CEEworker 003A                   ??_I2CWrite 0073  
                 __pbssBANK0 0053            ??_UARTwriteString 0076     __end_of_UARTwriteDecimal 083B  
                 __pmaintext 0117   __end_of_UARTcharFromString 089C                      ?___bmul 0073  
                    ?___wmul 0073                      ?_getADC 0073                   __pintentry 0004  
         __size_of_setPeriod 004A                   ??_UARTread 0073                      _DACCON0 0118  
                    _DACCON1 0119                      _CCP2CON 029A                      ?_setDAC 0070  
                 __ptext1300 0A8D                   __ptext1301 17A3                   __ptext1310 16B4  
                 __ptext1302 0B1F                   __ptext1311 01C1                   __ptext1303 1628  
                 __ptext1320 166D                   __ptext1312 083B                   __ptext1304 06D8  
                 __ptext1321 1583                   __ptext1313 0803                   __ptext1305 0BB3  
                 __ptext1330 1747                   __ptext1322 156A                   __ptext1314 15CF  
                 __ptext1306 003F                   __ptext1331 14EF                   __ptext1323 0800  
                 __ptext1315 090B                   __ptext1307 097D                   __ptext1332 14D3  
                 __ptext1324 14C8                   __ptext1316 16FD                   __ptext1308 01FF  
                 __ptext1333 1553                   __ptext1325 153F                   __ptext1317 07BC  
                 __ptext1309 0D42                   __ptext1334 152E                   __ptext1326 151F  
                 __ptext1318 089C                   __ptext1335 1512                   __ptext1327 0A03  
                 __ptext1319 15F8                   __ptext1336 14E4                   __ptext1328 14CD  
                 __ptext1337 14C1                   __ptext1329 14C4                   __ptext1338 14DA  
           UARTworker@EEaddr 004A                   _disableDAC 0800                   _disablePWM 14C8  
                    _APFCON0 011D                      _APFCON1 011E                      _CCPTMRS 029E  
                setDuty@temp 0042                ?_SPIADCworker 0070              EEPROMwrite@addr 0078  
                    i1l18580 000D                      i1l18582 0014                      i1l18590 0030  
                    i1l18592 0034                      i1l18584 001D                      i1l18586 002C  
                    i1l18578 000C                      i1l18588 002E              EEPROMwrite@data 0077  
         __size_of_nullfunc1 0001                ?_SPIDACworker 0070           UARTwriteDecimal@hC 003B  
                  ?_enableTS 0070                      _SSP2ADD 021A                      _SSP2BUF 0219  
                    _SSP2MSK 021B                   __stringtab 0200              fp__I2CADCworker 0115  
                 getADC@temp 003A                      _PWMduty 0063                    ?_initUART 0070  
        __end_of_I2CEEworker 07BC                 ??_UARTworker 0044              fp__I2CDACworker 0111  
                 _msgDACsetV 044A              SPIEEworker@WREN 0043            __end_of_enableDAC 14C8  
            fp__SPIPWMworker 0107            __end_of_enablePWM 0800              SPIEEworker@addr 004A  
           UARTwriteString@i 0078                    ?_teletype 0074       UARTcharFromString@outF 003D  
            __size_of___bmul 0019                      ___lbdiv 15F8              __size_of___wmul 0024  
            __size_of_getADC 008A                      ___lwdiv 166D              __size_of_setDAC 0006  
             ??_SPIADCworker 0078                      getADC@i 003B                      _initI2C 1512  
       __size_of_SPIEEworker 018F                      _initSPI 14E4                    _T2CONbits 001C  
             ??_SPIDACworker 0074                 __size_of_isr 0038           __end_of_UARTworker 1000  
              _mode_protocol 0066                      _msgMenu 0030                      _setDuty 090B  
                 ??_enableTS 0073         end_of_initialization 15CC            __end_of_setPeriod 1747  
                 ??_initUART 0073                      init_ram 14FA                      initloop 14FB  
          SPIPWMworker@fInst 0048                ?_I2CADCworker 0070           I2CADCworker@config 003F  
              ??_EEPROMwrite 0078            __end_of_nullfunc1 0200            SPIPWMworker@token 0044  
              ?_I2CDACworker 0070                   ??_teletype 0076                setPeriod@temp 0041  
              ?_SPIPWMworker 0070                 __pstringtext 0200                  ?_disableDAC 0070  
                ?_disablePWM 0070                    _PORTCbits 000E                    _UARTwrite 151F  
            fp__I2CPWMworker 0109                   _startADC16 1747                    _TRISAbits 008C  
                _I2CEEworker 06D8                    _TRISCbits 008E            __size_of_I2CWrite 000B  
                UARTworker@c 004C               enablePWM@tempP 0040             I2CPWMworker@addr 004B  
             ??_I2CADCworker 0077                    _PWMperiod 0064             I2CPWMworker@temp 0044  
             ??_I2CDACworker 0074               ??_SPIPWMworker 0079               __end_of___bmul 1583  
                startADC16@i 0074               __end_of___wmul 15A7               __end_of_getADC 0A8D  
        __end_of_EEPROMwrite 156A          I2CDACworker@command 0078            SPIDACworker@fInst 0074  
             __end_of_setDAC 14D3            __size_of_UARTread 0014            SPIEEworker@STATUS 0049  
            _UARTwriteString 15CF                   ?_UARTwrite 0070          start_initialization 15A7  
                __end_of_isr 003C                ?_I2CPWMworker 0070          __size_of_disableDAC 0003  
        __size_of_disablePWM 0005           UARTwriteString@str 0074         __end_of_SPIADCworker 1800  
          ?_UARTwriteDecimal 0070         __end_of_SPIDACworker 166D                  _APFCON1bits 011E  
              fp__UARTworker 0103         UARTcharFromString@c1 003E         UARTcharFromString@rC 003F  
         ??_UARTwriteDecimal 0078         SPIEEworker@addressed 0045                     ??___bmul 0074  
                   ??___wmul 0077                     ??_getADC 0075                  __pdataBANK0 0020  
                   ??_setDAC 0073                  __pbssBIGRAM 22F0                  ?_startADC16 0070  
         _UARTcharFromString 083B                  __pbssCOMMON 007A                __pcstackBANK0 003A  
             ??_I2CPWMworker 0079          ?_UARTcharFromString 0070            __size_of_enableTS 0007  
       SPIEEworker@pageIndex 003E            __size_of_initUART 0011                    __pnvBANK0 0068  
      I2CPWMworker@addressed 004A             ___lwdiv@dividend 0075                  _EEPROMwrite 1553  
                  __pfunctab 0100                    _enableDAC 14C4                    _enablePWM 07BC  
                   ?___lbdiv 0073      __end_of_UARTwriteString 15F8                     ?___lwdiv 0073  
       ??_UARTcharFromString 003A            __size_of_teletype 003E            UARTwriteDecimal@c 003A  
          UARTwriteDecimal@d 003C                   setPeriod@P 0043                    __pswtext1 1000  
                  getADC@adc 003D                     ?_initI2C 0070                     ?_initSPI 0070  
                ??_UARTwrite 0073         __end_of_I2CADCworker 0B1F               SPIEEworker@WIP 003F  
          UARTworker@EEaddrF 0048               SPIEEworker@fb2 003D                     _I2CWrite 14EF  
                   ?_setDuty 0070                    _msgEEaddr 0473         __end_of_I2CDACworker 0BB3  
       __end_of_SPIPWMworker 0A03             ___lwdiv@quotient 003B      SPIPWMworker@instruction 0045  
     SPIEEworker@instruction 0040               ___wmul@product 0077               fp__I2CEEworker 010D  
                  _setPeriod 16FD            I2CADCworker@adcON 003A          __size_of_startADC16 005C  
          I2CADCworker@token 003C                   ?_enableDAC 0070                   ?_enablePWM 0070  
                   _SSP2CON1 021D                     _SSP2CON3 021F                     _SSP2STAT 021C  
                  _nullfunc1 01FF                     _UARTread 153F                ??_SPIEEworker 003A  
               ??_disableDAC 0073                 ??_disablePWM 0073                   _ADCON0bits 009D  
          ___wmul@multiplier 0073                   UARTwrite@c 0073                 ?_I2CEEworker 0070  
      __size_of_SPIADCworker 005D        __size_of_SPIDACworker 0045             SPIEEworker@fInst 0048  
         __end_of_disableDAC 0803           __end_of_disablePWM 14CD                   _EECON1bits 0195  
                 ?_setPeriod 0070                    setDAC@dac 0073             SPIEEworker@token 0044  
        UARTcharFromString@c 003C         __end_of_I2CPWMworker 00E5                   ?_nullfunc1 0070  
           ?_UARTwriteString 0074             __size_of___lbdiv 0030             __size_of___lwdiv 0047  
               _SPIADCworker 17A3             __size_of_initI2C 000D             __size_of_initSPI 000B  
        __end_of_SPIEEworker 0D42                   _EEPROMread 14DA                 _SPIDACworker 1628  
            ___lwdiv@divisor 0073             __size_of_setDuty 0072              ___lwdiv@counter 003A  
                   _enableTS 14D3                 _SSP2CON1bits 021D                 _SSP2CON2bits 021E  
                _mode_device 0065                     _initUART 152E                SPIEEworker@bf 0042  
              SPIEEworker@fb 0041                __size_of_doEE 0049                __size_of_isEE 0003  
              __size_of_main 00AA                __size_of_init 006F                     _msgMenu0 02F6  
                   _msgMenu1 0201                     _msgMenu2 0368                     _msgMenu3 03C5  
                   _msgMenu4 027C                     clear_ram 1506                    teletype@i 0076  
                  teletype@s 0074             I2CADCworker@temp 003B                     _ringbuff 0053  
                   _teletype 01C1                  ??_enableDAC 0073                  ??_enablePWM 003D  
      __size_of_I2CADCworker 0092               I2CPWMworker@fD 0048               I2CPWMworker@fP 0049  
               _SSP2STATbits 021C        __size_of_I2CDACworker 0094        __size_of_SPIPWMworker 0086  
  __size_of_UARTwriteDecimal 0038                 ??_startADC16 0073                     intlevel1 0100  
                   setDuty@D 0041                 SPIEEworker@i 0047                  ??_setPeriod 003D  
               SPIEEworker@w 0046                 _I2CADCworker 0A8D                   _OSCCONbits 0099  
               ?_EEPROMwrite 0077              I2CADCworker@adc 003D                 _I2CDACworker 0B1F  
         __end_of_startADC16 17A3                 _SPIPWMworker 097D                  ??_nullfunc1 0073  
                _SPIEEworker 0BB3                 UARTread@temp 0074                  ?_EEPROMread 0070  
             I2CADCworker@fb 003E         __size_of_I2CEEworker 00E4                   _UARTworker 0D42  
      __size_of_I2CPWMworker 00A6  
